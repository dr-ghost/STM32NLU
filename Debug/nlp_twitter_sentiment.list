
nlp_twitter_sentiment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003acc  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000984  08003c80  08003c80  00004c80  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004604  08004604  0000697c  2**0
                  CONTENTS
  4 .ARM          00000008  08004604  08004604  00005604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800460c  0800460c  0000697c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800460c  0800460c  0000560c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004610  08004610  00005610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000097c  20000000  08004614  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000697c  2**0
                  CONTENTS
 10 .bss          000002ac  20000980  20000980  00006980  2**5
                  ALLOC
 11 ._user_heap_stack 00001004  20000c2c  20000c2c  00006980  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000697c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00007a51  00000000  00000000  000069ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001cd0  00000000  00000000  0000e3fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000004c8  00000000  00000000  000100d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000004b3  00000000  00000000  00010598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00024b65  00000000  00000000  00010a4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00007c37  00000000  00000000  000355b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000ddbaf  00000000  00000000  0003d1e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000086  00000000  00000000  0011ad96  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000013b4  00000000  00000000  0011ae1c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000104b  00000000  00000000  0011c1d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000075  00000000  00000000  0011d21b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000980 	.word	0x20000980
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08003c64 	.word	0x08003c64

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000984 	.word	0x20000984
 80001ec:	08003c64 	.word	0x08003c64

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 80002b4:	f000 b96a 	b.w	800058c <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	460c      	mov	r4, r1
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d14e      	bne.n	800037a <__udivmoddi4+0xaa>
 80002dc:	4694      	mov	ip, r2
 80002de:	458c      	cmp	ip, r1
 80002e0:	4686      	mov	lr, r0
 80002e2:	fab2 f282 	clz	r2, r2
 80002e6:	d962      	bls.n	80003ae <__udivmoddi4+0xde>
 80002e8:	b14a      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ea:	f1c2 0320 	rsb	r3, r2, #32
 80002ee:	4091      	lsls	r1, r2
 80002f0:	fa20 f303 	lsr.w	r3, r0, r3
 80002f4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002f8:	4319      	orrs	r1, r3
 80002fa:	fa00 fe02 	lsl.w	lr, r0, r2
 80002fe:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000302:	fa1f f68c 	uxth.w	r6, ip
 8000306:	fbb1 f4f7 	udiv	r4, r1, r7
 800030a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800030e:	fb07 1114 	mls	r1, r7, r4, r1
 8000312:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000316:	fb04 f106 	mul.w	r1, r4, r6
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
 8000326:	f080 8112 	bcs.w	800054e <__udivmoddi4+0x27e>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 810f 	bls.w	800054e <__udivmoddi4+0x27e>
 8000330:	3c02      	subs	r4, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a59      	subs	r1, r3, r1
 8000336:	fa1f f38e 	uxth.w	r3, lr
 800033a:	fbb1 f0f7 	udiv	r0, r1, r7
 800033e:	fb07 1110 	mls	r1, r7, r0, r1
 8000342:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000346:	fb00 f606 	mul.w	r6, r0, r6
 800034a:	429e      	cmp	r6, r3
 800034c:	d90a      	bls.n	8000364 <__udivmoddi4+0x94>
 800034e:	eb1c 0303 	adds.w	r3, ip, r3
 8000352:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
 8000356:	f080 80fc 	bcs.w	8000552 <__udivmoddi4+0x282>
 800035a:	429e      	cmp	r6, r3
 800035c:	f240 80f9 	bls.w	8000552 <__udivmoddi4+0x282>
 8000360:	4463      	add	r3, ip
 8000362:	3802      	subs	r0, #2
 8000364:	1b9b      	subs	r3, r3, r6
 8000366:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800036a:	2100      	movs	r1, #0
 800036c:	b11d      	cbz	r5, 8000376 <__udivmoddi4+0xa6>
 800036e:	40d3      	lsrs	r3, r2
 8000370:	2200      	movs	r2, #0
 8000372:	e9c5 3200 	strd	r3, r2, [r5]
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d905      	bls.n	800038a <__udivmoddi4+0xba>
 800037e:	b10d      	cbz	r5, 8000384 <__udivmoddi4+0xb4>
 8000380:	e9c5 0100 	strd	r0, r1, [r5]
 8000384:	2100      	movs	r1, #0
 8000386:	4608      	mov	r0, r1
 8000388:	e7f5      	b.n	8000376 <__udivmoddi4+0xa6>
 800038a:	fab3 f183 	clz	r1, r3
 800038e:	2900      	cmp	r1, #0
 8000390:	d146      	bne.n	8000420 <__udivmoddi4+0x150>
 8000392:	42a3      	cmp	r3, r4
 8000394:	d302      	bcc.n	800039c <__udivmoddi4+0xcc>
 8000396:	4290      	cmp	r0, r2
 8000398:	f0c0 80f0 	bcc.w	800057c <__udivmoddi4+0x2ac>
 800039c:	1a86      	subs	r6, r0, r2
 800039e:	eb64 0303 	sbc.w	r3, r4, r3
 80003a2:	2001      	movs	r0, #1
 80003a4:	2d00      	cmp	r5, #0
 80003a6:	d0e6      	beq.n	8000376 <__udivmoddi4+0xa6>
 80003a8:	e9c5 6300 	strd	r6, r3, [r5]
 80003ac:	e7e3      	b.n	8000376 <__udivmoddi4+0xa6>
 80003ae:	2a00      	cmp	r2, #0
 80003b0:	f040 8090 	bne.w	80004d4 <__udivmoddi4+0x204>
 80003b4:	eba1 040c 	sub.w	r4, r1, ip
 80003b8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003bc:	fa1f f78c 	uxth.w	r7, ip
 80003c0:	2101      	movs	r1, #1
 80003c2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003c6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ca:	fb08 4416 	mls	r4, r8, r6, r4
 80003ce:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003d2:	fb07 f006 	mul.w	r0, r7, r6
 80003d6:	4298      	cmp	r0, r3
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x11c>
 80003da:	eb1c 0303 	adds.w	r3, ip, r3
 80003de:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x11a>
 80003e4:	4298      	cmp	r0, r3
 80003e6:	f200 80cd 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003ea:	4626      	mov	r6, r4
 80003ec:	1a1c      	subs	r4, r3, r0
 80003ee:	fa1f f38e 	uxth.w	r3, lr
 80003f2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003f6:	fb08 4410 	mls	r4, r8, r0, r4
 80003fa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003fe:	fb00 f707 	mul.w	r7, r0, r7
 8000402:	429f      	cmp	r7, r3
 8000404:	d908      	bls.n	8000418 <__udivmoddi4+0x148>
 8000406:	eb1c 0303 	adds.w	r3, ip, r3
 800040a:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
 800040e:	d202      	bcs.n	8000416 <__udivmoddi4+0x146>
 8000410:	429f      	cmp	r7, r3
 8000412:	f200 80b0 	bhi.w	8000576 <__udivmoddi4+0x2a6>
 8000416:	4620      	mov	r0, r4
 8000418:	1bdb      	subs	r3, r3, r7
 800041a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800041e:	e7a5      	b.n	800036c <__udivmoddi4+0x9c>
 8000420:	f1c1 0620 	rsb	r6, r1, #32
 8000424:	408b      	lsls	r3, r1
 8000426:	fa22 f706 	lsr.w	r7, r2, r6
 800042a:	431f      	orrs	r7, r3
 800042c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000430:	fa04 f301 	lsl.w	r3, r4, r1
 8000434:	ea43 030c 	orr.w	r3, r3, ip
 8000438:	40f4      	lsrs	r4, r6
 800043a:	fa00 f801 	lsl.w	r8, r0, r1
 800043e:	0c38      	lsrs	r0, r7, #16
 8000440:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000444:	fbb4 fef0 	udiv	lr, r4, r0
 8000448:	fa1f fc87 	uxth.w	ip, r7
 800044c:	fb00 441e 	mls	r4, r0, lr, r4
 8000450:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000454:	fb0e f90c 	mul.w	r9, lr, ip
 8000458:	45a1      	cmp	r9, r4
 800045a:	fa02 f201 	lsl.w	r2, r2, r1
 800045e:	d90a      	bls.n	8000476 <__udivmoddi4+0x1a6>
 8000460:	193c      	adds	r4, r7, r4
 8000462:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
 8000466:	f080 8084 	bcs.w	8000572 <__udivmoddi4+0x2a2>
 800046a:	45a1      	cmp	r9, r4
 800046c:	f240 8081 	bls.w	8000572 <__udivmoddi4+0x2a2>
 8000470:	f1ae 0e02 	sub.w	lr, lr, #2
 8000474:	443c      	add	r4, r7
 8000476:	eba4 0409 	sub.w	r4, r4, r9
 800047a:	fa1f f983 	uxth.w	r9, r3
 800047e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000482:	fb00 4413 	mls	r4, r0, r3, r4
 8000486:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800048a:	fb03 fc0c 	mul.w	ip, r3, ip
 800048e:	45a4      	cmp	ip, r4
 8000490:	d907      	bls.n	80004a2 <__udivmoddi4+0x1d2>
 8000492:	193c      	adds	r4, r7, r4
 8000494:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
 8000498:	d267      	bcs.n	800056a <__udivmoddi4+0x29a>
 800049a:	45a4      	cmp	ip, r4
 800049c:	d965      	bls.n	800056a <__udivmoddi4+0x29a>
 800049e:	3b02      	subs	r3, #2
 80004a0:	443c      	add	r4, r7
 80004a2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004a6:	fba0 9302 	umull	r9, r3, r0, r2
 80004aa:	eba4 040c 	sub.w	r4, r4, ip
 80004ae:	429c      	cmp	r4, r3
 80004b0:	46ce      	mov	lr, r9
 80004b2:	469c      	mov	ip, r3
 80004b4:	d351      	bcc.n	800055a <__udivmoddi4+0x28a>
 80004b6:	d04e      	beq.n	8000556 <__udivmoddi4+0x286>
 80004b8:	b155      	cbz	r5, 80004d0 <__udivmoddi4+0x200>
 80004ba:	ebb8 030e 	subs.w	r3, r8, lr
 80004be:	eb64 040c 	sbc.w	r4, r4, ip
 80004c2:	fa04 f606 	lsl.w	r6, r4, r6
 80004c6:	40cb      	lsrs	r3, r1
 80004c8:	431e      	orrs	r6, r3
 80004ca:	40cc      	lsrs	r4, r1
 80004cc:	e9c5 6400 	strd	r6, r4, [r5]
 80004d0:	2100      	movs	r1, #0
 80004d2:	e750      	b.n	8000376 <__udivmoddi4+0xa6>
 80004d4:	f1c2 0320 	rsb	r3, r2, #32
 80004d8:	fa20 f103 	lsr.w	r1, r0, r3
 80004dc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e0:	fa24 f303 	lsr.w	r3, r4, r3
 80004e4:	4094      	lsls	r4, r2
 80004e6:	430c      	orrs	r4, r1
 80004e8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004ec:	fa00 fe02 	lsl.w	lr, r0, r2
 80004f0:	fa1f f78c 	uxth.w	r7, ip
 80004f4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004f8:	fb08 3110 	mls	r1, r8, r0, r3
 80004fc:	0c23      	lsrs	r3, r4, #16
 80004fe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000502:	fb00 f107 	mul.w	r1, r0, r7
 8000506:	4299      	cmp	r1, r3
 8000508:	d908      	bls.n	800051c <__udivmoddi4+0x24c>
 800050a:	eb1c 0303 	adds.w	r3, ip, r3
 800050e:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
 8000512:	d22c      	bcs.n	800056e <__udivmoddi4+0x29e>
 8000514:	4299      	cmp	r1, r3
 8000516:	d92a      	bls.n	800056e <__udivmoddi4+0x29e>
 8000518:	3802      	subs	r0, #2
 800051a:	4463      	add	r3, ip
 800051c:	1a5b      	subs	r3, r3, r1
 800051e:	b2a4      	uxth	r4, r4
 8000520:	fbb3 f1f8 	udiv	r1, r3, r8
 8000524:	fb08 3311 	mls	r3, r8, r1, r3
 8000528:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800052c:	fb01 f307 	mul.w	r3, r1, r7
 8000530:	42a3      	cmp	r3, r4
 8000532:	d908      	bls.n	8000546 <__udivmoddi4+0x276>
 8000534:	eb1c 0404 	adds.w	r4, ip, r4
 8000538:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
 800053c:	d213      	bcs.n	8000566 <__udivmoddi4+0x296>
 800053e:	42a3      	cmp	r3, r4
 8000540:	d911      	bls.n	8000566 <__udivmoddi4+0x296>
 8000542:	3902      	subs	r1, #2
 8000544:	4464      	add	r4, ip
 8000546:	1ae4      	subs	r4, r4, r3
 8000548:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800054c:	e739      	b.n	80003c2 <__udivmoddi4+0xf2>
 800054e:	4604      	mov	r4, r0
 8000550:	e6f0      	b.n	8000334 <__udivmoddi4+0x64>
 8000552:	4608      	mov	r0, r1
 8000554:	e706      	b.n	8000364 <__udivmoddi4+0x94>
 8000556:	45c8      	cmp	r8, r9
 8000558:	d2ae      	bcs.n	80004b8 <__udivmoddi4+0x1e8>
 800055a:	ebb9 0e02 	subs.w	lr, r9, r2
 800055e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000562:	3801      	subs	r0, #1
 8000564:	e7a8      	b.n	80004b8 <__udivmoddi4+0x1e8>
 8000566:	4631      	mov	r1, r6
 8000568:	e7ed      	b.n	8000546 <__udivmoddi4+0x276>
 800056a:	4603      	mov	r3, r0
 800056c:	e799      	b.n	80004a2 <__udivmoddi4+0x1d2>
 800056e:	4630      	mov	r0, r6
 8000570:	e7d4      	b.n	800051c <__udivmoddi4+0x24c>
 8000572:	46d6      	mov	lr, sl
 8000574:	e77f      	b.n	8000476 <__udivmoddi4+0x1a6>
 8000576:	4463      	add	r3, ip
 8000578:	3802      	subs	r0, #2
 800057a:	e74d      	b.n	8000418 <__udivmoddi4+0x148>
 800057c:	4606      	mov	r6, r0
 800057e:	4623      	mov	r3, r4
 8000580:	4608      	mov	r0, r1
 8000582:	e70f      	b.n	80003a4 <__udivmoddi4+0xd4>
 8000584:	3e02      	subs	r6, #2
 8000586:	4463      	add	r3, ip
 8000588:	e730      	b.n	80003ec <__udivmoddi4+0x11c>
 800058a:	bf00      	nop

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000590:	b510      	push	{r4, lr}
 8000592:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000594:	2214      	movs	r2, #20
 8000596:	2100      	movs	r1, #0
 8000598:	a809      	add	r0, sp, #36	@ 0x24
 800059a:	f002 fc51 	bl	8002e40 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800059e:	2214      	movs	r2, #20
 80005a0:	2100      	movs	r1, #0
 80005a2:	a803      	add	r0, sp, #12
 80005a4:	f002 fc4c 	bl	8002e40 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80005a8:	2300      	movs	r3, #0
 80005aa:	4a21      	ldr	r2, [pc, #132]	@ (8000630 <SystemClock_Config+0xa0>)
 80005ac:	9301      	str	r3, [sp, #4]
 80005ae:	6c11      	ldr	r1, [r2, #64]	@ 0x40
 80005b0:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80005b4:	6411      	str	r1, [r2, #64]	@ 0x40
 80005b6:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 80005b8:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 80005bc:	9201      	str	r2, [sp, #4]
 80005be:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80005c0:	4a1c      	ldr	r2, [pc, #112]	@ (8000634 <SystemClock_Config+0xa4>)
 80005c2:	9302      	str	r3, [sp, #8]
 80005c4:	6811      	ldr	r1, [r2, #0]
 80005c6:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
 80005ca:	6011      	str	r1, [r2, #0]
 80005cc:	6812      	ldr	r2, [r2, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80005ce:	2402      	movs	r4, #2
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80005d0:	f402 4240 	and.w	r2, r2, #49152	@ 0xc000
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 180;
 80005d4:	2008      	movs	r0, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80005d6:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80005da:	9202      	str	r2, [sp, #8]
  RCC_OscInitStruct.PLL.PLLN = 180;
 80005dc:	23b4      	movs	r3, #180	@ 0xb4
 80005de:	e9cd 0310 	strd	r0, r3, [sp, #64]	@ 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80005e2:	9a02      	ldr	r2, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80005e4:	9408      	str	r4, [sp, #32]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80005e6:	2101      	movs	r1, #1
 80005e8:	2210      	movs	r2, #16
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80005ea:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80005ec:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80005ee:	e9cd 120b 	strd	r1, r2, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80005f2:	9412      	str	r4, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80005f4:	9313      	str	r3, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80005f6:	f000 f993 	bl	8000920 <HAL_RCC_OscConfig>
 80005fa:	b108      	cbz	r0, 8000600 <SystemClock_Config+0x70>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80005fc:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80005fe:	e7fe      	b.n	80005fe <SystemClock_Config+0x6e>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000600:	f000 f954 	bl	80008ac <HAL_PWREx_EnableOverDrive>
 8000604:	b108      	cbz	r0, 800060a <SystemClock_Config+0x7a>
 8000606:	b672      	cpsid	i
  while (1)
 8000608:	e7fe      	b.n	8000608 <SystemClock_Config+0x78>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800060a:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800060c:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000610:	9005      	str	r0, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000612:	f44f 52a0 	mov.w	r2, #5120	@ 0x1400
 8000616:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800061a:	2105      	movs	r1, #5
 800061c:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800061e:	e9cd 2306 	strd	r2, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000622:	f000 fb59 	bl	8000cd8 <HAL_RCC_ClockConfig>
 8000626:	b108      	cbz	r0, 800062c <SystemClock_Config+0x9c>
 8000628:	b672      	cpsid	i
  while (1)
 800062a:	e7fe      	b.n	800062a <SystemClock_Config+0x9a>
}
 800062c:	b014      	add	sp, #80	@ 0x50
 800062e:	bd10      	pop	{r4, pc}
 8000630:	40023800 	.word	0x40023800
 8000634:	40007000 	.word	0x40007000

08000638 <main>:
{
 8000638:	b507      	push	{r0, r1, r2, lr}
  HAL_Init();
 800063a:	f000 f8b3 	bl	80007a4 <HAL_Init>
  SystemClock_Config();
 800063e:	f7ff ffa7 	bl	8000590 <SystemClock_Config>
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000642:	2300      	movs	r3, #0
 8000644:	9301      	str	r3, [sp, #4]
 8000646:	4b07      	ldr	r3, [pc, #28]	@ (8000664 <main+0x2c>)
 8000648:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800064a:	f042 0201 	orr.w	r2, r2, #1
 800064e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000650:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000652:	f003 0301 	and.w	r3, r3, #1
 8000656:	9301      	str	r3, [sp, #4]
 8000658:	9b01      	ldr	r3, [sp, #4]
  MX_X_CUBE_AI_Init();
 800065a:	f000 fc15 	bl	8000e88 <MX_X_CUBE_AI_Init>
  MX_X_CUBE_AI_Process();
 800065e:	f000 fc4d 	bl	8000efc <MX_X_CUBE_AI_Process>
  while (1)
 8000662:	e7fc      	b.n	800065e <main+0x26>
 8000664:	40023800 	.word	0x40023800

08000668 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000668:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800066a:	4b0c      	ldr	r3, [pc, #48]	@ (800069c <HAL_MspInit+0x34>)
 800066c:	2100      	movs	r1, #0
 800066e:	9100      	str	r1, [sp, #0]
 8000670:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000672:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8000676:	645a      	str	r2, [r3, #68]	@ 0x44
 8000678:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800067a:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 800067e:	9200      	str	r2, [sp, #0]
 8000680:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000682:	9101      	str	r1, [sp, #4]
 8000684:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000686:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800068a:	641a      	str	r2, [r3, #64]	@ 0x40
 800068c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800068e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000692:	9301      	str	r3, [sp, #4]
 8000694:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000696:	b002      	add	sp, #8
 8000698:	4770      	bx	lr
 800069a:	bf00      	nop
 800069c:	40023800 	.word	0x40023800

080006a0 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80006a0:	e7fe      	b.n	80006a0 <NMI_Handler>

080006a2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80006a2:	e7fe      	b.n	80006a2 <HardFault_Handler>

080006a4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80006a4:	e7fe      	b.n	80006a4 <MemManage_Handler>

080006a6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80006a6:	e7fe      	b.n	80006a6 <BusFault_Handler>

080006a8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80006a8:	e7fe      	b.n	80006a8 <UsageFault_Handler>

080006aa <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80006aa:	4770      	bx	lr

080006ac <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80006ac:	4770      	bx	lr

080006ae <PendSV_Handler>:
}

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 80006ae:	4770      	bx	lr

080006b0 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80006b0:	f000 b892 	b.w	80007d8 <HAL_IncTick>

080006b4 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80006b4:	4a0b      	ldr	r2, [pc, #44]	@ (80006e4 <_sbrk+0x30>)
 80006b6:	6811      	ldr	r1, [r2, #0]
{
 80006b8:	b510      	push	{r4, lr}
 80006ba:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80006bc:	b909      	cbnz	r1, 80006c2 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80006be:	490a      	ldr	r1, [pc, #40]	@ (80006e8 <_sbrk+0x34>)
 80006c0:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80006c2:	6810      	ldr	r0, [r2, #0]
 80006c4:	4909      	ldr	r1, [pc, #36]	@ (80006ec <_sbrk+0x38>)
 80006c6:	4c0a      	ldr	r4, [pc, #40]	@ (80006f0 <_sbrk+0x3c>)
 80006c8:	4403      	add	r3, r0
 80006ca:	1b09      	subs	r1, r1, r4
 80006cc:	428b      	cmp	r3, r1
 80006ce:	d906      	bls.n	80006de <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80006d0:	f002 fbce 	bl	8002e70 <__errno>
 80006d4:	230c      	movs	r3, #12
 80006d6:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80006d8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80006dc:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80006de:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80006e0:	e7fc      	b.n	80006dc <_sbrk+0x28>
 80006e2:	bf00      	nop
 80006e4:	2000099c 	.word	0x2000099c
 80006e8:	20000c30 	.word	0x20000c30
 80006ec:	20030000 	.word	0x20030000
 80006f0:	00000800 	.word	0x00000800

080006f4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80006f4:	4a03      	ldr	r2, [pc, #12]	@ (8000704 <SystemInit+0x10>)
 80006f6:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 80006fa:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80006fe:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000702:	4770      	bx	lr
 8000704:	e000ed00 	.word	0xe000ed00

08000708 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000708:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000740 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800070c:	f7ff fff2 	bl	80006f4 <SystemInit>
 
/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000710:	480c      	ldr	r0, [pc, #48]	@ (8000744 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000712:	490d      	ldr	r1, [pc, #52]	@ (8000748 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000714:	4a0d      	ldr	r2, [pc, #52]	@ (800074c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8000716:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000718:	e002      	b.n	8000720 <LoopCopyDataInit>

0800071a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800071a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800071c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800071e:	3304      	adds	r3, #4

08000720 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000720:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000722:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000724:	d3f9      	bcc.n	800071a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000726:	4a0a      	ldr	r2, [pc, #40]	@ (8000750 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8000728:	4c0a      	ldr	r4, [pc, #40]	@ (8000754 <LoopFillZerobss+0x22>)
  movs r3, #0
 800072a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800072c:	e001      	b.n	8000732 <LoopFillZerobss>

0800072e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800072e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000730:	3204      	adds	r2, #4

08000732 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000732:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000734:	d3fb      	bcc.n	800072e <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 8000736:	f002 fba1 	bl	8002e7c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800073a:	f7ff ff7d 	bl	8000638 <main>
  bx  lr    
 800073e:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000740:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000744:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000748:	2000097c 	.word	0x2000097c
  ldr r2, =_sidata
 800074c:	08004614 	.word	0x08004614
  ldr r2, =_sbss
 8000750:	20000980 	.word	0x20000980
  ldr r4, =_ebss
 8000754:	20000c2c 	.word	0x20000c2c

08000758 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000758:	e7fe      	b.n	8000758 <ADC_IRQHandler>
	...

0800075c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800075c:	b538      	push	{r3, r4, r5, lr}
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800075e:	4b0e      	ldr	r3, [pc, #56]	@ (8000798 <HAL_InitTick+0x3c>)
 8000760:	781a      	ldrb	r2, [r3, #0]
 8000762:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000766:	fbb3 f3f2 	udiv	r3, r3, r2
 800076a:	4a0c      	ldr	r2, [pc, #48]	@ (800079c <HAL_InitTick+0x40>)
{
 800076c:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800076e:	6810      	ldr	r0, [r2, #0]
 8000770:	fbb0 f0f3 	udiv	r0, r0, r3
 8000774:	f000 f886 	bl	8000884 <HAL_SYSTICK_Config>
 8000778:	4604      	mov	r4, r0
 800077a:	b958      	cbnz	r0, 8000794 <HAL_InitTick+0x38>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800077c:	2d0f      	cmp	r5, #15
 800077e:	d809      	bhi.n	8000794 <HAL_InitTick+0x38>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000780:	4602      	mov	r2, r0
 8000782:	4629      	mov	r1, r5
 8000784:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000788:	f000 f84a 	bl	8000820 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800078c:	4b04      	ldr	r3, [pc, #16]	@ (80007a0 <HAL_InitTick+0x44>)
 800078e:	4620      	mov	r0, r4
 8000790:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 8000792:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8000794:	2001      	movs	r0, #1
 8000796:	e7fc      	b.n	8000792 <HAL_InitTick+0x36>
 8000798:	20000004 	.word	0x20000004
 800079c:	20000000 	.word	0x20000000
 80007a0:	20000008 	.word	0x20000008

080007a4 <HAL_Init>:
{
 80007a4:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80007a6:	4b0b      	ldr	r3, [pc, #44]	@ (80007d4 <HAL_Init+0x30>)
 80007a8:	681a      	ldr	r2, [r3, #0]
 80007aa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80007ae:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80007b0:	681a      	ldr	r2, [r3, #0]
 80007b2:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80007b6:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80007b8:	681a      	ldr	r2, [r3, #0]
 80007ba:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80007be:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80007c0:	2003      	movs	r0, #3
 80007c2:	f000 f81b 	bl	80007fc <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 80007c6:	200f      	movs	r0, #15
 80007c8:	f7ff ffc8 	bl	800075c <HAL_InitTick>
  HAL_MspInit();
 80007cc:	f7ff ff4c 	bl	8000668 <HAL_MspInit>
}
 80007d0:	2000      	movs	r0, #0
 80007d2:	bd08      	pop	{r3, pc}
 80007d4:	40023c00 	.word	0x40023c00

080007d8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80007d8:	4a03      	ldr	r2, [pc, #12]	@ (80007e8 <HAL_IncTick+0x10>)
 80007da:	4b04      	ldr	r3, [pc, #16]	@ (80007ec <HAL_IncTick+0x14>)
 80007dc:	6811      	ldr	r1, [r2, #0]
 80007de:	781b      	ldrb	r3, [r3, #0]
 80007e0:	440b      	add	r3, r1
 80007e2:	6013      	str	r3, [r2, #0]
}
 80007e4:	4770      	bx	lr
 80007e6:	bf00      	nop
 80007e8:	200009a0 	.word	0x200009a0
 80007ec:	20000004 	.word	0x20000004

080007f0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80007f0:	4b01      	ldr	r3, [pc, #4]	@ (80007f8 <HAL_GetTick+0x8>)
 80007f2:	6818      	ldr	r0, [r3, #0]
}
 80007f4:	4770      	bx	lr
 80007f6:	bf00      	nop
 80007f8:	200009a0 	.word	0x200009a0

080007fc <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80007fc:	4907      	ldr	r1, [pc, #28]	@ (800081c <HAL_NVIC_SetPriorityGrouping+0x20>)
 80007fe:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000800:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8000804:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000806:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8000808:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800080c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800080e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8000810:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000814:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8000818:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800081a:	4770      	bx	lr
 800081c:	e000ed00 	.word	0xe000ed00

08000820 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000820:	4b16      	ldr	r3, [pc, #88]	@ (800087c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8000822:	b530      	push	{r4, r5, lr}
 8000824:	68dc      	ldr	r4, [r3, #12]
 8000826:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800082a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800082e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8000830:	2b04      	cmp	r3, #4
 8000832:	bf28      	it	cs
 8000834:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000836:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000838:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800083c:	bf8c      	ite	hi
 800083e:	3c03      	subhi	r4, #3
 8000840:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000842:	fa05 f303 	lsl.w	r3, r5, r3
 8000846:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800084a:	40a5      	lsls	r5, r4
 800084c:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000850:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8000852:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000854:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000858:	bfac      	ite	ge
 800085a:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800085e:	4a08      	ldrlt	r2, [pc, #32]	@ (8000880 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000860:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000864:	bfb8      	it	lt
 8000866:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800086a:	b2db      	uxtb	r3, r3
 800086c:	bfaa      	itet	ge
 800086e:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000872:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000874:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8000878:	bd30      	pop	{r4, r5, pc}
 800087a:	bf00      	nop
 800087c:	e000ed00 	.word	0xe000ed00
 8000880:	e000ed14 	.word	0xe000ed14

08000884 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000884:	3801      	subs	r0, #1
 8000886:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 800088a:	d20b      	bcs.n	80008a4 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800088c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000890:	4a05      	ldr	r2, [pc, #20]	@ (80008a8 <HAL_SYSTICK_Config+0x24>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000892:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000894:	21f0      	movs	r1, #240	@ 0xf0
 8000896:	f882 1023 	strb.w	r1, [r2, #35]	@ 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800089a:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800089c:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800089e:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80008a0:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80008a2:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80008a4:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80008a6:	4770      	bx	lr
 80008a8:	e000ed00 	.word	0xe000ed00

080008ac <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80008ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80008ae:	2300      	movs	r3, #0
 80008b0:	9301      	str	r3, [sp, #4]
 80008b2:	4b18      	ldr	r3, [pc, #96]	@ (8000914 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80008b4:	4d18      	ldr	r5, [pc, #96]	@ (8000918 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80008b6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80008b8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80008bc:	641a      	str	r2, [r3, #64]	@ 0x40
 80008be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80008c0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80008c4:	9301      	str	r3, [sp, #4]
 80008c6:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80008c8:	4b14      	ldr	r3, [pc, #80]	@ (800091c <HAL_PWREx_EnableOverDrive+0x70>)
 80008ca:	2201      	movs	r2, #1
 80008cc:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 80008ce:	f7ff ff8f 	bl	80007f0 <HAL_GetTick>
 80008d2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80008d4:	686b      	ldr	r3, [r5, #4]
 80008d6:	03da      	lsls	r2, r3, #15
 80008d8:	d50b      	bpl.n	80008f2 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80008da:	4b10      	ldr	r3, [pc, #64]	@ (800091c <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80008dc:	4d0e      	ldr	r5, [pc, #56]	@ (8000918 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80008de:	2201      	movs	r2, #1
 80008e0:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 80008e2:	f7ff ff85 	bl	80007f0 <HAL_GetTick>
 80008e6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80008e8:	686b      	ldr	r3, [r5, #4]
 80008ea:	039b      	lsls	r3, r3, #14
 80008ec:	d50a      	bpl.n	8000904 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80008ee:	2000      	movs	r0, #0
 80008f0:	e006      	b.n	8000900 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80008f2:	f7ff ff7d 	bl	80007f0 <HAL_GetTick>
 80008f6:	1b00      	subs	r0, r0, r4
 80008f8:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80008fc:	d9ea      	bls.n	80008d4 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 80008fe:	2003      	movs	r0, #3
}
 8000900:	b003      	add	sp, #12
 8000902:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8000904:	f7ff ff74 	bl	80007f0 <HAL_GetTick>
 8000908:	1b00      	subs	r0, r0, r4
 800090a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800090e:	d9eb      	bls.n	80008e8 <HAL_PWREx_EnableOverDrive+0x3c>
 8000910:	e7f5      	b.n	80008fe <HAL_PWREx_EnableOverDrive+0x52>
 8000912:	bf00      	nop
 8000914:	40023800 	.word	0x40023800
 8000918:	40007000 	.word	0x40007000
 800091c:	420e0000 	.word	0x420e0000

08000920 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8000920:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8000924:	4604      	mov	r4, r0
 8000926:	b340      	cbz	r0, 800097a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8000928:	6803      	ldr	r3, [r0, #0]
 800092a:	07de      	lsls	r6, r3, #31
 800092c:	d410      	bmi.n	8000950 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800092e:	6823      	ldr	r3, [r4, #0]
 8000930:	079d      	lsls	r5, r3, #30
 8000932:	d45b      	bmi.n	80009ec <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8000934:	6823      	ldr	r3, [r4, #0]
 8000936:	0719      	lsls	r1, r3, #28
 8000938:	f100 809d 	bmi.w	8000a76 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800093c:	6823      	ldr	r3, [r4, #0]
 800093e:	075a      	lsls	r2, r3, #29
 8000940:	f100 80bd 	bmi.w	8000abe <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8000944:	69a3      	ldr	r3, [r4, #24]
 8000946:	2b00      	cmp	r3, #0
 8000948:	f040 8124 	bne.w	8000b94 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800094c:	2000      	movs	r0, #0
 800094e:	e02c      	b.n	80009aa <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8000950:	4b8d      	ldr	r3, [pc, #564]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
 8000952:	689a      	ldr	r2, [r3, #8]
 8000954:	f002 020c 	and.w	r2, r2, #12
 8000958:	2a04      	cmp	r2, #4
 800095a:	d007      	beq.n	800096c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800095c:	689a      	ldr	r2, [r3, #8]
 800095e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8000962:	2a08      	cmp	r2, #8
 8000964:	d10b      	bne.n	800097e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8000966:	685b      	ldr	r3, [r3, #4]
 8000968:	0259      	lsls	r1, r3, #9
 800096a:	d508      	bpl.n	800097e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800096c:	4b86      	ldr	r3, [pc, #536]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
 800096e:	681b      	ldr	r3, [r3, #0]
 8000970:	039a      	lsls	r2, r3, #14
 8000972:	d5dc      	bpl.n	800092e <HAL_RCC_OscConfig+0xe>
 8000974:	6863      	ldr	r3, [r4, #4]
 8000976:	2b00      	cmp	r3, #0
 8000978:	d1d9      	bne.n	800092e <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800097a:	2001      	movs	r0, #1
 800097c:	e015      	b.n	80009aa <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800097e:	6863      	ldr	r3, [r4, #4]
 8000980:	4d81      	ldr	r5, [pc, #516]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
 8000982:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8000986:	d113      	bne.n	80009b0 <HAL_RCC_OscConfig+0x90>
 8000988:	682b      	ldr	r3, [r5, #0]
 800098a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800098e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8000990:	f7ff ff2e 	bl	80007f0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8000994:	4e7c      	ldr	r6, [pc, #496]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8000996:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8000998:	6833      	ldr	r3, [r6, #0]
 800099a:	039b      	lsls	r3, r3, #14
 800099c:	d4c7      	bmi.n	800092e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800099e:	f7ff ff27 	bl	80007f0 <HAL_GetTick>
 80009a2:	1b40      	subs	r0, r0, r5
 80009a4:	2864      	cmp	r0, #100	@ 0x64
 80009a6:	d9f7      	bls.n	8000998 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80009a8:	2003      	movs	r0, #3
}
 80009aa:	b002      	add	sp, #8
 80009ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80009b0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80009b4:	d104      	bne.n	80009c0 <HAL_RCC_OscConfig+0xa0>
 80009b6:	682b      	ldr	r3, [r5, #0]
 80009b8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80009bc:	602b      	str	r3, [r5, #0]
 80009be:	e7e3      	b.n	8000988 <HAL_RCC_OscConfig+0x68>
 80009c0:	682a      	ldr	r2, [r5, #0]
 80009c2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80009c6:	602a      	str	r2, [r5, #0]
 80009c8:	682a      	ldr	r2, [r5, #0]
 80009ca:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80009ce:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80009d0:	2b00      	cmp	r3, #0
 80009d2:	d1dd      	bne.n	8000990 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 80009d4:	f7ff ff0c 	bl	80007f0 <HAL_GetTick>
 80009d8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80009da:	682b      	ldr	r3, [r5, #0]
 80009dc:	039f      	lsls	r7, r3, #14
 80009de:	d5a6      	bpl.n	800092e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80009e0:	f7ff ff06 	bl	80007f0 <HAL_GetTick>
 80009e4:	1b80      	subs	r0, r0, r6
 80009e6:	2864      	cmp	r0, #100	@ 0x64
 80009e8:	d9f7      	bls.n	80009da <HAL_RCC_OscConfig+0xba>
 80009ea:	e7dd      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80009ec:	4b66      	ldr	r3, [pc, #408]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
 80009ee:	689a      	ldr	r2, [r3, #8]
 80009f0:	f012 0f0c 	tst.w	r2, #12
 80009f4:	d007      	beq.n	8000a06 <HAL_RCC_OscConfig+0xe6>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80009f6:	689a      	ldr	r2, [r3, #8]
 80009f8:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80009fc:	2a08      	cmp	r2, #8
 80009fe:	d111      	bne.n	8000a24 <HAL_RCC_OscConfig+0x104>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8000a00:	685b      	ldr	r3, [r3, #4]
 8000a02:	025d      	lsls	r5, r3, #9
 8000a04:	d40e      	bmi.n	8000a24 <HAL_RCC_OscConfig+0x104>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8000a06:	4a60      	ldr	r2, [pc, #384]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
 8000a08:	6813      	ldr	r3, [r2, #0]
 8000a0a:	0799      	lsls	r1, r3, #30
 8000a0c:	d502      	bpl.n	8000a14 <HAL_RCC_OscConfig+0xf4>
 8000a0e:	68e3      	ldr	r3, [r4, #12]
 8000a10:	2b01      	cmp	r3, #1
 8000a12:	d1b2      	bne.n	800097a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8000a14:	6813      	ldr	r3, [r2, #0]
 8000a16:	6921      	ldr	r1, [r4, #16]
 8000a18:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8000a1c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8000a20:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8000a22:	e787      	b.n	8000934 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8000a24:	68e2      	ldr	r2, [r4, #12]
 8000a26:	4b59      	ldr	r3, [pc, #356]	@ (8000b8c <HAL_RCC_OscConfig+0x26c>)
 8000a28:	b1b2      	cbz	r2, 8000a58 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8000a2a:	2201      	movs	r2, #1
 8000a2c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8000a2e:	f7ff fedf 	bl	80007f0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000a32:	4d55      	ldr	r5, [pc, #340]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8000a34:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000a36:	682b      	ldr	r3, [r5, #0]
 8000a38:	079b      	lsls	r3, r3, #30
 8000a3a:	d507      	bpl.n	8000a4c <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8000a3c:	682b      	ldr	r3, [r5, #0]
 8000a3e:	6922      	ldr	r2, [r4, #16]
 8000a40:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8000a44:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8000a48:	602b      	str	r3, [r5, #0]
 8000a4a:	e773      	b.n	8000934 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8000a4c:	f7ff fed0 	bl	80007f0 <HAL_GetTick>
 8000a50:	1b80      	subs	r0, r0, r6
 8000a52:	2802      	cmp	r0, #2
 8000a54:	d9ef      	bls.n	8000a36 <HAL_RCC_OscConfig+0x116>
 8000a56:	e7a7      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8000a58:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8000a5a:	f7ff fec9 	bl	80007f0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8000a5e:	4e4a      	ldr	r6, [pc, #296]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8000a60:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8000a62:	6833      	ldr	r3, [r6, #0]
 8000a64:	079f      	lsls	r7, r3, #30
 8000a66:	f57f af65 	bpl.w	8000934 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8000a6a:	f7ff fec1 	bl	80007f0 <HAL_GetTick>
 8000a6e:	1b40      	subs	r0, r0, r5
 8000a70:	2802      	cmp	r0, #2
 8000a72:	d9f6      	bls.n	8000a62 <HAL_RCC_OscConfig+0x142>
 8000a74:	e798      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8000a76:	6962      	ldr	r2, [r4, #20]
 8000a78:	4b44      	ldr	r3, [pc, #272]	@ (8000b8c <HAL_RCC_OscConfig+0x26c>)
 8000a7a:	b182      	cbz	r2, 8000a9e <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8000a7c:	2201      	movs	r2, #1
 8000a7e:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8000a82:	f7ff feb5 	bl	80007f0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8000a86:	4e40      	ldr	r6, [pc, #256]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8000a88:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8000a8a:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8000a8c:	079b      	lsls	r3, r3, #30
 8000a8e:	f53f af55 	bmi.w	800093c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8000a92:	f7ff fead 	bl	80007f0 <HAL_GetTick>
 8000a96:	1b40      	subs	r0, r0, r5
 8000a98:	2802      	cmp	r0, #2
 8000a9a:	d9f6      	bls.n	8000a8a <HAL_RCC_OscConfig+0x16a>
 8000a9c:	e784      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8000a9e:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8000aa2:	f7ff fea5 	bl	80007f0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8000aa6:	4e38      	ldr	r6, [pc, #224]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8000aa8:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8000aaa:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8000aac:	079f      	lsls	r7, r3, #30
 8000aae:	f57f af45 	bpl.w	800093c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8000ab2:	f7ff fe9d 	bl	80007f0 <HAL_GetTick>
 8000ab6:	1b40      	subs	r0, r0, r5
 8000ab8:	2802      	cmp	r0, #2
 8000aba:	d9f6      	bls.n	8000aaa <HAL_RCC_OscConfig+0x18a>
 8000abc:	e774      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8000abe:	4b32      	ldr	r3, [pc, #200]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
 8000ac0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000ac2:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8000ac6:	d128      	bne.n	8000b1a <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	9201      	str	r2, [sp, #4]
 8000aca:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000acc:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000ad0:	641a      	str	r2, [r3, #64]	@ 0x40
 8000ad2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ad4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ad8:	9301      	str	r3, [sp, #4]
 8000ada:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8000adc:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8000ade:	4d2c      	ldr	r5, [pc, #176]	@ (8000b90 <HAL_RCC_OscConfig+0x270>)
 8000ae0:	682b      	ldr	r3, [r5, #0]
 8000ae2:	05d8      	lsls	r0, r3, #23
 8000ae4:	d51b      	bpl.n	8000b1e <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8000ae6:	68a3      	ldr	r3, [r4, #8]
 8000ae8:	4d27      	ldr	r5, [pc, #156]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
 8000aea:	2b01      	cmp	r3, #1
 8000aec:	d127      	bne.n	8000b3e <HAL_RCC_OscConfig+0x21e>
 8000aee:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8000af0:	f043 0301 	orr.w	r3, r3, #1
 8000af4:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8000af6:	f7ff fe7b 	bl	80007f0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8000afa:	4e23      	ldr	r6, [pc, #140]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8000afc:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000afe:	f241 3888 	movw	r8, #5000	@ 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8000b02:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8000b04:	079a      	lsls	r2, r3, #30
 8000b06:	d539      	bpl.n	8000b7c <HAL_RCC_OscConfig+0x25c>
    if(pwrclkchanged == SET)
 8000b08:	2f00      	cmp	r7, #0
 8000b0a:	f43f af1b 	beq.w	8000944 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8000b0e:	4a1e      	ldr	r2, [pc, #120]	@ (8000b88 <HAL_RCC_OscConfig+0x268>)
 8000b10:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8000b12:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8000b16:	6413      	str	r3, [r2, #64]	@ 0x40
 8000b18:	e714      	b.n	8000944 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8000b1a:	2700      	movs	r7, #0
 8000b1c:	e7df      	b.n	8000ade <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8000b1e:	682b      	ldr	r3, [r5, #0]
 8000b20:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000b24:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8000b26:	f7ff fe63 	bl	80007f0 <HAL_GetTick>
 8000b2a:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8000b2c:	682b      	ldr	r3, [r5, #0]
 8000b2e:	05d9      	lsls	r1, r3, #23
 8000b30:	d4d9      	bmi.n	8000ae6 <HAL_RCC_OscConfig+0x1c6>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8000b32:	f7ff fe5d 	bl	80007f0 <HAL_GetTick>
 8000b36:	1b80      	subs	r0, r0, r6
 8000b38:	2802      	cmp	r0, #2
 8000b3a:	d9f7      	bls.n	8000b2c <HAL_RCC_OscConfig+0x20c>
 8000b3c:	e734      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8000b3e:	2b05      	cmp	r3, #5
 8000b40:	d104      	bne.n	8000b4c <HAL_RCC_OscConfig+0x22c>
 8000b42:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8000b44:	f043 0304 	orr.w	r3, r3, #4
 8000b48:	672b      	str	r3, [r5, #112]	@ 0x70
 8000b4a:	e7d0      	b.n	8000aee <HAL_RCC_OscConfig+0x1ce>
 8000b4c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8000b4e:	f022 0201 	bic.w	r2, r2, #1
 8000b52:	672a      	str	r2, [r5, #112]	@ 0x70
 8000b54:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8000b56:	f022 0204 	bic.w	r2, r2, #4
 8000b5a:	672a      	str	r2, [r5, #112]	@ 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	d1ca      	bne.n	8000af6 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8000b60:	f7ff fe46 	bl	80007f0 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000b64:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8000b68:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8000b6a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8000b6c:	079b      	lsls	r3, r3, #30
 8000b6e:	d5cb      	bpl.n	8000b08 <HAL_RCC_OscConfig+0x1e8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000b70:	f7ff fe3e 	bl	80007f0 <HAL_GetTick>
 8000b74:	1b80      	subs	r0, r0, r6
 8000b76:	4540      	cmp	r0, r8
 8000b78:	d9f7      	bls.n	8000b6a <HAL_RCC_OscConfig+0x24a>
 8000b7a:	e715      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000b7c:	f7ff fe38 	bl	80007f0 <HAL_GetTick>
 8000b80:	1b40      	subs	r0, r0, r5
 8000b82:	4540      	cmp	r0, r8
 8000b84:	d9bd      	bls.n	8000b02 <HAL_RCC_OscConfig+0x1e2>
 8000b86:	e70f      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
 8000b88:	40023800 	.word	0x40023800
 8000b8c:	42470000 	.word	0x42470000
 8000b90:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8000b94:	4d37      	ldr	r5, [pc, #220]	@ (8000c74 <HAL_RCC_OscConfig+0x354>)
 8000b96:	68aa      	ldr	r2, [r5, #8]
 8000b98:	f002 020c 	and.w	r2, r2, #12
 8000b9c:	2a08      	cmp	r2, #8
 8000b9e:	d03e      	beq.n	8000c1e <HAL_RCC_OscConfig+0x2fe>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8000ba0:	2b02      	cmp	r3, #2
 8000ba2:	4b35      	ldr	r3, [pc, #212]	@ (8000c78 <HAL_RCC_OscConfig+0x358>)
 8000ba4:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8000ba8:	661a      	str	r2, [r3, #96]	@ 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8000baa:	d12b      	bne.n	8000c04 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8000bac:	f7ff fe20 	bl	80007f0 <HAL_GetTick>
 8000bb0:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000bb2:	682b      	ldr	r3, [r5, #0]
 8000bb4:	0199      	lsls	r1, r3, #6
 8000bb6:	d41f      	bmi.n	8000bf8 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8000bb8:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8000bbc:	4313      	orrs	r3, r2
 8000bbe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8000bc0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8000bc4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8000bc6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000bca:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8000bcc:	0852      	lsrs	r2, r2, #1
 8000bce:	3a01      	subs	r2, #1
 8000bd0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000bd4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8000bd6:	4b28      	ldr	r3, [pc, #160]	@ (8000c78 <HAL_RCC_OscConfig+0x358>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000bd8:	4d26      	ldr	r5, [pc, #152]	@ (8000c74 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8000bda:	2201      	movs	r2, #1
 8000bdc:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8000bde:	f7ff fe07 	bl	80007f0 <HAL_GetTick>
 8000be2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000be4:	682b      	ldr	r3, [r5, #0]
 8000be6:	019a      	lsls	r2, r3, #6
 8000be8:	f53f aeb0 	bmi.w	800094c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000bec:	f7ff fe00 	bl	80007f0 <HAL_GetTick>
 8000bf0:	1b00      	subs	r0, r0, r4
 8000bf2:	2802      	cmp	r0, #2
 8000bf4:	d9f6      	bls.n	8000be4 <HAL_RCC_OscConfig+0x2c4>
 8000bf6:	e6d7      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000bf8:	f7ff fdfa 	bl	80007f0 <HAL_GetTick>
 8000bfc:	1b80      	subs	r0, r0, r6
 8000bfe:	2802      	cmp	r0, #2
 8000c00:	d9d7      	bls.n	8000bb2 <HAL_RCC_OscConfig+0x292>
 8000c02:	e6d1      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8000c04:	f7ff fdf4 	bl	80007f0 <HAL_GetTick>
 8000c08:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000c0a:	682b      	ldr	r3, [r5, #0]
 8000c0c:	019b      	lsls	r3, r3, #6
 8000c0e:	f57f ae9d 	bpl.w	800094c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000c12:	f7ff fded 	bl	80007f0 <HAL_GetTick>
 8000c16:	1b00      	subs	r0, r0, r4
 8000c18:	2802      	cmp	r0, #2
 8000c1a:	d9f6      	bls.n	8000c0a <HAL_RCC_OscConfig+0x2ea>
 8000c1c:	e6c4      	b.n	80009a8 <HAL_RCC_OscConfig+0x88>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8000c1e:	2b01      	cmp	r3, #1
 8000c20:	f43f aeab 	beq.w	800097a <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8000c24:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8000c26:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8000c28:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8000c2c:	4291      	cmp	r1, r2
 8000c2e:	f47f aea4 	bne.w	800097a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8000c32:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8000c34:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8000c38:	428a      	cmp	r2, r1
 8000c3a:	f47f ae9e 	bne.w	800097a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8000c3e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8000c40:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8000c44:	401a      	ands	r2, r3
 8000c46:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8000c4a:	f47f ae96 	bne.w	800097a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8000c4e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8000c50:	0852      	lsrs	r2, r2, #1
 8000c52:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8000c56:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8000c58:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8000c5c:	f47f ae8d 	bne.w	800097a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8000c60:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8000c62:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8000c66:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8000c6a:	bf14      	ite	ne
 8000c6c:	2001      	movne	r0, #1
 8000c6e:	2000      	moveq	r0, #0
 8000c70:	e69b      	b.n	80009aa <HAL_RCC_OscConfig+0x8a>
 8000c72:	bf00      	nop
 8000c74:	40023800 	.word	0x40023800
 8000c78:	42470000 	.word	0x42470000

08000c7c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8000c7c:	4913      	ldr	r1, [pc, #76]	@ (8000ccc <HAL_RCC_GetSysClockFreq+0x50>)
{
 8000c7e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8000c80:	688b      	ldr	r3, [r1, #8]
 8000c82:	f003 030c 	and.w	r3, r3, #12
 8000c86:	2b04      	cmp	r3, #4
 8000c88:	d01c      	beq.n	8000cc4 <HAL_RCC_GetSysClockFreq+0x48>
 8000c8a:	2b08      	cmp	r3, #8
 8000c8c:	d11c      	bne.n	8000cc8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8000c8e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8000c90:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8000c92:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8000c94:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8000c98:	bf14      	ite	ne
 8000c9a:	480d      	ldrne	r0, [pc, #52]	@ (8000cd0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8000c9c:	480d      	ldreq	r0, [pc, #52]	@ (8000cd4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8000c9e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8000ca2:	bf18      	it	ne
 8000ca4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8000ca6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8000caa:	fba1 0100 	umull	r0, r1, r1, r0
 8000cae:	f7ff faf7 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8000cb2:	4b06      	ldr	r3, [pc, #24]	@ (8000ccc <HAL_RCC_GetSysClockFreq+0x50>)
 8000cb4:	685b      	ldr	r3, [r3, #4]
 8000cb6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8000cba:	3301      	adds	r3, #1
 8000cbc:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8000cbe:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8000cc2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8000cc4:	4802      	ldr	r0, [pc, #8]	@ (8000cd0 <HAL_RCC_GetSysClockFreq+0x54>)
 8000cc6:	e7fc      	b.n	8000cc2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8000cc8:	4802      	ldr	r0, [pc, #8]	@ (8000cd4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8000cca:	e7fa      	b.n	8000cc2 <HAL_RCC_GetSysClockFreq+0x46>
 8000ccc:	40023800 	.word	0x40023800
 8000cd0:	017d7840 	.word	0x017d7840
 8000cd4:	00f42400 	.word	0x00f42400

08000cd8 <HAL_RCC_ClockConfig>:
{
 8000cd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cdc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8000cde:	4604      	mov	r4, r0
 8000ce0:	b910      	cbnz	r0, 8000ce8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8000ce2:	2001      	movs	r0, #1
}
 8000ce4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8000ce8:	4b43      	ldr	r3, [pc, #268]	@ (8000df8 <HAL_RCC_ClockConfig+0x120>)
 8000cea:	681a      	ldr	r2, [r3, #0]
 8000cec:	f002 020f 	and.w	r2, r2, #15
 8000cf0:	428a      	cmp	r2, r1
 8000cf2:	d328      	bcc.n	8000d46 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8000cf4:	6821      	ldr	r1, [r4, #0]
 8000cf6:	078f      	lsls	r7, r1, #30
 8000cf8:	d42d      	bmi.n	8000d56 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8000cfa:	07c8      	lsls	r0, r1, #31
 8000cfc:	d440      	bmi.n	8000d80 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8000cfe:	4b3e      	ldr	r3, [pc, #248]	@ (8000df8 <HAL_RCC_ClockConfig+0x120>)
 8000d00:	681a      	ldr	r2, [r3, #0]
 8000d02:	f002 020f 	and.w	r2, r2, #15
 8000d06:	42aa      	cmp	r2, r5
 8000d08:	d865      	bhi.n	8000dd6 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8000d0a:	6822      	ldr	r2, [r4, #0]
 8000d0c:	0751      	lsls	r1, r2, #29
 8000d0e:	d46b      	bmi.n	8000de8 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8000d10:	0713      	lsls	r3, r2, #28
 8000d12:	d507      	bpl.n	8000d24 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8000d14:	4a39      	ldr	r2, [pc, #228]	@ (8000dfc <HAL_RCC_ClockConfig+0x124>)
 8000d16:	6921      	ldr	r1, [r4, #16]
 8000d18:	6893      	ldr	r3, [r2, #8]
 8000d1a:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8000d1e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8000d22:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8000d24:	f7ff ffaa 	bl	8000c7c <HAL_RCC_GetSysClockFreq>
 8000d28:	4b34      	ldr	r3, [pc, #208]	@ (8000dfc <HAL_RCC_ClockConfig+0x124>)
 8000d2a:	4a35      	ldr	r2, [pc, #212]	@ (8000e00 <HAL_RCC_ClockConfig+0x128>)
 8000d2c:	689b      	ldr	r3, [r3, #8]
 8000d2e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8000d32:	5cd3      	ldrb	r3, [r2, r3]
 8000d34:	40d8      	lsrs	r0, r3
 8000d36:	4b33      	ldr	r3, [pc, #204]	@ (8000e04 <HAL_RCC_ClockConfig+0x12c>)
 8000d38:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8000d3a:	4b33      	ldr	r3, [pc, #204]	@ (8000e08 <HAL_RCC_ClockConfig+0x130>)
 8000d3c:	6818      	ldr	r0, [r3, #0]
 8000d3e:	f7ff fd0d 	bl	800075c <HAL_InitTick>
  return HAL_OK;
 8000d42:	2000      	movs	r0, #0
 8000d44:	e7ce      	b.n	8000ce4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8000d46:	b2ca      	uxtb	r2, r1
 8000d48:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8000d4a:	681b      	ldr	r3, [r3, #0]
 8000d4c:	f003 030f 	and.w	r3, r3, #15
 8000d50:	428b      	cmp	r3, r1
 8000d52:	d1c6      	bne.n	8000ce2 <HAL_RCC_ClockConfig+0xa>
 8000d54:	e7ce      	b.n	8000cf4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8000d56:	4b29      	ldr	r3, [pc, #164]	@ (8000dfc <HAL_RCC_ClockConfig+0x124>)
 8000d58:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8000d5c:	bf1e      	ittt	ne
 8000d5e:	689a      	ldrne	r2, [r3, #8]
 8000d60:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8000d64:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8000d66:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8000d68:	bf42      	ittt	mi
 8000d6a:	689a      	ldrmi	r2, [r3, #8]
 8000d6c:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8000d70:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8000d72:	689a      	ldr	r2, [r3, #8]
 8000d74:	68a0      	ldr	r0, [r4, #8]
 8000d76:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8000d7a:	4302      	orrs	r2, r0
 8000d7c:	609a      	str	r2, [r3, #8]
 8000d7e:	e7bc      	b.n	8000cfa <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8000d80:	6862      	ldr	r2, [r4, #4]
 8000d82:	4b1e      	ldr	r3, [pc, #120]	@ (8000dfc <HAL_RCC_ClockConfig+0x124>)
 8000d84:	2a01      	cmp	r2, #1
 8000d86:	d11c      	bne.n	8000dc2 <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8000d88:	681b      	ldr	r3, [r3, #0]
 8000d8a:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000d8e:	d0a8      	beq.n	8000ce2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8000d90:	4e1a      	ldr	r6, [pc, #104]	@ (8000dfc <HAL_RCC_ClockConfig+0x124>)
 8000d92:	68b3      	ldr	r3, [r6, #8]
 8000d94:	f023 0303 	bic.w	r3, r3, #3
 8000d98:	4313      	orrs	r3, r2
 8000d9a:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8000d9c:	f7ff fd28 	bl	80007f0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000da0:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8000da4:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8000da6:	68b3      	ldr	r3, [r6, #8]
 8000da8:	6862      	ldr	r2, [r4, #4]
 8000daa:	f003 030c 	and.w	r3, r3, #12
 8000dae:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8000db2:	d0a4      	beq.n	8000cfe <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8000db4:	f7ff fd1c 	bl	80007f0 <HAL_GetTick>
 8000db8:	1bc0      	subs	r0, r0, r7
 8000dba:	4540      	cmp	r0, r8
 8000dbc:	d9f3      	bls.n	8000da6 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8000dbe:	2003      	movs	r0, #3
 8000dc0:	e790      	b.n	8000ce4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8000dc2:	1e91      	subs	r1, r2, #2
 8000dc4:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000dc6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8000dc8:	d802      	bhi.n	8000dd0 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000dca:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8000dce:	e7de      	b.n	8000d8e <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000dd0:	f013 0f02 	tst.w	r3, #2
 8000dd4:	e7db      	b.n	8000d8e <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8000dd6:	b2ea      	uxtb	r2, r5
 8000dd8:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	f003 030f 	and.w	r3, r3, #15
 8000de0:	42ab      	cmp	r3, r5
 8000de2:	f47f af7e 	bne.w	8000ce2 <HAL_RCC_ClockConfig+0xa>
 8000de6:	e790      	b.n	8000d0a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8000de8:	4904      	ldr	r1, [pc, #16]	@ (8000dfc <HAL_RCC_ClockConfig+0x124>)
 8000dea:	68e0      	ldr	r0, [r4, #12]
 8000dec:	688b      	ldr	r3, [r1, #8]
 8000dee:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8000df2:	4303      	orrs	r3, r0
 8000df4:	608b      	str	r3, [r1, #8]
 8000df6:	e78b      	b.n	8000d10 <HAL_RCC_ClockConfig+0x38>
 8000df8:	40023c00 	.word	0x40023c00
 8000dfc:	40023800 	.word	0x40023800
 8000e00:	08003c90 	.word	0x08003c90
 8000e04:	20000000 	.word	0x20000000
 8000e08:	20000008 	.word	0x20000008

08000e0c <acquire_and_process_data>:
  return 0;
}

/* USER CODE BEGIN 2 */
int acquire_and_process_data(void* data)
{
 8000e0c:	b570      	push	{r4, r5, r6, lr}
      data[idx] = ....
  }

  */

  char sentence[] = "Hello World I am hungryyy bad!!";
 8000e0e:	4b17      	ldr	r3, [pc, #92]	@ (8000e6c <acquire_and_process_data+0x60>)
{
 8000e10:	b088      	sub	sp, #32
  char sentence[] = "Hello World I am hungryyy bad!!";
 8000e12:	466a      	mov	r2, sp
 8000e14:	f103 0620 	add.w	r6, r3, #32
 8000e18:	4614      	mov	r4, r2
 8000e1a:	6818      	ldr	r0, [r3, #0]
 8000e1c:	6859      	ldr	r1, [r3, #4]
 8000e1e:	4615      	mov	r5, r2
 8000e20:	c503      	stmia	r5!, {r0, r1}
 8000e22:	3308      	adds	r3, #8
 8000e24:	42b3      	cmp	r3, r6
 8000e26:	462a      	mov	r2, r5
 8000e28:	d1f7      	bne.n	8000e1a <acquire_and_process_data+0xe>
  int str_len = strlen(sentence);
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	f7ff f9e0 	bl	80001f0 <strlen>
		  if (sentence[j] == ' ')
		  {
			  i++;
			  continue;
		  }
		  ((ai_float *)data_ins[idx])[i] += (ai_float)sentence[j];
 8000e30:	4b0f      	ldr	r3, [pc, #60]	@ (8000e70 <acquire_and_process_data+0x64>)
 8000e32:	681e      	ldr	r6, [r3, #0]
	  for (int j = 0; j < str_len; ++j)
 8000e34:	2300      	movs	r3, #0
	  int i = 0;
 8000e36:	4619      	mov	r1, r3
	  for (int j = 0; j < str_len; ++j)
 8000e38:	4283      	cmp	r3, r0
 8000e3a:	db02      	blt.n	8000e42 <acquire_and_process_data+0x36>
	 ((ai_float *)data_ins[idx])[9] = 3.0;
  */

  }
  return 0;
}
 8000e3c:	2000      	movs	r0, #0
 8000e3e:	b008      	add	sp, #32
 8000e40:	bd70      	pop	{r4, r5, r6, pc}
		  if (sentence[j] == ' ')
 8000e42:	f814 2b01 	ldrb.w	r2, [r4], #1
 8000e46:	2a20      	cmp	r2, #32
		  ((ai_float *)data_ins[idx])[i] += (ai_float)sentence[j];
 8000e48:	bf1f      	itttt	ne
 8000e4a:	ee07 2a90 	vmovne	s15, r2
 8000e4e:	eb06 0581 	addne.w	r5, r6, r1, lsl #2
 8000e52:	eef8 7a67 	vcvtne.f32.u32	s15, s15
 8000e56:	ed95 7a00 	vldrne	s14, [r5]
 8000e5a:	bf16      	itet	ne
 8000e5c:	ee77 7a27 	vaddne.f32	s15, s14, s15
			  i++;
 8000e60:	3101      	addeq	r1, #1
		  ((ai_float *)data_ins[idx])[i] += (ai_float)sentence[j];
 8000e62:	edc5 7a00 	vstrne	s15, [r5]
	  for (int j = 0; j < str_len; ++j)
 8000e66:	3301      	adds	r3, #1
 8000e68:	e7e6      	b.n	8000e38 <acquire_and_process_data+0x2c>
 8000e6a:	bf00      	nop
 8000e6c:	08003ca0 	.word	0x08003ca0
 8000e70:	20000a3c 	.word	0x20000a3c

08000e74 <post_process>:
  }

  */
  for (int idx=0; idx < AI_NLP_OUT_NUM; idx++ )
  {
	 outs[0] = ((ai_float *)data_outs)[0];
 8000e74:	4b02      	ldr	r3, [pc, #8]	@ (8000e80 <post_process+0xc>)
 8000e76:	681a      	ldr	r2, [r3, #0]
 8000e78:	4b02      	ldr	r3, [pc, #8]	@ (8000e84 <post_process+0x10>)

  }
  return 0;
}
 8000e7a:	2000      	movs	r0, #0
	 outs[0] = ((ai_float *)data_outs)[0];
 8000e7c:	601a      	str	r2, [r3, #0]
}
 8000e7e:	4770      	bx	lr
 8000e80:	20000a38 	.word	0x20000a38
 8000e84:	200009a4 	.word	0x200009a4

08000e88 <MX_X_CUBE_AI_Init>:
/* USER CODE END 2 */

/* Entry points --------------------------------------------------------------*/

void MX_X_CUBE_AI_Init(void)
{
 8000e88:	b570      	push	{r4, r5, r6, lr}
  err = ai_nlp_create_and_init(&nlp, act_addr, NULL);
 8000e8a:	4c13      	ldr	r4, [pc, #76]	@ (8000ed8 <MX_X_CUBE_AI_Init+0x50>)
    /* USER CODE BEGIN 5 */
    printf("\r\nTEMPLATE - initialization\r\n");
 8000e8c:	4813      	ldr	r0, [pc, #76]	@ (8000edc <MX_X_CUBE_AI_Init+0x54>)
 8000e8e:	f001 ffcf 	bl	8002e30 <puts>
  err = ai_nlp_create_and_init(&nlp, act_addr, NULL);
 8000e92:	4913      	ldr	r1, [pc, #76]	@ (8000ee0 <MX_X_CUBE_AI_Init+0x58>)
 8000e94:	2200      	movs	r2, #0
 8000e96:	4620      	mov	r0, r4
 8000e98:	f000 f954 	bl	8001144 <ai_nlp_create_and_init>
  if (err.type != AI_ERROR_NONE) {
 8000e9c:	f010 05ff 	ands.w	r5, r0, #255	@ 0xff
 8000ea0:	d006      	beq.n	8000eb0 <MX_X_CUBE_AI_Init+0x28>
    printf("TEMPLATE - Error (%s) - type=0x%02x code=0x%02x\r\n", fct,
 8000ea2:	0a03      	lsrs	r3, r0, #8
 8000ea4:	490f      	ldr	r1, [pc, #60]	@ (8000ee4 <MX_X_CUBE_AI_Init+0x5c>)
 8000ea6:	4810      	ldr	r0, [pc, #64]	@ (8000ee8 <MX_X_CUBE_AI_Init+0x60>)
 8000ea8:	462a      	mov	r2, r5
 8000eaa:	f001 ff59 	bl	8002d60 <iprintf>
  do {} while (1);
 8000eae:	e7fe      	b.n	8000eae <MX_X_CUBE_AI_Init+0x26>
  ai_input = ai_nlp_inputs_get(nlp, NULL);
 8000eb0:	4629      	mov	r1, r5
 8000eb2:	6820      	ldr	r0, [r4, #0]
 8000eb4:	4e0d      	ldr	r6, [pc, #52]	@ (8000eec <MX_X_CUBE_AI_Init+0x64>)
 8000eb6:	f000 f86f 	bl	8000f98 <ai_nlp_inputs_get>
  ai_output = ai_nlp_outputs_get(nlp, NULL);
 8000eba:	4629      	mov	r1, r5
  ai_input = ai_nlp_inputs_get(nlp, NULL);
 8000ebc:	6030      	str	r0, [r6, #0]
  ai_output = ai_nlp_outputs_get(nlp, NULL);
 8000ebe:	6820      	ldr	r0, [r4, #0]
 8000ec0:	f000 f874 	bl	8000fac <ai_nlp_outputs_get>
 8000ec4:	4b0a      	ldr	r3, [pc, #40]	@ (8000ef0 <MX_X_CUBE_AI_Init+0x68>)
 8000ec6:	6018      	str	r0, [r3, #0]
	data_ins[idx] = ai_input[idx].data;
 8000ec8:	6833      	ldr	r3, [r6, #0]
 8000eca:	685a      	ldr	r2, [r3, #4]
 8000ecc:	4b09      	ldr	r3, [pc, #36]	@ (8000ef4 <MX_X_CUBE_AI_Init+0x6c>)
 8000ece:	601a      	str	r2, [r3, #0]
	data_outs[idx] = ai_output[idx].data;
 8000ed0:	4b09      	ldr	r3, [pc, #36]	@ (8000ef8 <MX_X_CUBE_AI_Init+0x70>)
 8000ed2:	6842      	ldr	r2, [r0, #4]
 8000ed4:	601a      	str	r2, [r3, #0]

    ai_boostrap (data_activations0);
    /* USER CODE END 5 */
}
 8000ed6:	bd70      	pop	{r4, r5, r6, pc}
 8000ed8:	200009b8 	.word	0x200009b8
 8000edc:	08003cc0 	.word	0x08003cc0
 8000ee0:	2000000c 	.word	0x2000000c
 8000ee4:	08003cdd 	.word	0x08003cdd
 8000ee8:	08003cf4 	.word	0x08003cf4
 8000eec:	200009b4 	.word	0x200009b4
 8000ef0:	200009b0 	.word	0x200009b0
 8000ef4:	20000a3c 	.word	0x20000a3c
 8000ef8:	20000a38 	.word	0x20000a38

08000efc <MX_X_CUBE_AI_Process>:

void MX_X_CUBE_AI_Process(void)
{
 8000efc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    /* USER CODE BEGIN 6 */
    int res = -1;

    printf("TEMPLATE - run - main loop\r\n");

    if (nlp) {
 8000efe:	4c15      	ldr	r4, [pc, #84]	@ (8000f54 <MX_X_CUBE_AI_Process+0x58>)
    printf("TEMPLATE - run - main loop\r\n");
 8000f00:	4815      	ldr	r0, [pc, #84]	@ (8000f58 <MX_X_CUBE_AI_Process+0x5c>)
 8000f02:	f001 ff95 	bl	8002e30 <puts>
    if (nlp) {
 8000f06:	6823      	ldr	r3, [r4, #0]
 8000f08:	b1e3      	cbz	r3, 8000f44 <MX_X_CUBE_AI_Process+0x48>

        do {
            /* 1 - acquire and pre-process input data */
            res = acquire_and_process_data(data_ins);
 8000f0a:	4d14      	ldr	r5, [pc, #80]	@ (8000f5c <MX_X_CUBE_AI_Process+0x60>)
  batch = ai_nlp_run(nlp, ai_input, ai_output);
 8000f0c:	4e14      	ldr	r6, [pc, #80]	@ (8000f60 <MX_X_CUBE_AI_Process+0x64>)
 8000f0e:	4f15      	ldr	r7, [pc, #84]	@ (8000f64 <MX_X_CUBE_AI_Process+0x68>)
            res = acquire_and_process_data(data_ins);
 8000f10:	4628      	mov	r0, r5
 8000f12:	f7ff ff7b 	bl	8000e0c <acquire_and_process_data>
            /* 2 - process the data - call inference engine */
            if (res == 0)
 8000f16:	b9a8      	cbnz	r0, 8000f44 <MX_X_CUBE_AI_Process+0x48>
  batch = ai_nlp_run(nlp, ai_input, ai_output);
 8000f18:	6832      	ldr	r2, [r6, #0]
 8000f1a:	6839      	ldr	r1, [r7, #0]
 8000f1c:	6820      	ldr	r0, [r4, #0]
 8000f1e:	f000 f95a 	bl	80011d6 <ai_nlp_run>
  if (batch != 1) {
 8000f22:	2801      	cmp	r0, #1
 8000f24:	d009      	beq.n	8000f3a <MX_X_CUBE_AI_Process+0x3e>
    ai_log_err(ai_nlp_get_error(nlp),
 8000f26:	6820      	ldr	r0, [r4, #0]
 8000f28:	f000 f826 	bl	8000f78 <ai_nlp_get_error>
    printf("TEMPLATE - Error (%s) - type=0x%02x code=0x%02x\r\n", fct,
 8000f2c:	490e      	ldr	r1, [pc, #56]	@ (8000f68 <MX_X_CUBE_AI_Process+0x6c>)
 8000f2e:	0a03      	lsrs	r3, r0, #8
 8000f30:	b2c2      	uxtb	r2, r0
 8000f32:	480e      	ldr	r0, [pc, #56]	@ (8000f6c <MX_X_CUBE_AI_Process+0x70>)
 8000f34:	f001 ff14 	bl	8002d60 <iprintf>
  do {} while (1);
 8000f38:	e7fe      	b.n	8000f38 <MX_X_CUBE_AI_Process+0x3c>
                res = ai_run();
            /* 3- post-process the predictions */
            if (res == 0)
                res = post_process(data_outs);
 8000f3a:	480d      	ldr	r0, [pc, #52]	@ (8000f70 <MX_X_CUBE_AI_Process+0x74>)
 8000f3c:	f7ff ff9a 	bl	8000e74 <post_process>
        } while (res==0);
 8000f40:	2800      	cmp	r0, #0
 8000f42:	d0e5      	beq.n	8000f10 <MX_X_CUBE_AI_Process+0x14>
    printf("TEMPLATE - Error (%s) - type=0x%02x code=0x%02x\r\n", fct,
 8000f44:	490b      	ldr	r1, [pc, #44]	@ (8000f74 <MX_X_CUBE_AI_Process+0x78>)
 8000f46:	4809      	ldr	r0, [pc, #36]	@ (8000f6c <MX_X_CUBE_AI_Process+0x70>)
 8000f48:	2310      	movs	r3, #16
 8000f4a:	2211      	movs	r2, #17
 8000f4c:	f001 ff08 	bl	8002d60 <iprintf>
  do {} while (1);
 8000f50:	e7fe      	b.n	8000f50 <MX_X_CUBE_AI_Process+0x54>
 8000f52:	bf00      	nop
 8000f54:	200009b8 	.word	0x200009b8
 8000f58:	08003d26 	.word	0x08003d26
 8000f5c:	20000a3c 	.word	0x20000a3c
 8000f60:	200009b0 	.word	0x200009b0
 8000f64:	200009b4 	.word	0x200009b4
 8000f68:	08003d42 	.word	0x08003d42
 8000f6c:	08003cf4 	.word	0x08003cf4
 8000f70:	20000a38 	.word	0x20000a38
 8000f74:	08003d4d 	.word	0x08003d4d

08000f78 <ai_nlp_get_error>:


AI_API_ENTRY
ai_error ai_nlp_get_error(ai_handle network)
{
  return ai_platform_network_get_error(network);
 8000f78:	f000 ba60 	b.w	800143c <ai_platform_network_get_error>

08000f7c <ai_nlp_create>:


AI_API_ENTRY
ai_error ai_nlp_create(
  ai_handle* network, const ai_buffer* network_config)
{
 8000f7c:	b507      	push	{r0, r1, r2, lr}
  return ai_platform_network_create(
 8000f7e:	2305      	movs	r3, #5
 8000f80:	2200      	movs	r2, #0
 8000f82:	e9cd 3200 	strd	r3, r2, [sp]
 8000f86:	4a03      	ldr	r2, [pc, #12]	@ (8000f94 <ai_nlp_create+0x18>)
 8000f88:	2301      	movs	r3, #1
 8000f8a:	f000 fb53 	bl	8001634 <ai_platform_network_create>
    network, network_config, 
    AI_CONTEXT_OBJ(&AI_NET_OBJ_INSTANCE),
    AI_TOOLS_API_VERSION_MAJOR, AI_TOOLS_API_VERSION_MINOR, AI_TOOLS_API_VERSION_MICRO);
}
 8000f8e:	b003      	add	sp, #12
 8000f90:	f85d fb04 	ldr.w	pc, [sp], #4
 8000f94:	20000010 	.word	0x20000010

08000f98 <ai_nlp_inputs_get>:


AI_API_ENTRY
ai_buffer* ai_nlp_inputs_get(ai_handle network, ai_u16 *n_buffer)
{
  if (network == AI_HANDLE_NULL) {
 8000f98:	b910      	cbnz	r0, 8000fa0 <ai_nlp_inputs_get+0x8>
    network = (ai_handle)&AI_NET_OBJ_INSTANCE;
    AI_NETWORK_OBJ(network)->magic = AI_MAGIC_CONTEXT_TOKEN;
 8000f9a:	4802      	ldr	r0, [pc, #8]	@ (8000fa4 <ai_nlp_inputs_get+0xc>)
 8000f9c:	4b02      	ldr	r3, [pc, #8]	@ (8000fa8 <ai_nlp_inputs_get+0x10>)
 8000f9e:	6003      	str	r3, [r0, #0]
  }
  return ai_platform_inputs_get(network, n_buffer);
 8000fa0:	f000 ba5e 	b.w	8001460 <ai_platform_inputs_get>
 8000fa4:	20000010 	.word	0x20000010
 8000fa8:	a1c00100 	.word	0xa1c00100

08000fac <ai_nlp_outputs_get>:


AI_API_ENTRY
ai_buffer* ai_nlp_outputs_get(ai_handle network, ai_u16 *n_buffer)
{
  if (network == AI_HANDLE_NULL) {
 8000fac:	b910      	cbnz	r0, 8000fb4 <ai_nlp_outputs_get+0x8>
    network = (ai_handle)&AI_NET_OBJ_INSTANCE;
    AI_NETWORK_OBJ(network)->magic = AI_MAGIC_CONTEXT_TOKEN;
 8000fae:	4802      	ldr	r0, [pc, #8]	@ (8000fb8 <ai_nlp_outputs_get+0xc>)
 8000fb0:	4b02      	ldr	r3, [pc, #8]	@ (8000fbc <ai_nlp_outputs_get+0x10>)
 8000fb2:	6003      	str	r3, [r0, #0]
  }
  return ai_platform_outputs_get(network, n_buffer);
 8000fb4:	f000 baca 	b.w	800154c <ai_platform_outputs_get>
 8000fb8:	20000010 	.word	0x20000010
 8000fbc:	a1c00100 	.word	0xa1c00100

08000fc0 <ai_nlp_init>:


AI_API_ENTRY
ai_bool ai_nlp_init(
  ai_handle network, const ai_network_params* params)
{
 8000fc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fc4:	4606      	mov	r6, r0
 8000fc6:	460f      	mov	r7, r1
  ai_network* net_ctx = AI_NETWORK_OBJ(ai_platform_network_init(network, params));
 8000fc8:	f000 fb76 	bl	80016b8 <ai_platform_network_init>
  ai_bool ok = true;

  if (!net_ctx) return false;
 8000fcc:	4604      	mov	r4, r0
 8000fce:	2800      	cmp	r0, #0
 8000fd0:	f000 8083 	beq.w	80010da <ai_nlp_init+0x11a>
  if (ai_platform_get_weights_map(g_nlp_weights_map, 1, params)) {
 8000fd4:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800113c <ai_nlp_init+0x17c>
 8000fd8:	463a      	mov	r2, r7
 8000fda:	2101      	movs	r1, #1
 8000fdc:	4640      	mov	r0, r8
 8000fde:	f000 f963 	bl	80012a8 <ai_platform_get_weights_map>
 8000fe2:	4605      	mov	r5, r0
 8000fe4:	2800      	cmp	r0, #0
 8000fe6:	d07a      	beq.n	80010de <ai_nlp_init+0x11e>
    gemm_0_weights_array.format |= AI_FMT_FLAG_CONST;
 8000fe8:	4a43      	ldr	r2, [pc, #268]	@ (80010f8 <ai_nlp_init+0x138>)
 8000fea:	6813      	ldr	r3, [r2, #0]
 8000fec:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000ff0:	6013      	str	r3, [r2, #0]
    gemm_0_weights_array.data = AI_PTR(g_nlp_weights_map[0] + 0);
 8000ff2:	f8d8 3000 	ldr.w	r3, [r8]
    gemm_0_weights_array.data_start = AI_PTR(g_nlp_weights_map[0] + 0);
 8000ff6:	e9c2 3302 	strd	r3, r3, [r2, #8]
    gemm_0_bias_array.format |= AI_FMT_FLAG_CONST;
 8000ffa:	4a40      	ldr	r2, [pc, #256]	@ (80010fc <ai_nlp_init+0x13c>)
 8000ffc:	6811      	ldr	r1, [r2, #0]
 8000ffe:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8001002:	6011      	str	r1, [r2, #0]
    gemm_0_bias_array.data = AI_PTR(g_nlp_weights_map[0] + 800);
 8001004:	f503 7148 	add.w	r1, r3, #800	@ 0x320
    gemm_0_bias_array.data_start = AI_PTR(g_nlp_weights_map[0] + 800);
 8001008:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_1_weights_array.format |= AI_FMT_FLAG_CONST;
 800100c:	4a3c      	ldr	r2, [pc, #240]	@ (8001100 <ai_nlp_init+0x140>)
 800100e:	6811      	ldr	r1, [r2, #0]
 8001010:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8001014:	6011      	str	r1, [r2, #0]
    gemm_1_weights_array.data = AI_PTR(g_nlp_weights_map[0] + 880);
 8001016:	f503 715c 	add.w	r1, r3, #880	@ 0x370
    gemm_1_weights_array.data_start = AI_PTR(g_nlp_weights_map[0] + 880);
 800101a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_1_bias_array.format |= AI_FMT_FLAG_CONST;
 800101e:	4a39      	ldr	r2, [pc, #228]	@ (8001104 <ai_nlp_init+0x144>)
 8001020:	6811      	ldr	r1, [r2, #0]
 8001022:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8001026:	6011      	str	r1, [r2, #0]
    gemm_1_bias_array.data = AI_PTR(g_nlp_weights_map[0] + 1680);
 8001028:	f503 61d2 	add.w	r1, r3, #1680	@ 0x690
    gemm_1_bias_array.data_start = AI_PTR(g_nlp_weights_map[0] + 1680);
 800102c:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_2_weights_array.format |= AI_FMT_FLAG_CONST;
 8001030:	4a35      	ldr	r2, [pc, #212]	@ (8001108 <ai_nlp_init+0x148>)
 8001032:	6811      	ldr	r1, [r2, #0]
 8001034:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8001038:	6011      	str	r1, [r2, #0]
    gemm_2_weights_array.data = AI_PTR(g_nlp_weights_map[0] + 1720);
 800103a:	f503 61d7 	add.w	r1, r3, #1720	@ 0x6b8
    gemm_2_weights_array.data_start = AI_PTR(g_nlp_weights_map[0] + 1720);
 800103e:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_2_bias_array.format |= AI_FMT_FLAG_CONST;
 8001042:	4a32      	ldr	r2, [pc, #200]	@ (800110c <ai_nlp_init+0x14c>)
 8001044:	6811      	ldr	r1, [r2, #0]
 8001046:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 800104a:	6011      	str	r1, [r2, #0]
    gemm_2_bias_array.data = AI_PTR(g_nlp_weights_map[0] + 1960);
 800104c:	f503 61f5 	add.w	r1, r3, #1960	@ 0x7a8
    gemm_2_bias_array.data_start = AI_PTR(g_nlp_weights_map[0] + 1960);
 8001050:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_3_weights_array.format |= AI_FMT_FLAG_CONST;
 8001054:	4a2e      	ldr	r2, [pc, #184]	@ (8001110 <ai_nlp_init+0x150>)
 8001056:	6811      	ldr	r1, [r2, #0]
 8001058:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 800105c:	6011      	str	r1, [r2, #0]
    gemm_3_weights_array.data = AI_PTR(g_nlp_weights_map[0] + 1984);
 800105e:	f503 61f8 	add.w	r1, r3, #1984	@ 0x7c0
    gemm_3_weights_array.data_start = AI_PTR(g_nlp_weights_map[0] + 1984);
 8001062:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_3_bias_array.format |= AI_FMT_FLAG_CONST;
 8001066:	4a2b      	ldr	r2, [pc, #172]	@ (8001114 <ai_nlp_init+0x154>)
 8001068:	6811      	ldr	r1, [r2, #0]
    gemm_3_bias_array.data = AI_PTR(g_nlp_weights_map[0] + 2056);
 800106a:	f603 0308 	addw	r3, r3, #2056	@ 0x808
    gemm_3_bias_array.format |= AI_FMT_FLAG_CONST;
 800106e:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8001072:	6011      	str	r1, [r2, #0]
    gemm_3_bias_array.data_start = AI_PTR(g_nlp_weights_map[0] + 2056);
 8001074:	e9c2 3302 	strd	r3, r3, [r2, #8]
  if (ai_platform_get_activations_map(g_nlp_activations_map, 1, params)) {
 8001078:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8001140 <ai_nlp_init+0x180>
 800107c:	463a      	mov	r2, r7
 800107e:	2101      	movs	r1, #1
 8001080:	4640      	mov	r0, r8
 8001082:	f000 f965 	bl	8001350 <ai_platform_get_activations_map>
 8001086:	4607      	mov	r7, r0
 8001088:	b378      	cbz	r0, 80010ea <ai_nlp_init+0x12a>
    serving_default_dense_32_input0_output_array.data = AI_PTR(g_nlp_activations_map[0] + 0);
 800108a:	f8d8 3000 	ldr.w	r3, [r8]
 800108e:	4a22      	ldr	r2, [pc, #136]	@ (8001118 <ai_nlp_init+0x158>)
    gemm_0_output_array.data = AI_PTR(g_nlp_activations_map[0] + 40);
 8001090:	4922      	ldr	r1, [pc, #136]	@ (800111c <ai_nlp_init+0x15c>)
    serving_default_dense_32_input0_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 0);
 8001092:	e9c2 3302 	strd	r3, r3, [r2, #8]
    gemm_0_output_array.data = AI_PTR(g_nlp_activations_map[0] + 40);
 8001096:	f103 0228 	add.w	r2, r3, #40	@ 0x28
    gemm_0_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 40);
 800109a:	e9c1 2202 	strd	r2, r2, [r1, #8]
    nl_0_nl_output_array.data = AI_PTR(g_nlp_activations_map[0] + 40);
 800109e:	4920      	ldr	r1, [pc, #128]	@ (8001120 <ai_nlp_init+0x160>)
    nl_0_nl_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 40);
 80010a0:	e9c1 2202 	strd	r2, r2, [r1, #8]
    gemm_1_output_array.data = AI_PTR(g_nlp_activations_map[0] + 0);
 80010a4:	491f      	ldr	r1, [pc, #124]	@ (8001124 <ai_nlp_init+0x164>)
    gemm_1_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 0);
 80010a6:	e9c1 3302 	strd	r3, r3, [r1, #8]
    nl_1_nl_output_array.data = AI_PTR(g_nlp_activations_map[0] + 40);
 80010aa:	491f      	ldr	r1, [pc, #124]	@ (8001128 <ai_nlp_init+0x168>)
    nl_1_nl_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 40);
 80010ac:	e9c1 2202 	strd	r2, r2, [r1, #8]
    gemm_2_output_array.data = AI_PTR(g_nlp_activations_map[0] + 0);
 80010b0:	4a1e      	ldr	r2, [pc, #120]	@ (800112c <ai_nlp_init+0x16c>)
    gemm_2_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 0);
 80010b2:	e9c2 3302 	strd	r3, r3, [r2, #8]
    nl_2_nl_output_array.data = AI_PTR(g_nlp_activations_map[0] + 24);
 80010b6:	4a1e      	ldr	r2, [pc, #120]	@ (8001130 <ai_nlp_init+0x170>)
 80010b8:	f103 0118 	add.w	r1, r3, #24
    nl_2_nl_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 24);
 80010bc:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_3_output_array.data = AI_PTR(g_nlp_activations_map[0] + 0);
 80010c0:	4a1c      	ldr	r2, [pc, #112]	@ (8001134 <ai_nlp_init+0x174>)
    gemm_3_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 0);
 80010c2:	e9c2 3302 	strd	r3, r3, [r2, #8]
    nl_4_output_array.data = AI_PTR(g_nlp_activations_map[0] + 12);
 80010c6:	4a1c      	ldr	r2, [pc, #112]	@ (8001138 <ai_nlp_init+0x178>)
 80010c8:	330c      	adds	r3, #12
    nl_4_output_array.data_start = AI_PTR(g_nlp_activations_map[0] + 12);
 80010ca:	e9c2 3302 	strd	r3, r3, [r2, #8]
  ok &= nlp_configure_weights(net_ctx, params);
  ok &= nlp_configure_activations(net_ctx, params);

  ok &= ai_platform_network_post_init(network);
 80010ce:	4630      	mov	r0, r6
 80010d0:	f000 fbc0 	bl	8001854 <ai_platform_network_post_init>
 80010d4:	4038      	ands	r0, r7
 80010d6:	4005      	ands	r5, r0
 80010d8:	b2e8      	uxtb	r0, r5

  return ok;
}
 80010da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_WEIGHTS);
 80010de:	2212      	movs	r2, #18
 80010e0:	2130      	movs	r1, #48	@ 0x30
 80010e2:	4620      	mov	r0, r4
 80010e4:	f000 f9b6 	bl	8001454 <ai_platform_network_set_error>
  return false;
 80010e8:	e7c6      	b.n	8001078 <ai_nlp_init+0xb8>
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_ACTIVATIONS);
 80010ea:	2213      	movs	r2, #19
 80010ec:	2130      	movs	r1, #48	@ 0x30
 80010ee:	4620      	mov	r0, r4
 80010f0:	f000 f9b0 	bl	8001454 <ai_platform_network_set_error>
  return false;
 80010f4:	e7eb      	b.n	80010ce <ai_nlp_init+0x10e>
 80010f6:	bf00      	nop
 80010f8:	20000828 	.word	0x20000828
 80010fc:	20000818 	.word	0x20000818
 8001100:	20000808 	.word	0x20000808
 8001104:	200007f8 	.word	0x200007f8
 8001108:	200007e8 	.word	0x200007e8
 800110c:	200007d8 	.word	0x200007d8
 8001110:	200007c8 	.word	0x200007c8
 8001114:	200007b8 	.word	0x200007b8
 8001118:	200008b8 	.word	0x200008b8
 800111c:	200008a8 	.word	0x200008a8
 8001120:	20000898 	.word	0x20000898
 8001124:	20000888 	.word	0x20000888
 8001128:	20000878 	.word	0x20000878
 800112c:	20000868 	.word	0x20000868
 8001130:	20000858 	.word	0x20000858
 8001134:	20000848 	.word	0x20000848
 8001138:	20000838 	.word	0x20000838
 800113c:	20000ad8 	.word	0x20000ad8
 8001140:	20000adc 	.word	0x20000adc

08001144 <ai_nlp_create_and_init>:
{
 8001144:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001148:	4689      	mov	r9, r1
 800114a:	b08f      	sub	sp, #60	@ 0x3c
  err = ai_nlp_create(network, AI_NLP_DATA_CONFIG);
 800114c:	2100      	movs	r1, #0
{
 800114e:	4606      	mov	r6, r0
 8001150:	4690      	mov	r8, r2
  err = ai_nlp_create(network, AI_NLP_DATA_CONFIG);
 8001152:	f7ff ff13 	bl	8000f7c <ai_nlp_create>
  if (err.type != AI_ERROR_NONE) {
 8001156:	f010 07ff 	ands.w	r7, r0, #255	@ 0xff
  err = ai_nlp_create(network, AI_NLP_DATA_CONFIG);
 800115a:	4604      	mov	r4, r0
  if (err.type != AI_ERROR_NONE) {
 800115c:	d107      	bne.n	800116e <ai_nlp_create_and_init+0x2a>
  if (ai_nlp_data_params_get(&params) != true) {
 800115e:	4668      	mov	r0, sp
 8001160:	f000 f83c 	bl	80011dc <ai_nlp_data_params_get>
 8001164:	bb18      	cbnz	r0, 80011ae <ai_nlp_create_and_init+0x6a>
  return ai_platform_network_get_error(network);
 8001166:	6830      	ldr	r0, [r6, #0]
 8001168:	f000 f968 	bl	800143c <ai_platform_network_get_error>
 800116c:	4604      	mov	r4, r0
}
 800116e:	4620      	mov	r0, r4
 8001170:	b00f      	add	sp, #60	@ 0x3c
 8001172:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&params.map_activations, idx, activations[idx]);
 8001176:	f859 2025 	ldr.w	r2, [r9, r5, lsl #2]
 800117a:	4629      	mov	r1, r5
 800117c:	a803      	add	r0, sp, #12
 800117e:	f000 f883 	bl	8001288 <ai_buffer_array_item_set_address>
  for (ai_u16 idx=0; activations && idx<params.map_activations.size; idx++) {
 8001182:	3501      	adds	r5, #1
 8001184:	b2ad      	uxth	r5, r5
 8001186:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800118a:	42ab      	cmp	r3, r5
 800118c:	d8f3      	bhi.n	8001176 <ai_nlp_create_and_init+0x32>
  for (ai_u16 idx=0; weights && idx<params.map_weights.size; idx++) {
 800118e:	f1b8 0f00 	cmp.w	r8, #0
 8001192:	d11e      	bne.n	80011d2 <ai_nlp_create_and_init+0x8e>
  if (ai_nlp_init(*network, &params) != true) {
 8001194:	6830      	ldr	r0, [r6, #0]
 8001196:	4669      	mov	r1, sp
 8001198:	f7ff ff12 	bl	8000fc0 <ai_nlp_init>
 800119c:	b920      	cbnz	r0, 80011a8 <ai_nlp_create_and_init+0x64>
  return ai_platform_network_get_error(network);
 800119e:	6830      	ldr	r0, [r6, #0]
 80011a0:	f000 f94c 	bl	800143c <ai_platform_network_get_error>
 80011a4:	4604      	mov	r4, r0
 80011a6:	b2c7      	uxtb	r7, r0
  return err;
 80011a8:	f367 0407 	bfi	r4, r7, #0, #8
 80011ac:	e7df      	b.n	800116e <ai_nlp_create_and_init+0x2a>
  for (ai_u16 idx=0; activations && idx<params.map_activations.size; idx++) {
 80011ae:	f1b9 0f00 	cmp.w	r9, #0
 80011b2:	d0ec      	beq.n	800118e <ai_nlp_create_and_init+0x4a>
 80011b4:	463d      	mov	r5, r7
 80011b6:	e7e6      	b.n	8001186 <ai_nlp_create_and_init+0x42>
    AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&params.map_weights, idx, weights[idx]);
 80011b8:	f858 2025 	ldr.w	r2, [r8, r5, lsl #2]
 80011bc:	4629      	mov	r1, r5
 80011be:	a801      	add	r0, sp, #4
 80011c0:	f000 f862 	bl	8001288 <ai_buffer_array_item_set_address>
  for (ai_u16 idx=0; weights && idx<params.map_weights.size; idx++) {
 80011c4:	3501      	adds	r5, #1
 80011c6:	b2ad      	uxth	r5, r5
 80011c8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80011cc:	42ab      	cmp	r3, r5
 80011ce:	d8f3      	bhi.n	80011b8 <ai_nlp_create_and_init+0x74>
 80011d0:	e7e0      	b.n	8001194 <ai_nlp_create_and_init+0x50>
 80011d2:	2500      	movs	r5, #0
 80011d4:	e7f8      	b.n	80011c8 <ai_nlp_create_and_init+0x84>

080011d6 <ai_nlp_run>:

AI_API_ENTRY
ai_i32 ai_nlp_run(
  ai_handle network, const ai_buffer* input, ai_buffer* output)
{
  return ai_platform_network_process(network, input, output);
 80011d6:	f000 bb6d 	b.w	80018b4 <ai_platform_network_process>
	...

080011dc <ai_nlp_data_params_get>:
 * @ingroup nlp_data
 * @return true if a valid configuration is present, false otherwise
 */
AI_API_ENTRY
ai_bool ai_nlp_data_params_get(ai_network_params* params)
{
 80011dc:	b530      	push	{r4, r5, lr}
  if (!params) return false;
 80011de:	4603      	mov	r3, r0
{
 80011e0:	b085      	sub	sp, #20
  if (!params) return false;
 80011e2:	b170      	cbz	r0, 8001202 <ai_nlp_data_params_get+0x26>
  
  const ai_buffer_array map_activations = 
 80011e4:	4c08      	ldr	r4, [pc, #32]	@ (8001208 <ai_nlp_data_params_get+0x2c>)
 80011e6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80011ea:	466a      	mov	r2, sp
 80011ec:	e882 0003 	stmia.w	r2, {r0, r1}
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_NLP_DATA_ACTIVATIONS_COUNT, g_nlp_data_map_activations);
  
  const ai_buffer_array map_weights = 
 80011f0:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 80011f4:	ad02      	add	r5, sp, #8
 80011f6:	e885 0003 	stmia.w	r5, {r0, r1}
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_NLP_DATA_WEIGHTS_COUNT, g_nlp_data_map_weights);

  return ai_platform_bind_network_params(params, &map_weights, &map_activations);
 80011fa:	4629      	mov	r1, r5
 80011fc:	4618      	mov	r0, r3
 80011fe:	f000 f8fb 	bl	80013f8 <ai_platform_bind_network_params>
}
 8001202:	b005      	add	sp, #20
 8001204:	bd30      	pop	{r4, r5, pc}
 8001206:	bf00      	nop
 8001208:	08003c80 	.word	0x08003c80

0800120c <ai_buffer_get_size>:
 800120c:	b378      	cbz	r0, 800126e <ai_buffer_get_size+0x62>
 800120e:	b410      	push	{r4}
 8001210:	6803      	ldr	r3, [r0, #0]
 8001212:	4a17      	ldr	r2, [pc, #92]	@ (8001270 <ai_buffer_get_size+0x64>)
 8001214:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
 8001218:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800121c:	4293      	cmp	r3, r2
 800121e:	d01e      	beq.n	800125e <ai_buffer_get_size+0x52>
 8001220:	6984      	ldr	r4, [r0, #24]
 8001222:	6862      	ldr	r2, [r4, #4]
 8001224:	7d03      	ldrb	r3, [r0, #20]
 8001226:	6941      	ldr	r1, [r0, #20]
 8001228:	f1a3 0301 	sub.w	r3, r3, #1
 800122c:	fab3 f383 	clz	r3, r3
 8001230:	095b      	lsrs	r3, r3, #5
 8001232:	ebb3 2f11 	cmp.w	r3, r1, lsr #8
 8001236:	f3c1 2017 	ubfx	r0, r1, #8, #24
 800123a:	da0b      	bge.n	8001254 <ai_buffer_get_size+0x48>
 800123c:	2b01      	cmp	r3, #1
 800123e:	d102      	bne.n	8001246 <ai_buffer_get_size+0x3a>
 8001240:	2802      	cmp	r0, #2
 8001242:	d007      	beq.n	8001254 <ai_buffer_get_size+0x48>
 8001244:	2302      	movs	r3, #2
 8001246:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 800124a:	3301      	adds	r3, #1
 800124c:	4298      	cmp	r0, r3
 800124e:	fb01 f202 	mul.w	r2, r1, r2
 8001252:	d1f3      	bne.n	800123c <ai_buffer_get_size+0x30>
 8001254:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 8001258:	f85d 4b04 	ldr.w	r4, [sp], #4
 800125c:	4770      	bx	lr
 800125e:	2900      	cmp	r1, #0
 8001260:	d0de      	beq.n	8001220 <ai_buffer_get_size+0x14>
 8001262:	6984      	ldr	r4, [r0, #24]
 8001264:	6862      	ldr	r2, [r4, #4]
 8001266:	321f      	adds	r2, #31
 8001268:	f022 021f 	bic.w	r2, r2, #31
 800126c:	e7da      	b.n	8001224 <ai_buffer_get_size+0x18>
 800126e:	4770      	bx	lr
 8001270:	000400c0 	.word	0x000400c0

08001274 <ai_buffer_array_sane>:
 8001274:	b138      	cbz	r0, 8001286 <ai_buffer_array_sane+0x12>
 8001276:	6843      	ldr	r3, [r0, #4]
 8001278:	b123      	cbz	r3, 8001284 <ai_buffer_array_sane+0x10>
 800127a:	8840      	ldrh	r0, [r0, #2]
 800127c:	3800      	subs	r0, #0
 800127e:	bf18      	it	ne
 8001280:	2001      	movne	r0, #1
 8001282:	4770      	bx	lr
 8001284:	4618      	mov	r0, r3
 8001286:	4770      	bx	lr

08001288 <ai_buffer_array_item_set_address>:
 8001288:	b150      	cbz	r0, 80012a0 <ai_buffer_array_item_set_address+0x18>
 800128a:	6843      	ldr	r3, [r0, #4]
 800128c:	b14b      	cbz	r3, 80012a2 <ai_buffer_array_item_set_address+0x1a>
 800128e:	8840      	ldrh	r0, [r0, #2]
 8001290:	b900      	cbnz	r0, 8001294 <ai_buffer_array_item_set_address+0xc>
 8001292:	4770      	bx	lr
 8001294:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8001298:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800129c:	2001      	movs	r0, #1
 800129e:	605a      	str	r2, [r3, #4]
 80012a0:	4770      	bx	lr
 80012a2:	4618      	mov	r0, r3
 80012a4:	4770      	bx	lr
 80012a6:	bf00      	nop

080012a8 <ai_platform_get_weights_map>:
 80012a8:	2a00      	cmp	r2, #0
 80012aa:	d037      	beq.n	800131c <ai_platform_get_weights_map+0x74>
 80012ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ae:	4604      	mov	r4, r0
 80012b0:	b1a0      	cbz	r0, 80012dc <ai_platform_get_weights_map+0x34>
 80012b2:	460f      	mov	r7, r1
 80012b4:	b191      	cbz	r1, 80012dc <ai_platform_get_weights_map+0x34>
 80012b6:	4b25      	ldr	r3, [pc, #148]	@ (800134c <ai_platform_get_weights_map+0xa4>)
 80012b8:	6810      	ldr	r0, [r2, #0]
 80012ba:	4298      	cmp	r0, r3
 80012bc:	4615      	mov	r5, r2
 80012be:	d00f      	beq.n	80012e0 <ai_platform_get_weights_map+0x38>
 80012c0:	6855      	ldr	r5, [r2, #4]
 80012c2:	b15d      	cbz	r5, 80012dc <ai_platform_get_weights_map+0x34>
 80012c4:	682e      	ldr	r6, [r5, #0]
 80012c6:	429e      	cmp	r6, r3
 80012c8:	d02a      	beq.n	8001320 <ai_platform_get_weights_map+0x78>
 80012ca:	f1a1 0001 	sub.w	r0, r1, #1
 80012ce:	6025      	str	r5, [r4, #0]
 80012d0:	fab0 f080 	clz	r0, r0
 80012d4:	0940      	lsrs	r0, r0, #5
 80012d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012d8:	42a7      	cmp	r7, r4
 80012da:	d034      	beq.n	8001346 <ai_platform_get_weights_map+0x9e>
 80012dc:	2000      	movs	r0, #0
 80012de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012e0:	1d10      	adds	r0, r2, #4
 80012e2:	f7ff ffc7 	bl	8001274 <ai_buffer_array_sane>
 80012e6:	2800      	cmp	r0, #0
 80012e8:	d0f8      	beq.n	80012dc <ai_platform_get_weights_map+0x34>
 80012ea:	88eb      	ldrh	r3, [r5, #6]
 80012ec:	429f      	cmp	r7, r3
 80012ee:	d1f5      	bne.n	80012dc <ai_platform_get_weights_map+0x34>
 80012f0:	f04f 0c00 	mov.w	ip, #0
 80012f4:	1f20      	subs	r0, r4, #4
 80012f6:	46e6      	mov	lr, ip
 80012f8:	68ab      	ldr	r3, [r5, #8]
 80012fa:	4463      	add	r3, ip
 80012fc:	f10c 0c1c 	add.w	ip, ip, #28
 8001300:	685b      	ldr	r3, [r3, #4]
 8001302:	b12b      	cbz	r3, 8001310 <ai_platform_get_weights_map+0x68>
 8001304:	f10e 0e01 	add.w	lr, lr, #1
 8001308:	4577      	cmp	r7, lr
 800130a:	f840 3f04 	str.w	r3, [r0, #4]!
 800130e:	d1f3      	bne.n	80012f8 <ai_platform_get_weights_map+0x50>
 8001310:	eba7 000e 	sub.w	r0, r7, lr
 8001314:	fab0 f080 	clz	r0, r0
 8001318:	0940      	lsrs	r0, r0, #5
 800131a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800131c:	2000      	movs	r0, #0
 800131e:	4770      	bx	lr
 8001320:	1f20      	subs	r0, r4, #4
 8001322:	462a      	mov	r2, r5
 8001324:	2400      	movs	r4, #0
 8001326:	e000      	b.n	800132a <ai_platform_get_weights_map+0x82>
 8001328:	461c      	mov	r4, r3
 800132a:	f852 3f04 	ldr.w	r3, [r2, #4]!
 800132e:	42b3      	cmp	r3, r6
 8001330:	d0d2      	beq.n	80012d8 <ai_platform_get_weights_map+0x30>
 8001332:	f840 3f04 	str.w	r3, [r0, #4]!
 8001336:	1c63      	adds	r3, r4, #1
 8001338:	429f      	cmp	r7, r3
 800133a:	d1f5      	bne.n	8001328 <ai_platform_get_weights_map+0x80>
 800133c:	3402      	adds	r4, #2
 800133e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8001342:	42b3      	cmp	r3, r6
 8001344:	d1ca      	bne.n	80012dc <ai_platform_get_weights_map+0x34>
 8001346:	2001      	movs	r0, #1
 8001348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800134a:	bf00      	nop
 800134c:	a1facade 	.word	0xa1facade

08001350 <ai_platform_get_activations_map>:
 8001350:	2a00      	cmp	r2, #0
 8001352:	d038      	beq.n	80013c6 <ai_platform_get_activations_map+0x76>
 8001354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001356:	4604      	mov	r4, r0
 8001358:	b1a0      	cbz	r0, 8001384 <ai_platform_get_activations_map+0x34>
 800135a:	460f      	mov	r7, r1
 800135c:	b191      	cbz	r1, 8001384 <ai_platform_get_activations_map+0x34>
 800135e:	4b25      	ldr	r3, [pc, #148]	@ (80013f4 <ai_platform_get_activations_map+0xa4>)
 8001360:	6810      	ldr	r0, [r2, #0]
 8001362:	4298      	cmp	r0, r3
 8001364:	4615      	mov	r5, r2
 8001366:	d00f      	beq.n	8001388 <ai_platform_get_activations_map+0x38>
 8001368:	6a15      	ldr	r5, [r2, #32]
 800136a:	b15d      	cbz	r5, 8001384 <ai_platform_get_activations_map+0x34>
 800136c:	682e      	ldr	r6, [r5, #0]
 800136e:	429e      	cmp	r6, r3
 8001370:	d02b      	beq.n	80013ca <ai_platform_get_activations_map+0x7a>
 8001372:	f1a1 0001 	sub.w	r0, r1, #1
 8001376:	6025      	str	r5, [r4, #0]
 8001378:	fab0 f080 	clz	r0, r0
 800137c:	0940      	lsrs	r0, r0, #5
 800137e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001380:	42a7      	cmp	r7, r4
 8001382:	d035      	beq.n	80013f0 <ai_platform_get_activations_map+0xa0>
 8001384:	2000      	movs	r0, #0
 8001386:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001388:	f102 000c 	add.w	r0, r2, #12
 800138c:	f7ff ff72 	bl	8001274 <ai_buffer_array_sane>
 8001390:	2800      	cmp	r0, #0
 8001392:	d0f7      	beq.n	8001384 <ai_platform_get_activations_map+0x34>
 8001394:	89eb      	ldrh	r3, [r5, #14]
 8001396:	429f      	cmp	r7, r3
 8001398:	d1f4      	bne.n	8001384 <ai_platform_get_activations_map+0x34>
 800139a:	f04f 0c00 	mov.w	ip, #0
 800139e:	1f20      	subs	r0, r4, #4
 80013a0:	46e6      	mov	lr, ip
 80013a2:	692b      	ldr	r3, [r5, #16]
 80013a4:	4463      	add	r3, ip
 80013a6:	f10c 0c1c 	add.w	ip, ip, #28
 80013aa:	685b      	ldr	r3, [r3, #4]
 80013ac:	b12b      	cbz	r3, 80013ba <ai_platform_get_activations_map+0x6a>
 80013ae:	f10e 0e01 	add.w	lr, lr, #1
 80013b2:	4577      	cmp	r7, lr
 80013b4:	f840 3f04 	str.w	r3, [r0, #4]!
 80013b8:	d1f3      	bne.n	80013a2 <ai_platform_get_activations_map+0x52>
 80013ba:	eba7 000e 	sub.w	r0, r7, lr
 80013be:	fab0 f080 	clz	r0, r0
 80013c2:	0940      	lsrs	r0, r0, #5
 80013c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80013c6:	2000      	movs	r0, #0
 80013c8:	4770      	bx	lr
 80013ca:	1f20      	subs	r0, r4, #4
 80013cc:	462a      	mov	r2, r5
 80013ce:	2400      	movs	r4, #0
 80013d0:	e000      	b.n	80013d4 <ai_platform_get_activations_map+0x84>
 80013d2:	461c      	mov	r4, r3
 80013d4:	f852 3f04 	ldr.w	r3, [r2, #4]!
 80013d8:	42b3      	cmp	r3, r6
 80013da:	d0d1      	beq.n	8001380 <ai_platform_get_activations_map+0x30>
 80013dc:	f840 3f04 	str.w	r3, [r0, #4]!
 80013e0:	1c63      	adds	r3, r4, #1
 80013e2:	429f      	cmp	r7, r3
 80013e4:	d1f5      	bne.n	80013d2 <ai_platform_get_activations_map+0x82>
 80013e6:	3402      	adds	r4, #2
 80013e8:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80013ec:	42b3      	cmp	r3, r6
 80013ee:	d1c9      	bne.n	8001384 <ai_platform_get_activations_map+0x34>
 80013f0:	2001      	movs	r0, #1
 80013f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80013f4:	a1facade 	.word	0xa1facade

080013f8 <ai_platform_bind_network_params>:
 80013f8:	b1a0      	cbz	r0, 8001424 <ai_platform_bind_network_params+0x2c>
 80013fa:	b1b1      	cbz	r1, 800142a <ai_platform_bind_network_params+0x32>
 80013fc:	b1c2      	cbz	r2, 8001430 <ai_platform_bind_network_params+0x38>
 80013fe:	b410      	push	{r4}
 8001400:	4603      	mov	r3, r0
 8001402:	4c0d      	ldr	r4, [pc, #52]	@ (8001438 <ai_platform_bind_network_params+0x40>)
 8001404:	f843 4b04 	str.w	r4, [r3], #4
 8001408:	f100 0c0c 	add.w	ip, r0, #12
 800140c:	c903      	ldmia	r1, {r0, r1}
 800140e:	e883 0003 	stmia.w	r3, {r0, r1}
 8001412:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001416:	e88c 0003 	stmia.w	ip, {r0, r1}
 800141a:	2301      	movs	r3, #1
 800141c:	4618      	mov	r0, r3
 800141e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001422:	4770      	bx	lr
 8001424:	4603      	mov	r3, r0
 8001426:	4618      	mov	r0, r3
 8001428:	4770      	bx	lr
 800142a:	460b      	mov	r3, r1
 800142c:	4618      	mov	r0, r3
 800142e:	4770      	bx	lr
 8001430:	4613      	mov	r3, r2
 8001432:	4618      	mov	r0, r3
 8001434:	4770      	bx	lr
 8001436:	bf00      	nop
 8001438:	a1facade 	.word	0xa1facade

0800143c <ai_platform_network_get_error>:
 800143c:	4b04      	ldr	r3, [pc, #16]	@ (8001450 <ai_platform_network_get_error+0x14>)
 800143e:	6802      	ldr	r2, [r0, #0]
 8001440:	4393      	bics	r3, r2
 8001442:	d102      	bne.n	800144a <ai_platform_network_get_error+0xe>
 8001444:	300c      	adds	r0, #12
 8001446:	f000 bc77 	b.w	8001d38 <core_get_error>
 800144a:	f241 0010 	movw	r0, #4112	@ 0x1010
 800144e:	4770      	bx	lr
 8001450:	a1c00100 	.word	0xa1c00100

08001454 <ai_platform_network_set_error>:
 8001454:	b110      	cbz	r0, 800145c <ai_platform_network_set_error+0x8>
 8001456:	300c      	adds	r0, #12
 8001458:	f000 bc74 	b.w	8001d44 <core_set_error>
 800145c:	4770      	bx	lr
 800145e:	bf00      	nop

08001460 <ai_platform_inputs_get>:
 8001460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001464:	4b38      	ldr	r3, [pc, #224]	@ (8001548 <ai_platform_inputs_get+0xe8>)
 8001466:	6802      	ldr	r2, [r0, #0]
 8001468:	b085      	sub	sp, #20
 800146a:	4393      	bics	r3, r2
 800146c:	9003      	str	r0, [sp, #12]
 800146e:	9102      	str	r1, [sp, #8]
 8001470:	d160      	bne.n	8001534 <ai_platform_inputs_get+0xd4>
 8001472:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8001474:	2b00      	cmp	r3, #0
 8001476:	d04f      	beq.n	8001518 <ai_platform_inputs_get+0xb8>
 8001478:	f8d0 a034 	ldr.w	sl, [r0, #52]	@ 0x34
 800147c:	f1ba 0f00 	cmp.w	sl, #0
 8001480:	d04a      	beq.n	8001518 <ai_platform_inputs_get+0xb8>
 8001482:	f04f 0b00 	mov.w	fp, #0
 8001486:	465d      	mov	r5, fp
 8001488:	e016      	b.n	80014b8 <ai_platform_inputs_get+0x58>
 800148a:	9901      	ldr	r1, [sp, #4]
 800148c:	2201      	movs	r2, #1
 800148e:	507a      	str	r2, [r7, r1]
 8001490:	69b1      	ldr	r1, [r6, #24]
 8001492:	684e      	ldr	r6, [r1, #4]
 8001494:	60a3      	str	r3, [r4, #8]
 8001496:	f04f 0201 	mov.w	r2, #1
 800149a:	7522      	strb	r2, [r4, #20]
 800149c:	6961      	ldr	r1, [r4, #20]
 800149e:	6020      	str	r0, [r4, #0]
 80014a0:	f369 211f 	bfi	r1, r9, #8, #24
 80014a4:	2300      	movs	r3, #0
 80014a6:	e9c4 3603 	strd	r3, r6, [r4, #12]
 80014aa:	e9c4 1805 	strd	r1, r8, [r4, #20]
 80014ae:	f8c4 c004 	str.w	ip, [r4, #4]
 80014b2:	3501      	adds	r5, #1
 80014b4:	f10b 0b1c 	add.w	fp, fp, #28
 80014b8:	f8ba 3000 	ldrh.w	r3, [sl]
 80014bc:	42ab      	cmp	r3, r5
 80014be:	b2aa      	uxth	r2, r5
 80014c0:	d93c      	bls.n	800153c <ai_platform_inputs_get+0xdc>
 80014c2:	f8da 3004 	ldr.w	r3, [sl, #4]
 80014c6:	00e9      	lsls	r1, r5, #3
 80014c8:	9101      	str	r1, [sp, #4]
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d036      	beq.n	800153c <ai_platform_inputs_get+0xdc>
 80014ce:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80014d2:	2e00      	cmp	r6, #0
 80014d4:	d032      	beq.n	800153c <ai_platform_inputs_get+0xdc>
 80014d6:	f8da 3008 	ldr.w	r3, [sl, #8]
 80014da:	69b2      	ldr	r2, [r6, #24]
 80014dc:	f8d6 800c 	ldr.w	r8, [r6, #12]
 80014e0:	6810      	ldr	r0, [r2, #0]
 80014e2:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80014e6:	68b3      	ldr	r3, [r6, #8]
 80014e8:	f3c3 2917 	ubfx	r9, r3, #8, #24
 80014ec:	f001 fa00 	bl	80028f0 <ai_array_to_buffer_fmt>
 80014f0:	69b1      	ldr	r1, [r6, #24]
 80014f2:	eb07 03c5 	add.w	r3, r7, r5, lsl #3
 80014f6:	f8d1 c008 	ldr.w	ip, [r1, #8]
 80014fa:	445c      	add	r4, fp
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	d0c8      	beq.n	8001492 <ai_platform_inputs_get+0x32>
 8001500:	2100      	movs	r1, #0
 8001502:	f847 1035 	str.w	r1, [r7, r5, lsl #3]
 8001506:	6831      	ldr	r1, [r6, #0]
 8001508:	6059      	str	r1, [r3, #4]
 800150a:	b111      	cbz	r1, 8001512 <ai_platform_inputs_get+0xb2>
 800150c:	8849      	ldrh	r1, [r1, #2]
 800150e:	2900      	cmp	r1, #0
 8001510:	d1bb      	bne.n	800148a <ai_platform_inputs_get+0x2a>
 8001512:	69b1      	ldr	r1, [r6, #24]
 8001514:	2300      	movs	r3, #0
 8001516:	e7bc      	b.n	8001492 <ai_platform_inputs_get+0x32>
 8001518:	9803      	ldr	r0, [sp, #12]
 800151a:	2218      	movs	r2, #24
 800151c:	2111      	movs	r1, #17
 800151e:	300c      	adds	r0, #12
 8001520:	f000 fc10 	bl	8001d44 <core_set_error>
 8001524:	2200      	movs	r2, #0
 8001526:	4610      	mov	r0, r2
 8001528:	9b02      	ldr	r3, [sp, #8]
 800152a:	b103      	cbz	r3, 800152e <ai_platform_inputs_get+0xce>
 800152c:	801a      	strh	r2, [r3, #0]
 800152e:	b005      	add	sp, #20
 8001530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001534:	2000      	movs	r0, #0
 8001536:	b005      	add	sp, #20
 8001538:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800153c:	2a00      	cmp	r2, #0
 800153e:	d0eb      	beq.n	8001518 <ai_platform_inputs_get+0xb8>
 8001540:	f8da 3008 	ldr.w	r3, [sl, #8]
 8001544:	6858      	ldr	r0, [r3, #4]
 8001546:	e7ef      	b.n	8001528 <ai_platform_inputs_get+0xc8>
 8001548:	a1c00100 	.word	0xa1c00100

0800154c <ai_platform_outputs_get>:
 800154c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001550:	4b37      	ldr	r3, [pc, #220]	@ (8001630 <ai_platform_outputs_get+0xe4>)
 8001552:	6802      	ldr	r2, [r0, #0]
 8001554:	b085      	sub	sp, #20
 8001556:	4393      	bics	r3, r2
 8001558:	9003      	str	r0, [sp, #12]
 800155a:	9102      	str	r1, [sp, #8]
 800155c:	d15d      	bne.n	800161a <ai_platform_outputs_get+0xce>
 800155e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8001560:	2b01      	cmp	r3, #1
 8001562:	d94c      	bls.n	80015fe <ai_platform_outputs_get+0xb2>
 8001564:	f04f 0b00 	mov.w	fp, #0
 8001568:	f8d0 a034 	ldr.w	sl, [r0, #52]	@ 0x34
 800156c:	465d      	mov	r5, fp
 800156e:	46d8      	mov	r8, fp
 8001570:	e016      	b.n	80015a0 <ai_platform_outputs_get+0x54>
 8001572:	9a01      	ldr	r2, [sp, #4]
 8001574:	2101      	movs	r1, #1
 8001576:	50b9      	str	r1, [r7, r2]
 8001578:	69b2      	ldr	r2, [r6, #24]
 800157a:	6856      	ldr	r6, [r2, #4]
 800157c:	6020      	str	r0, [r4, #0]
 800157e:	f04f 0201 	mov.w	r2, #1
 8001582:	7522      	strb	r2, [r4, #20]
 8001584:	6960      	ldr	r0, [r4, #20]
 8001586:	f8c4 c004 	str.w	ip, [r4, #4]
 800158a:	f369 201f 	bfi	r0, r9, #8, #24
 800158e:	e9c4 6004 	strd	r6, r0, [r4, #16]
 8001592:	e9c4 3802 	strd	r3, r8, [r4, #8]
 8001596:	9b00      	ldr	r3, [sp, #0]
 8001598:	61a3      	str	r3, [r4, #24]
 800159a:	3501      	adds	r5, #1
 800159c:	f10b 0b1c 	add.w	fp, fp, #28
 80015a0:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 80015a4:	42ab      	cmp	r3, r5
 80015a6:	b2aa      	uxth	r2, r5
 80015a8:	d93b      	bls.n	8001622 <ai_platform_outputs_get+0xd6>
 80015aa:	f8da 3010 	ldr.w	r3, [sl, #16]
 80015ae:	00e9      	lsls	r1, r5, #3
 80015b0:	9101      	str	r1, [sp, #4]
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	d035      	beq.n	8001622 <ai_platform_outputs_get+0xd6>
 80015b6:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80015ba:	2e00      	cmp	r6, #0
 80015bc:	d031      	beq.n	8001622 <ai_platform_outputs_get+0xd6>
 80015be:	f8da 3014 	ldr.w	r3, [sl, #20]
 80015c2:	69b2      	ldr	r2, [r6, #24]
 80015c4:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80015c8:	68b3      	ldr	r3, [r6, #8]
 80015ca:	6810      	ldr	r0, [r2, #0]
 80015cc:	f3c3 2917 	ubfx	r9, r3, #8, #24
 80015d0:	68f3      	ldr	r3, [r6, #12]
 80015d2:	9300      	str	r3, [sp, #0]
 80015d4:	f001 f98c 	bl	80028f0 <ai_array_to_buffer_fmt>
 80015d8:	69b2      	ldr	r2, [r6, #24]
 80015da:	eb07 03c5 	add.w	r3, r7, r5, lsl #3
 80015de:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80015e2:	445c      	add	r4, fp
 80015e4:	2b00      	cmp	r3, #0
 80015e6:	d0c8      	beq.n	800157a <ai_platform_outputs_get+0x2e>
 80015e8:	f847 8035 	str.w	r8, [r7, r5, lsl #3]
 80015ec:	6832      	ldr	r2, [r6, #0]
 80015ee:	605a      	str	r2, [r3, #4]
 80015f0:	b112      	cbz	r2, 80015f8 <ai_platform_outputs_get+0xac>
 80015f2:	8852      	ldrh	r2, [r2, #2]
 80015f4:	2a00      	cmp	r2, #0
 80015f6:	d1bc      	bne.n	8001572 <ai_platform_outputs_get+0x26>
 80015f8:	69b2      	ldr	r2, [r6, #24]
 80015fa:	2300      	movs	r3, #0
 80015fc:	e7bd      	b.n	800157a <ai_platform_outputs_get+0x2e>
 80015fe:	9803      	ldr	r0, [sp, #12]
 8001600:	2218      	movs	r2, #24
 8001602:	2111      	movs	r1, #17
 8001604:	300c      	adds	r0, #12
 8001606:	f000 fb9d 	bl	8001d44 <core_set_error>
 800160a:	2200      	movs	r2, #0
 800160c:	4610      	mov	r0, r2
 800160e:	9b02      	ldr	r3, [sp, #8]
 8001610:	b103      	cbz	r3, 8001614 <ai_platform_outputs_get+0xc8>
 8001612:	801a      	strh	r2, [r3, #0]
 8001614:	b005      	add	sp, #20
 8001616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800161a:	2000      	movs	r0, #0
 800161c:	b005      	add	sp, #20
 800161e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001622:	2a00      	cmp	r2, #0
 8001624:	d0eb      	beq.n	80015fe <ai_platform_outputs_get+0xb2>
 8001626:	f8da 3014 	ldr.w	r3, [sl, #20]
 800162a:	6858      	ldr	r0, [r3, #4]
 800162c:	e7ef      	b.n	800160e <ai_platform_outputs_get+0xc2>
 800162e:	bf00      	nop
 8001630:	a1c00100 	.word	0xa1c00100

08001634 <ai_platform_network_create>:
 8001634:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001638:	b083      	sub	sp, #12
 800163a:	f89d 9028 	ldrb.w	r9, [sp, #40]	@ 0x28
 800163e:	f89d 802c 	ldrb.w	r8, [sp, #44]	@ 0x2c
 8001642:	b320      	cbz	r0, 800168e <ai_platform_network_create+0x5a>
 8001644:	6002      	str	r2, [r0, #0]
 8001646:	4616      	mov	r6, r2
 8001648:	461f      	mov	r7, r3
 800164a:	4604      	mov	r4, r0
 800164c:	f000 fb72 	bl	8001d34 <core_init>
 8001650:	b970      	cbnz	r0, 8001670 <ai_platform_network_create+0x3c>
 8001652:	2530      	movs	r5, #48	@ 0x30
 8001654:	2300      	movs	r3, #0
 8001656:	6023      	str	r3, [r4, #0]
 8001658:	2410      	movs	r4, #16
 800165a:	4642      	mov	r2, r8
 800165c:	4649      	mov	r1, r9
 800165e:	4638      	mov	r0, r7
 8001660:	f001 f9f0 	bl	8002a44 <ai_version_get>
 8001664:	60b0      	str	r0, [r6, #8]
 8001666:	ea45 2004 	orr.w	r0, r5, r4, lsl #8
 800166a:	b003      	add	sp, #12
 800166c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001670:	2200      	movs	r2, #0
 8001672:	4649      	mov	r1, r9
 8001674:	4638      	mov	r0, r7
 8001676:	f001 f9e5 	bl	8002a44 <ai_version_get>
 800167a:	2200      	movs	r2, #0
 800167c:	4605      	mov	r5, r0
 800167e:	2105      	movs	r1, #5
 8001680:	2001      	movs	r0, #1
 8001682:	f001 f9df 	bl	8002a44 <ai_version_get>
 8001686:	4285      	cmp	r5, r0
 8001688:	d008      	beq.n	800169c <ai_platform_network_create+0x68>
 800168a:	2501      	movs	r5, #1
 800168c:	e7e2      	b.n	8001654 <ai_platform_network_create+0x20>
 800168e:	2510      	movs	r5, #16
 8001690:	462c      	mov	r4, r5
 8001692:	ea45 2004 	orr.w	r0, r5, r4, lsl #8
 8001696:	b003      	add	sp, #12
 8001698:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800169c:	4b05      	ldr	r3, [pc, #20]	@ (80016b4 <ai_platform_network_create+0x80>)
 800169e:	9301      	str	r3, [sp, #4]
 80016a0:	a801      	add	r0, sp, #4
 80016a2:	f000 fb5b 	bl	8001d5c <ai_check_custom_types>
 80016a6:	b110      	cbz	r0, 80016ae <ai_platform_network_create+0x7a>
 80016a8:	2400      	movs	r4, #0
 80016aa:	4625      	mov	r5, r4
 80016ac:	e7d5      	b.n	800165a <ai_platform_network_create+0x26>
 80016ae:	2502      	movs	r5, #2
 80016b0:	e7d0      	b.n	8001654 <ai_platform_network_create+0x20>
 80016b2:	bf00      	nop
 80016b4:	84048403 	.word	0x84048403

080016b8 <ai_platform_network_init>:
 80016b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80016bc:	4b63      	ldr	r3, [pc, #396]	@ (800184c <ai_platform_network_init+0x194>)
 80016be:	6802      	ldr	r2, [r0, #0]
 80016c0:	4393      	bics	r3, r2
 80016c2:	b083      	sub	sp, #12
 80016c4:	d156      	bne.n	8001774 <ai_platform_network_init+0xbc>
 80016c6:	4604      	mov	r4, r0
 80016c8:	460f      	mov	r7, r1
 80016ca:	2900      	cmp	r1, #0
 80016cc:	f000 80a9 	beq.w	8001822 <ai_platform_network_init+0x16a>
 80016d0:	680b      	ldr	r3, [r1, #0]
 80016d2:	495f      	ldr	r1, [pc, #380]	@ (8001850 <ai_platform_network_init+0x198>)
 80016d4:	428b      	cmp	r3, r1
 80016d6:	d113      	bne.n	8001700 <ai_platform_network_init+0x48>
 80016d8:	495c      	ldr	r1, [pc, #368]	@ (800184c <ai_platform_network_init+0x194>)
 80016da:	89bd      	ldrh	r5, [r7, #12]
 80016dc:	f8b7 a00e 	ldrh.w	sl, [r7, #14]
 80016e0:	f8d7 8010 	ldr.w	r8, [r7, #16]
 80016e4:	f8b7 b004 	ldrh.w	fp, [r7, #4]
 80016e8:	f8b7 9006 	ldrh.w	r9, [r7, #6]
 80016ec:	68be      	ldr	r6, [r7, #8]
 80016ee:	428a      	cmp	r2, r1
 80016f0:	d02c      	beq.n	800174c <ai_platform_network_init+0x94>
 80016f2:	2303      	movs	r3, #3
 80016f4:	6123      	str	r3, [r4, #16]
 80016f6:	4627      	mov	r7, r4
 80016f8:	4638      	mov	r0, r7
 80016fa:	b003      	add	sp, #12
 80016fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001700:	2101      	movs	r1, #1
 8001702:	4638      	mov	r0, r7
 8001704:	9301      	str	r3, [sp, #4]
 8001706:	f8d7 b004 	ldr.w	fp, [r7, #4]
 800170a:	f7ff fd7f 	bl	800120c <ai_buffer_get_size>
 800170e:	f107 081c 	add.w	r8, r7, #28
 8001712:	4605      	mov	r5, r0
 8001714:	2101      	movs	r1, #1
 8001716:	4640      	mov	r0, r8
 8001718:	463e      	mov	r6, r7
 800171a:	6a3f      	ldr	r7, [r7, #32]
 800171c:	f7ff fd76 	bl	800120c <ai_buffer_get_size>
 8001720:	2d00      	cmp	r5, #0
 8001722:	9b01      	ldr	r3, [sp, #4]
 8001724:	bf0a      	itet	eq
 8001726:	46a9      	moveq	r9, r5
 8001728:	f04f 0901 	movne.w	r9, #1
 800172c:	462e      	moveq	r6, r5
 800172e:	b330      	cbz	r0, 800177e <ai_platform_network_init+0xc6>
 8001730:	2f00      	cmp	r7, #0
 8001732:	f000 8084 	beq.w	800183e <ai_platform_network_init+0x186>
 8001736:	f04f 0a01 	mov.w	sl, #1
 800173a:	f1bb 0f00 	cmp.w	fp, #0
 800173e:	d021      	beq.n	8001784 <ai_platform_network_init+0xcc>
 8001740:	2500      	movs	r5, #0
 8001742:	6822      	ldr	r2, [r4, #0]
 8001744:	4941      	ldr	r1, [pc, #260]	@ (800184c <ai_platform_network_init+0x194>)
 8001746:	428a      	cmp	r2, r1
 8001748:	46ab      	mov	fp, r5
 800174a:	d1d2      	bne.n	80016f2 <ai_platform_network_init+0x3a>
 800174c:	8c62      	ldrh	r2, [r4, #34]	@ 0x22
 800174e:	454a      	cmp	r2, r9
 8001750:	4a3f      	ldr	r2, [pc, #252]	@ (8001850 <ai_platform_network_init+0x198>)
 8001752:	d221      	bcs.n	8001798 <ai_platform_network_init+0xe0>
 8001754:	4293      	cmp	r3, r2
 8001756:	d15c      	bne.n	8001812 <ai_platform_network_init+0x15a>
 8001758:	6266      	str	r6, [r4, #36]	@ 0x24
 800175a:	f8a4 9022 	strh.w	r9, [r4, #34]	@ 0x22
 800175e:	f8a4 b020 	strh.w	fp, [r4, #32]
 8001762:	f8c4 802c 	str.w	r8, [r4, #44]	@ 0x2c
 8001766:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
 800176a:	8525      	strh	r5, [r4, #40]	@ 0x28
 800176c:	4620      	mov	r0, r4
 800176e:	f000 fb1f 	bl	8001db0 <ai_layers_init_all>
 8001772:	e7be      	b.n	80016f2 <ai_platform_network_init+0x3a>
 8001774:	2700      	movs	r7, #0
 8001776:	4638      	mov	r0, r7
 8001778:	b003      	add	sp, #12
 800177a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800177e:	4680      	mov	r8, r0
 8001780:	4682      	mov	sl, r0
 8001782:	e7da      	b.n	800173a <ai_platform_network_init+0x82>
 8001784:	2d00      	cmp	r5, #0
 8001786:	d0dc      	beq.n	8001742 <ai_platform_network_init+0x8a>
 8001788:	2212      	movs	r2, #18
 800178a:	2110      	movs	r1, #16
 800178c:	f104 000c 	add.w	r0, r4, #12
 8001790:	f000 fad8 	bl	8001d44 <core_set_error>
 8001794:	465f      	mov	r7, fp
 8001796:	e7af      	b.n	80016f8 <ai_platform_network_init+0x40>
 8001798:	4293      	cmp	r3, r2
 800179a:	d0dd      	beq.n	8001758 <ai_platform_network_init+0xa0>
 800179c:	f1b9 0f00 	cmp.w	r9, #0
 80017a0:	d018      	beq.n	80017d4 <ai_platform_network_init+0x11c>
 80017a2:	ebc9 03c9 	rsb	r3, r9, r9, lsl #3
 80017a6:	009b      	lsls	r3, r3, #2
 80017a8:	f8cd 9004 	str.w	r9, [sp, #4]
 80017ac:	2700      	movs	r7, #0
 80017ae:	4699      	mov	r9, r3
 80017b0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80017b2:	eb06 0e07 	add.w	lr, r6, r7
 80017b6:	eb03 0c07 	add.w	ip, r3, r7
 80017ba:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80017be:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80017c2:	e89e 0007 	ldmia.w	lr, {r0, r1, r2}
 80017c6:	371c      	adds	r7, #28
 80017c8:	45b9      	cmp	r9, r7
 80017ca:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80017ce:	d1ef      	bne.n	80017b0 <ai_platform_network_init+0xf8>
 80017d0:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80017d4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80017d6:	f8a4 9022 	strh.w	r9, [r4, #34]	@ 0x22
 80017da:	4553      	cmp	r3, sl
 80017dc:	f8a4 b020 	strh.w	fp, [r4, #32]
 80017e0:	d325      	bcc.n	800182e <ai_platform_network_init+0x176>
 80017e2:	f1ba 0f00 	cmp.w	sl, #0
 80017e6:	d0be      	beq.n	8001766 <ai_platform_network_init+0xae>
 80017e8:	ebca 0eca 	rsb	lr, sl, sl, lsl #3
 80017ec:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80017f0:	f04f 0c00 	mov.w	ip, #0
 80017f4:	eb08 070c 	add.w	r7, r8, ip
 80017f8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80017fa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80017fc:	4466      	add	r6, ip
 80017fe:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8001800:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8001804:	f10c 0c1c 	add.w	ip, ip, #28
 8001808:	45f4      	cmp	ip, lr
 800180a:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 800180e:	d1f1      	bne.n	80017f4 <ai_platform_network_init+0x13c>
 8001810:	e7a9      	b.n	8001766 <ai_platform_network_init+0xae>
 8001812:	2212      	movs	r2, #18
 8001814:	2116      	movs	r1, #22
 8001816:	f104 000c 	add.w	r0, r4, #12
 800181a:	f000 fa93 	bl	8001d44 <core_set_error>
 800181e:	2700      	movs	r7, #0
 8001820:	e76a      	b.n	80016f8 <ai_platform_network_init+0x40>
 8001822:	2211      	movs	r2, #17
 8001824:	2110      	movs	r1, #16
 8001826:	300c      	adds	r0, #12
 8001828:	f000 fa8c 	bl	8001d44 <core_set_error>
 800182c:	e764      	b.n	80016f8 <ai_platform_network_init+0x40>
 800182e:	2213      	movs	r2, #19
 8001830:	2116      	movs	r1, #22
 8001832:	f104 000c 	add.w	r0, r4, #12
 8001836:	f000 fa85 	bl	8001d44 <core_set_error>
 800183a:	2700      	movs	r7, #0
 800183c:	e75c      	b.n	80016f8 <ai_platform_network_init+0x40>
 800183e:	2213      	movs	r2, #19
 8001840:	2110      	movs	r1, #16
 8001842:	f104 000c 	add.w	r0, r4, #12
 8001846:	f000 fa7d 	bl	8001d44 <core_set_error>
 800184a:	e755      	b.n	80016f8 <ai_platform_network_init+0x40>
 800184c:	a1c00100 	.word	0xa1c00100
 8001850:	a1facade 	.word	0xa1facade

08001854 <ai_platform_network_post_init>:
 8001854:	b538      	push	{r3, r4, r5, lr}
 8001856:	4b16      	ldr	r3, [pc, #88]	@ (80018b0 <ai_platform_network_post_init+0x5c>)
 8001858:	6802      	ldr	r2, [r0, #0]
 800185a:	ea02 0103 	and.w	r1, r2, r3
 800185e:	4393      	bics	r3, r2
 8001860:	d108      	bne.n	8001874 <ai_platform_network_post_init+0x20>
 8001862:	6903      	ldr	r3, [r0, #16]
 8001864:	f013 0502 	ands.w	r5, r3, #2
 8001868:	4604      	mov	r4, r0
 800186a:	d005      	beq.n	8001878 <ai_platform_network_post_init+0x24>
 800186c:	428a      	cmp	r2, r1
 800186e:	d00a      	beq.n	8001886 <ai_platform_network_post_init+0x32>
 8001870:	2001      	movs	r0, #1
 8001872:	bd38      	pop	{r3, r4, r5, pc}
 8001874:	2000      	movs	r0, #0
 8001876:	bd38      	pop	{r3, r4, r5, pc}
 8001878:	2210      	movs	r2, #16
 800187a:	2111      	movs	r1, #17
 800187c:	300c      	adds	r0, #12
 800187e:	f000 fa61 	bl	8001d44 <core_set_error>
 8001882:	4628      	mov	r0, r5
 8001884:	bd38      	pop	{r3, r4, r5, pc}
 8001886:	f000 faa1 	bl	8001dcc <ai_layers_post_init_all>
 800188a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800188c:	2b00      	cmp	r3, #0
 800188e:	d0ef      	beq.n	8001870 <ai_platform_network_post_init+0x1c>
 8001890:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
 8001892:	e008      	b.n	80018a6 <ai_platform_network_post_init+0x52>
 8001894:	e9d4 3210 	ldrd	r3, r2, [r4, #64]	@ 0x40
 8001898:	4798      	blx	r3
 800189a:	692b      	ldr	r3, [r5, #16]
 800189c:	42ab      	cmp	r3, r5
 800189e:	d0e7      	beq.n	8001870 <ai_platform_network_post_init+0x1c>
 80018a0:	2b00      	cmp	r3, #0
 80018a2:	d0e5      	beq.n	8001870 <ai_platform_network_post_init+0x1c>
 80018a4:	461d      	mov	r5, r3
 80018a6:	4629      	mov	r1, r5
 80018a8:	2000      	movs	r0, #0
 80018aa:	2d00      	cmp	r5, #0
 80018ac:	d1f2      	bne.n	8001894 <ai_platform_network_post_init+0x40>
 80018ae:	e7df      	b.n	8001870 <ai_platform_network_post_init+0x1c>
 80018b0:	a1c00100 	.word	0xa1c00100

080018b4 <ai_platform_network_process>:
 80018b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018b8:	4bb5      	ldr	r3, [pc, #724]	@ (8001b90 <ai_platform_network_process+0x2dc>)
 80018ba:	4605      	mov	r5, r0
 80018bc:	6800      	ldr	r0, [r0, #0]
 80018be:	b085      	sub	sp, #20
 80018c0:	4383      	bics	r3, r0
 80018c2:	9202      	str	r2, [sp, #8]
 80018c4:	f040 8140 	bne.w	8001b48 <ai_platform_network_process+0x294>
 80018c8:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 80018ca:	2b00      	cmp	r3, #0
 80018cc:	f000 8125 	beq.w	8001b1a <ai_platform_network_process+0x266>
 80018d0:	692b      	ldr	r3, [r5, #16]
 80018d2:	f8d5 a034 	ldr.w	sl, [r5, #52]	@ 0x34
 80018d6:	f003 0303 	and.w	r3, r3, #3
 80018da:	2700      	movs	r7, #0
 80018dc:	2b03      	cmp	r3, #3
 80018de:	61af      	str	r7, [r5, #24]
 80018e0:	f040 8137 	bne.w	8001b52 <ai_platform_network_process+0x29e>
 80018e4:	2900      	cmp	r1, #0
 80018e6:	f000 811e 	beq.w	8001b26 <ai_platform_network_process+0x272>
 80018ea:	f1ba 0f00 	cmp.w	sl, #0
 80018ee:	f000 811a 	beq.w	8001b26 <ai_platform_network_process+0x272>
 80018f2:	f8ba 3000 	ldrh.w	r3, [sl]
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	f000 8115 	beq.w	8001b26 <ai_platform_network_process+0x272>
 80018fc:	698b      	ldr	r3, [r1, #24]
 80018fe:	9503      	str	r5, [sp, #12]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	9301      	str	r3, [sp, #4]
 8001904:	460e      	mov	r6, r1
 8001906:	f8da 3004 	ldr.w	r3, [sl, #4]
 800190a:	2b00      	cmp	r3, #0
 800190c:	d072      	beq.n	80019f4 <ai_platform_network_process+0x140>
 800190e:	f853 4027 	ldr.w	r4, [r3, r7, lsl #2]
 8001912:	2c00      	cmp	r4, #0
 8001914:	d06e      	beq.n	80019f4 <ai_platform_network_process+0x140>
 8001916:	f8da 3008 	ldr.w	r3, [sl, #8]
 800191a:	f8d3 9000 	ldr.w	r9, [r3]
 800191e:	eb19 1807 	adds.w	r8, r9, r7, lsl #4
 8001922:	ea4f 1b07 	mov.w	fp, r7, lsl #4
 8001926:	f000 81d3 	beq.w	8001cd0 <ai_platform_network_process+0x41c>
 800192a:	69a3      	ldr	r3, [r4, #24]
 800192c:	2101      	movs	r1, #1
 800192e:	4630      	mov	r0, r6
 8001930:	685d      	ldr	r5, [r3, #4]
 8001932:	f7ff fc6b 	bl	800120c <ai_buffer_get_size>
 8001936:	4285      	cmp	r5, r0
 8001938:	f0c0 8116 	bcc.w	8001b68 <ai_platform_network_process+0x2b4>
 800193c:	68e0      	ldr	r0, [r4, #12]
 800193e:	69b1      	ldr	r1, [r6, #24]
 8001940:	68c2      	ldr	r2, [r0, #12]
 8001942:	68cb      	ldr	r3, [r1, #12]
 8001944:	429a      	cmp	r2, r3
 8001946:	f040 810f 	bne.w	8001b68 <ai_platform_network_process+0x2b4>
 800194a:	6882      	ldr	r2, [r0, #8]
 800194c:	688b      	ldr	r3, [r1, #8]
 800194e:	429a      	cmp	r2, r3
 8001950:	f040 810a 	bne.w	8001b68 <ai_platform_network_process+0x2b4>
 8001954:	6842      	ldr	r2, [r0, #4]
 8001956:	684b      	ldr	r3, [r1, #4]
 8001958:	429a      	cmp	r2, r3
 800195a:	f040 8105 	bne.w	8001b68 <ai_platform_network_process+0x2b4>
 800195e:	69a3      	ldr	r3, [r4, #24]
 8001960:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001964:	f001 f85c 	bl	8002a20 <ai_array_get_data_byte_size>
 8001968:	4605      	mov	r5, r0
 800196a:	4620      	mov	r0, r4
 800196c:	f001 f870 	bl	8002a50 <get_tensor_byte_size>
 8001970:	4285      	cmp	r5, r0
 8001972:	f0c0 80f9 	bcc.w	8001b68 <ai_platform_network_process+0x2b4>
 8001976:	69a3      	ldr	r3, [r4, #24]
 8001978:	6818      	ldr	r0, [r3, #0]
 800197a:	f000 ffb9 	bl	80028f0 <ai_array_to_buffer_fmt>
 800197e:	6833      	ldr	r3, [r6, #0]
 8001980:	4058      	eors	r0, r3
 8001982:	f030 407e 	bics.w	r0, r0, #4261412864	@ 0xfe000000
 8001986:	f040 81a5 	bne.w	8001cd4 <ai_platform_network_process+0x420>
 800198a:	6873      	ldr	r3, [r6, #4]
 800198c:	2b00      	cmp	r3, #0
 800198e:	f000 819f 	beq.w	8001cd0 <ai_platform_network_process+0x41c>
 8001992:	69b3      	ldr	r3, [r6, #24]
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	2b00      	cmp	r3, #0
 8001998:	f000 81a5 	beq.w	8001ce6 <ai_platform_network_process+0x432>
 800199c:	9a01      	ldr	r2, [sp, #4]
 800199e:	429a      	cmp	r2, r3
 80019a0:	bf38      	it	cc
 80019a2:	461a      	movcc	r2, r3
 80019a4:	4620      	mov	r0, r4
 80019a6:	9201      	str	r2, [sp, #4]
 80019a8:	f001 f852 	bl	8002a50 <get_tensor_byte_size>
 80019ac:	f8c8 0008 	str.w	r0, [r8, #8]
 80019b0:	69b3      	ldr	r3, [r6, #24]
 80019b2:	681b      	ldr	r3, [r3, #0]
 80019b4:	fb00 f303 	mul.w	r3, r0, r3
 80019b8:	f8c8 300c 	str.w	r3, [r8, #12]
 80019bc:	6871      	ldr	r1, [r6, #4]
 80019be:	f8c8 1004 	str.w	r1, [r8, #4]
 80019c2:	440b      	add	r3, r1
 80019c4:	f849 300b 	str.w	r3, [r9, fp]
 80019c8:	69a0      	ldr	r0, [r4, #24]
 80019ca:	6803      	ldr	r3, [r0, #0]
 80019cc:	009a      	lsls	r2, r3, #2
 80019ce:	f107 0701 	add.w	r7, r7, #1
 80019d2:	f106 061c 	add.w	r6, r6, #28
 80019d6:	f100 80b1 	bmi.w	8001b3c <ai_platform_network_process+0x288>
 80019da:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 80019de:	1a9b      	subs	r3, r3, r2
 80019e0:	4419      	add	r1, r3
 80019e2:	6081      	str	r1, [r0, #8]
 80019e4:	69a3      	ldr	r3, [r4, #24]
 80019e6:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80019ea:	60da      	str	r2, [r3, #12]
 80019ec:	f8ba 3000 	ldrh.w	r3, [sl]
 80019f0:	42bb      	cmp	r3, r7
 80019f2:	d888      	bhi.n	8001906 <ai_platform_network_process+0x52>
 80019f4:	9d03      	ldr	r5, [sp, #12]
 80019f6:	9b02      	ldr	r3, [sp, #8]
 80019f8:	8e2a      	ldrh	r2, [r5, #48]	@ 0x30
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	f000 817c 	beq.w	8001cf8 <ai_platform_network_process+0x444>
 8001a00:	2a01      	cmp	r2, #1
 8001a02:	f240 80bd 	bls.w	8001b80 <ai_platform_network_process+0x2cc>
 8001a06:	f8d5 8034 	ldr.w	r8, [r5, #52]	@ 0x34
 8001a0a:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8001a0e:	2b00      	cmp	r3, #0
 8001a10:	f000 80b6 	beq.w	8001b80 <ai_platform_network_process+0x2cc>
 8001a14:	f8dd b008 	ldr.w	fp, [sp, #8]
 8001a18:	2700      	movs	r7, #0
 8001a1a:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	f000 80bd 	beq.w	8001b9e <ai_platform_network_process+0x2ea>
 8001a24:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8001a28:	2e00      	cmp	r6, #0
 8001a2a:	f000 80b8 	beq.w	8001b9e <ai_platform_network_process+0x2ea>
 8001a2e:	f8d8 3014 	ldr.w	r3, [r8, #20]
 8001a32:	681c      	ldr	r4, [r3, #0]
 8001a34:	eb14 1907 	adds.w	r9, r4, r7, lsl #4
 8001a38:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 8001a3c:	f000 8160 	beq.w	8001d00 <ai_platform_network_process+0x44c>
 8001a40:	69b3      	ldr	r3, [r6, #24]
 8001a42:	2101      	movs	r1, #1
 8001a44:	685b      	ldr	r3, [r3, #4]
 8001a46:	9302      	str	r3, [sp, #8]
 8001a48:	4658      	mov	r0, fp
 8001a4a:	f7ff fbdf 	bl	800120c <ai_buffer_get_size>
 8001a4e:	9b02      	ldr	r3, [sp, #8]
 8001a50:	4283      	cmp	r3, r0
 8001a52:	f0c0 8095 	bcc.w	8001b80 <ai_platform_network_process+0x2cc>
 8001a56:	68f0      	ldr	r0, [r6, #12]
 8001a58:	f8db 1018 	ldr.w	r1, [fp, #24]
 8001a5c:	68c2      	ldr	r2, [r0, #12]
 8001a5e:	68cb      	ldr	r3, [r1, #12]
 8001a60:	429a      	cmp	r2, r3
 8001a62:	f040 808d 	bne.w	8001b80 <ai_platform_network_process+0x2cc>
 8001a66:	6882      	ldr	r2, [r0, #8]
 8001a68:	688b      	ldr	r3, [r1, #8]
 8001a6a:	429a      	cmp	r2, r3
 8001a6c:	f040 8088 	bne.w	8001b80 <ai_platform_network_process+0x2cc>
 8001a70:	6842      	ldr	r2, [r0, #4]
 8001a72:	684b      	ldr	r3, [r1, #4]
 8001a74:	429a      	cmp	r2, r3
 8001a76:	f040 8083 	bne.w	8001b80 <ai_platform_network_process+0x2cc>
 8001a7a:	69b3      	ldr	r3, [r6, #24]
 8001a7c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001a80:	f000 ffce 	bl	8002a20 <ai_array_get_data_byte_size>
 8001a84:	9002      	str	r0, [sp, #8]
 8001a86:	4630      	mov	r0, r6
 8001a88:	f000 ffe2 	bl	8002a50 <get_tensor_byte_size>
 8001a8c:	9b02      	ldr	r3, [sp, #8]
 8001a8e:	4283      	cmp	r3, r0
 8001a90:	d376      	bcc.n	8001b80 <ai_platform_network_process+0x2cc>
 8001a92:	69b3      	ldr	r3, [r6, #24]
 8001a94:	6818      	ldr	r0, [r3, #0]
 8001a96:	f000 ff2b 	bl	80028f0 <ai_array_to_buffer_fmt>
 8001a9a:	f8db 3000 	ldr.w	r3, [fp]
 8001a9e:	4058      	eors	r0, r3
 8001aa0:	f030 407e 	bics.w	r0, r0, #4261412864	@ 0xfe000000
 8001aa4:	f040 8134 	bne.w	8001d10 <ai_platform_network_process+0x45c>
 8001aa8:	f8db 3004 	ldr.w	r3, [fp, #4]
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	f000 8127 	beq.w	8001d00 <ai_platform_network_process+0x44c>
 8001ab2:	f8db 3018 	ldr.w	r3, [fp, #24]
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	2b00      	cmp	r3, #0
 8001aba:	f000 8133 	beq.w	8001d24 <ai_platform_network_process+0x470>
 8001abe:	9a01      	ldr	r2, [sp, #4]
 8001ac0:	429a      	cmp	r2, r3
 8001ac2:	bf38      	it	cc
 8001ac4:	461a      	movcc	r2, r3
 8001ac6:	4630      	mov	r0, r6
 8001ac8:	9201      	str	r2, [sp, #4]
 8001aca:	f000 ffc1 	bl	8002a50 <get_tensor_byte_size>
 8001ace:	f8c9 0008 	str.w	r0, [r9, #8]
 8001ad2:	f8db 3018 	ldr.w	r3, [fp, #24]
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	fb00 f303 	mul.w	r3, r0, r3
 8001adc:	f8c9 300c 	str.w	r3, [r9, #12]
 8001ae0:	f8db 1004 	ldr.w	r1, [fp, #4]
 8001ae4:	f8c9 1004 	str.w	r1, [r9, #4]
 8001ae8:	440b      	add	r3, r1
 8001aea:	f844 300a 	str.w	r3, [r4, sl]
 8001aee:	69b0      	ldr	r0, [r6, #24]
 8001af0:	6803      	ldr	r3, [r0, #0]
 8001af2:	009b      	lsls	r3, r3, #2
 8001af4:	f107 0701 	add.w	r7, r7, #1
 8001af8:	f10b 0b1c 	add.w	fp, fp, #28
 8001afc:	d44a      	bmi.n	8001b94 <ai_platform_network_process+0x2e0>
 8001afe:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 8001b02:	1a9b      	subs	r3, r3, r2
 8001b04:	4419      	add	r1, r3
 8001b06:	6081      	str	r1, [r0, #8]
 8001b08:	69b3      	ldr	r3, [r6, #24]
 8001b0a:	f8d9 2004 	ldr.w	r2, [r9, #4]
 8001b0e:	60da      	str	r2, [r3, #12]
 8001b10:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8001b14:	42bb      	cmp	r3, r7
 8001b16:	d880      	bhi.n	8001a1a <ai_platform_network_process+0x166>
 8001b18:	e041      	b.n	8001b9e <ai_platform_network_process+0x2ea>
 8001b1a:	692a      	ldr	r2, [r5, #16]
 8001b1c:	61ab      	str	r3, [r5, #24]
 8001b1e:	f002 0203 	and.w	r2, r2, #3
 8001b22:	2a03      	cmp	r2, #3
 8001b24:	d115      	bne.n	8001b52 <ai_platform_network_process+0x29e>
 8001b26:	2217      	movs	r2, #23
 8001b28:	2112      	movs	r1, #18
 8001b2a:	f105 000c 	add.w	r0, r5, #12
 8001b2e:	f000 f909 	bl	8001d44 <core_set_error>
 8001b32:	2400      	movs	r4, #0
 8001b34:	4620      	mov	r0, r4
 8001b36:	b005      	add	sp, #20
 8001b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b3c:	f8ba 3000 	ldrh.w	r3, [sl]
 8001b40:	429f      	cmp	r7, r3
 8001b42:	f4ff aee0 	bcc.w	8001906 <ai_platform_network_process+0x52>
 8001b46:	e755      	b.n	80019f4 <ai_platform_network_process+0x140>
 8001b48:	2400      	movs	r4, #0
 8001b4a:	4620      	mov	r0, r4
 8001b4c:	b005      	add	sp, #20
 8001b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b52:	2230      	movs	r2, #48	@ 0x30
 8001b54:	2111      	movs	r1, #17
 8001b56:	f105 000c 	add.w	r0, r5, #12
 8001b5a:	f000 f8f3 	bl	8001d44 <core_set_error>
 8001b5e:	2400      	movs	r4, #0
 8001b60:	4620      	mov	r0, r4
 8001b62:	b005      	add	sp, #20
 8001b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b68:	9d03      	ldr	r5, [sp, #12]
 8001b6a:	2218      	movs	r2, #24
 8001b6c:	2112      	movs	r1, #18
 8001b6e:	f105 000c 	add.w	r0, r5, #12
 8001b72:	f000 f8e7 	bl	8001d44 <core_set_error>
 8001b76:	2400      	movs	r4, #0
 8001b78:	4620      	mov	r0, r4
 8001b7a:	b005      	add	sp, #20
 8001b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b80:	2218      	movs	r2, #24
 8001b82:	2113      	movs	r1, #19
 8001b84:	f105 000c 	add.w	r0, r5, #12
 8001b88:	f000 f8dc 	bl	8001d44 <core_set_error>
 8001b8c:	2400      	movs	r4, #0
 8001b8e:	e7d1      	b.n	8001b34 <ai_platform_network_process+0x280>
 8001b90:	a1c00100 	.word	0xa1c00100
 8001b94:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8001b98:	429f      	cmp	r7, r3
 8001b9a:	f4ff af3e 	bcc.w	8001a1a <ai_platform_network_process+0x166>
 8001b9e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001ba2:	8e2a      	ldrh	r2, [r5, #48]	@ 0x30
 8001ba4:	832b      	strh	r3, [r5, #24]
 8001ba6:	2a00      	cmp	r2, #0
 8001ba8:	f040 808c 	bne.w	8001cc4 <ai_platform_network_process+0x410>
 8001bac:	4616      	mov	r6, r2
 8001bae:	4617      	mov	r7, r2
 8001bb0:	8b6c      	ldrh	r4, [r5, #26]
 8001bb2:	429c      	cmp	r4, r3
 8001bb4:	bf38      	it	cc
 8001bb6:	46ab      	movcc	fp, r5
 8001bb8:	d2bc      	bcs.n	8001b34 <ai_platform_network_process+0x280>
 8001bba:	2e00      	cmp	r6, #0
 8001bbc:	d030      	beq.n	8001c20 <ai_platform_network_process+0x36c>
 8001bbe:	f04f 0800 	mov.w	r8, #0
 8001bc2:	e014      	b.n	8001bee <ai_platform_network_process+0x33a>
 8001bc4:	6882      	ldr	r2, [r0, #8]
 8001bc6:	68c5      	ldr	r5, [r0, #12]
 8001bc8:	6863      	ldr	r3, [r4, #4]
 8001bca:	1b52      	subs	r2, r2, r5
 8001bcc:	4413      	add	r3, r2
 8001bce:	6083      	str	r3, [r0, #8]
 8001bd0:	698b      	ldr	r3, [r1, #24]
 8001bd2:	6862      	ldr	r2, [r4, #4]
 8001bd4:	60da      	str	r2, [r3, #12]
 8001bd6:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8001bda:	f859 200a 	ldr.w	r2, [r9, sl]
 8001bde:	440b      	add	r3, r1
 8001be0:	4293      	cmp	r3, r2
 8001be2:	bf24      	itt	cs
 8001be4:	68e3      	ldrcs	r3, [r4, #12]
 8001be6:	1ad3      	subcs	r3, r2, r3
 8001be8:	6063      	str	r3, [r4, #4]
 8001bea:	f108 0801 	add.w	r8, r8, #1
 8001bee:	8833      	ldrh	r3, [r6, #0]
 8001bf0:	4543      	cmp	r3, r8
 8001bf2:	ea4f 1a08 	mov.w	sl, r8, lsl #4
 8001bf6:	d913      	bls.n	8001c20 <ai_platform_network_process+0x36c>
 8001bf8:	6873      	ldr	r3, [r6, #4]
 8001bfa:	b18b      	cbz	r3, 8001c20 <ai_platform_network_process+0x36c>
 8001bfc:	f853 1028 	ldr.w	r1, [r3, r8, lsl #2]
 8001c00:	b171      	cbz	r1, 8001c20 <ai_platform_network_process+0x36c>
 8001c02:	6988      	ldr	r0, [r1, #24]
 8001c04:	68b2      	ldr	r2, [r6, #8]
 8001c06:	6803      	ldr	r3, [r0, #0]
 8001c08:	f8d2 9000 	ldr.w	r9, [r2]
 8001c0c:	009d      	lsls	r5, r3, #2
 8001c0e:	eb09 1408 	add.w	r4, r9, r8, lsl #4
 8001c12:	d5d7      	bpl.n	8001bc4 <ai_platform_network_process+0x310>
 8001c14:	6881      	ldr	r1, [r0, #8]
 8001c16:	68a2      	ldr	r2, [r4, #8]
 8001c18:	6860      	ldr	r0, [r4, #4]
 8001c1a:	f000 fde3 	bl	80027e4 <st_int8_copy>
 8001c1e:	e7da      	b.n	8001bd6 <ai_platform_network_process+0x322>
 8001c20:	4658      	mov	r0, fp
 8001c22:	f000 f8e7 	bl	8001df4 <ai_layers_forward_all>
 8001c26:	2f00      	cmp	r7, #0
 8001c28:	d03d      	beq.n	8001ca6 <ai_platform_network_process+0x3f2>
 8001c2a:	2400      	movs	r4, #0
 8001c2c:	e016      	b.n	8001c5c <ai_platform_network_process+0x3a8>
 8001c2e:	e9d8 3201 	ldrd	r3, r2, [r8, #4]
 8001c32:	f859 100a 	ldr.w	r1, [r9, sl]
 8001c36:	4413      	add	r3, r2
 8001c38:	428b      	cmp	r3, r1
 8001c3a:	bf24      	itt	cs
 8001c3c:	f8d8 300c 	ldrcs.w	r3, [r8, #12]
 8001c40:	1acb      	subcs	r3, r1, r3
 8001c42:	f8c8 3004 	str.w	r3, [r8, #4]
 8001c46:	6981      	ldr	r1, [r0, #24]
 8001c48:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8001c4c:	1b52      	subs	r2, r2, r5
 8001c4e:	4413      	add	r3, r2
 8001c50:	608b      	str	r3, [r1, #8]
 8001c52:	6983      	ldr	r3, [r0, #24]
 8001c54:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8001c58:	60da      	str	r2, [r3, #12]
 8001c5a:	3401      	adds	r4, #1
 8001c5c:	883b      	ldrh	r3, [r7, #0]
 8001c5e:	42a3      	cmp	r3, r4
 8001c60:	d921      	bls.n	8001ca6 <ai_platform_network_process+0x3f2>
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	b1fb      	cbz	r3, 8001ca6 <ai_platform_network_process+0x3f2>
 8001c66:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8001c6a:	b1e0      	cbz	r0, 8001ca6 <ai_platform_network_process+0x3f2>
 8001c6c:	68ba      	ldr	r2, [r7, #8]
 8001c6e:	6983      	ldr	r3, [r0, #24]
 8001c70:	f8d2 9000 	ldr.w	r9, [r2]
 8001c74:	681a      	ldr	r2, [r3, #0]
 8001c76:	0092      	lsls	r2, r2, #2
 8001c78:	ea4f 1a04 	mov.w	sl, r4, lsl #4
 8001c7c:	eb09 1804 	add.w	r8, r9, r4, lsl #4
 8001c80:	d5d5      	bpl.n	8001c2e <ai_platform_network_process+0x37a>
 8001c82:	e9d8 1201 	ldrd	r1, r2, [r8, #4]
 8001c86:	6898      	ldr	r0, [r3, #8]
 8001c88:	f000 fdac 	bl	80027e4 <st_int8_copy>
 8001c8c:	e9d8 3101 	ldrd	r3, r1, [r8, #4]
 8001c90:	f859 200a 	ldr.w	r2, [r9, sl]
 8001c94:	440b      	add	r3, r1
 8001c96:	4293      	cmp	r3, r2
 8001c98:	bf24      	itt	cs
 8001c9a:	f8d8 300c 	ldrcs.w	r3, [r8, #12]
 8001c9e:	1ad3      	subcs	r3, r2, r3
 8001ca0:	f8c8 3004 	str.w	r3, [r8, #4]
 8001ca4:	e7d9      	b.n	8001c5a <ai_platform_network_process+0x3a6>
 8001ca6:	f8bb 401a 	ldrh.w	r4, [fp, #26]
 8001caa:	f8bb 3018 	ldrh.w	r3, [fp, #24]
 8001cae:	3401      	adds	r4, #1
 8001cb0:	b2a4      	uxth	r4, r4
 8001cb2:	42a3      	cmp	r3, r4
 8001cb4:	f8ab 401a 	strh.w	r4, [fp, #26]
 8001cb8:	f63f af7f 	bhi.w	8001bba <ai_platform_network_process+0x306>
 8001cbc:	4620      	mov	r0, r4
 8001cbe:	b005      	add	sp, #20
 8001cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001cc4:	2a01      	cmp	r2, #1
 8001cc6:	6b6e      	ldr	r6, [r5, #52]	@ 0x34
 8001cc8:	d02a      	beq.n	8001d20 <ai_platform_network_process+0x46c>
 8001cca:	f106 070c 	add.w	r7, r6, #12
 8001cce:	e76f      	b.n	8001bb0 <ai_platform_network_process+0x2fc>
 8001cd0:	9d03      	ldr	r5, [sp, #12]
 8001cd2:	e728      	b.n	8001b26 <ai_platform_network_process+0x272>
 8001cd4:	9d03      	ldr	r5, [sp, #12]
 8001cd6:	2219      	movs	r2, #25
 8001cd8:	2112      	movs	r1, #18
 8001cda:	f105 000c 	add.w	r0, r5, #12
 8001cde:	f000 f831 	bl	8001d44 <core_set_error>
 8001ce2:	2400      	movs	r4, #0
 8001ce4:	e726      	b.n	8001b34 <ai_platform_network_process+0x280>
 8001ce6:	9d03      	ldr	r5, [sp, #12]
 8001ce8:	4604      	mov	r4, r0
 8001cea:	2221      	movs	r2, #33	@ 0x21
 8001cec:	2112      	movs	r1, #18
 8001cee:	f105 000c 	add.w	r0, r5, #12
 8001cf2:	f000 f827 	bl	8001d44 <core_set_error>
 8001cf6:	e71d      	b.n	8001b34 <ai_platform_network_process+0x280>
 8001cf8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001cfc:	832b      	strh	r3, [r5, #24]
 8001cfe:	e752      	b.n	8001ba6 <ai_platform_network_process+0x2f2>
 8001d00:	2217      	movs	r2, #23
 8001d02:	2113      	movs	r1, #19
 8001d04:	f105 000c 	add.w	r0, r5, #12
 8001d08:	f000 f81c 	bl	8001d44 <core_set_error>
 8001d0c:	2400      	movs	r4, #0
 8001d0e:	e711      	b.n	8001b34 <ai_platform_network_process+0x280>
 8001d10:	2219      	movs	r2, #25
 8001d12:	2113      	movs	r1, #19
 8001d14:	f105 000c 	add.w	r0, r5, #12
 8001d18:	f000 f814 	bl	8001d44 <core_set_error>
 8001d1c:	2400      	movs	r4, #0
 8001d1e:	e709      	b.n	8001b34 <ai_platform_network_process+0x280>
 8001d20:	2700      	movs	r7, #0
 8001d22:	e745      	b.n	8001bb0 <ai_platform_network_process+0x2fc>
 8001d24:	4604      	mov	r4, r0
 8001d26:	2221      	movs	r2, #33	@ 0x21
 8001d28:	2113      	movs	r1, #19
 8001d2a:	f105 000c 	add.w	r0, r5, #12
 8001d2e:	f000 f809 	bl	8001d44 <core_set_error>
 8001d32:	e6ff      	b.n	8001b34 <ai_platform_network_process+0x280>

08001d34 <core_init>:
 8001d34:	2001      	movs	r0, #1
 8001d36:	4770      	bx	lr

08001d38 <core_get_error>:
 8001d38:	4603      	mov	r3, r0
 8001d3a:	2200      	movs	r2, #0
 8001d3c:	6800      	ldr	r0, [r0, #0]
 8001d3e:	601a      	str	r2, [r3, #0]
 8001d40:	4770      	bx	lr
 8001d42:	bf00      	nop

08001d44 <core_set_error>:
 8001d44:	4603      	mov	r3, r0
 8001d46:	7800      	ldrb	r0, [r0, #0]
 8001d48:	b108      	cbz	r0, 8001d4e <core_set_error+0xa>
 8001d4a:	2000      	movs	r0, #0
 8001d4c:	4770      	bx	lr
 8001d4e:	7019      	strb	r1, [r3, #0]
 8001d50:	6819      	ldr	r1, [r3, #0]
 8001d52:	f362 211f 	bfi	r1, r2, #8, #24
 8001d56:	2001      	movs	r0, #1
 8001d58:	6019      	str	r1, [r3, #0]
 8001d5a:	4770      	bx	lr

08001d5c <ai_check_custom_types>:
 8001d5c:	b082      	sub	sp, #8
 8001d5e:	4b13      	ldr	r3, [pc, #76]	@ (8001dac <ai_check_custom_types+0x50>)
 8001d60:	9301      	str	r3, [sp, #4]
 8001d62:	b118      	cbz	r0, 8001d6c <ai_check_custom_types+0x10>
 8001d64:	7803      	ldrb	r3, [r0, #0]
 8001d66:	2b03      	cmp	r3, #3
 8001d68:	d002      	beq.n	8001d70 <ai_check_custom_types+0x14>
 8001d6a:	2000      	movs	r0, #0
 8001d6c:	b002      	add	sp, #8
 8001d6e:	4770      	bx	lr
 8001d70:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8001d74:	4293      	cmp	r3, r2
 8001d76:	d004      	beq.n	8001d82 <ai_check_custom_types+0x26>
 8001d78:	2001      	movs	r0, #1
 8001d7a:	f080 0001 	eor.w	r0, r0, #1
 8001d7e:	b002      	add	sp, #8
 8001d80:	4770      	bx	lr
 8001d82:	7842      	ldrb	r2, [r0, #1]
 8001d84:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001d88:	429a      	cmp	r2, r3
 8001d8a:	f100 0001 	add.w	r0, r0, #1
 8001d8e:	d1f3      	bne.n	8001d78 <ai_check_custom_types+0x1c>
 8001d90:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 8001d94:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001d98:	429a      	cmp	r2, r3
 8001d9a:	d1ed      	bne.n	8001d78 <ai_check_custom_types+0x1c>
 8001d9c:	7842      	ldrb	r2, [r0, #1]
 8001d9e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001da2:	429a      	cmp	r2, r3
 8001da4:	d1e8      	bne.n	8001d78 <ai_check_custom_types+0x1c>
 8001da6:	2000      	movs	r0, #0
 8001da8:	e7e7      	b.n	8001d7a <ai_check_custom_types+0x1e>
 8001daa:	bf00      	nop
 8001dac:	84048403 	.word	0x84048403

08001db0 <ai_layers_init_all>:
 8001db0:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001db2:	2100      	movs	r1, #0
 8001db4:	b143      	cbz	r3, 8001dc8 <ai_layers_init_all+0x18>
 8001db6:	691a      	ldr	r2, [r3, #16]
 8001db8:	60d8      	str	r0, [r3, #12]
 8001dba:	429a      	cmp	r2, r3
 8001dbc:	f101 0101 	add.w	r1, r1, #1
 8001dc0:	d002      	beq.n	8001dc8 <ai_layers_init_all+0x18>
 8001dc2:	b10a      	cbz	r2, 8001dc8 <ai_layers_init_all+0x18>
 8001dc4:	4613      	mov	r3, r2
 8001dc6:	e7f5      	b.n	8001db4 <ai_layers_init_all+0x4>
 8001dc8:	4608      	mov	r0, r1
 8001dca:	4770      	bx	lr

08001dcc <ai_layers_post_init_all>:
 8001dcc:	b538      	push	{r3, r4, r5, lr}
 8001dce:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8001dd0:	2500      	movs	r5, #0
 8001dd2:	b16c      	cbz	r4, 8001df0 <ai_layers_post_init_all+0x24>
 8001dd4:	6863      	ldr	r3, [r4, #4]
 8001dd6:	07db      	lsls	r3, r3, #31
 8001dd8:	d504      	bpl.n	8001de4 <ai_layers_post_init_all+0x18>
 8001dda:	6a23      	ldr	r3, [r4, #32]
 8001ddc:	4620      	mov	r0, r4
 8001dde:	b10b      	cbz	r3, 8001de4 <ai_layers_post_init_all+0x18>
 8001de0:	4798      	blx	r3
 8001de2:	3501      	adds	r5, #1
 8001de4:	6923      	ldr	r3, [r4, #16]
 8001de6:	42a3      	cmp	r3, r4
 8001de8:	d002      	beq.n	8001df0 <ai_layers_post_init_all+0x24>
 8001dea:	b10b      	cbz	r3, 8001df0 <ai_layers_post_init_all+0x24>
 8001dec:	461c      	mov	r4, r3
 8001dee:	e7f0      	b.n	8001dd2 <ai_layers_post_init_all+0x6>
 8001df0:	4628      	mov	r0, r5
 8001df2:	bd38      	pop	{r3, r4, r5, pc}

08001df4 <ai_layers_forward_all>:
 8001df4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001df8:	f8d0 8040 	ldr.w	r8, [r0, #64]	@ 0x40
 8001dfc:	4604      	mov	r4, r0
 8001dfe:	f1b8 0f00 	cmp.w	r8, #0
 8001e02:	d02b      	beq.n	8001e5c <ai_layers_forward_all+0x68>
 8001e04:	6b81      	ldr	r1, [r0, #56]	@ 0x38
 8001e06:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8001e08:	b321      	cbz	r1, 8001e54 <ai_layers_forward_all+0x60>
 8001e0a:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 8001e0c:	2001      	movs	r0, #1
 8001e0e:	47c0      	blx	r8
 8001e10:	6be6      	ldr	r6, [r4, #60]	@ 0x3c
 8001e12:	b1fe      	cbz	r6, 8001e54 <ai_layers_forward_all+0x60>
 8001e14:	2700      	movs	r7, #0
 8001e16:	4631      	mov	r1, r6
 8001e18:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8001e1a:	2002      	movs	r0, #2
 8001e1c:	47c0      	blx	r8
 8001e1e:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 8001e20:	4628      	mov	r0, r5
 8001e22:	696b      	ldr	r3, [r5, #20]
 8001e24:	4798      	blx	r3
 8001e26:	692e      	ldr	r6, [r5, #16]
 8001e28:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8001e2a:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8001e2c:	42b5      	cmp	r5, r6
 8001e2e:	f04f 0003 	mov.w	r0, #3
 8001e32:	d007      	beq.n	8001e44 <ai_layers_forward_all+0x50>
 8001e34:	47c0      	blx	r8
 8001e36:	3701      	adds	r7, #1
 8001e38:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8001e3a:	2e00      	cmp	r6, #0
 8001e3c:	d1eb      	bne.n	8001e16 <ai_layers_forward_all+0x22>
 8001e3e:	4638      	mov	r0, r7
 8001e40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e44:	2003      	movs	r0, #3
 8001e46:	47c0      	blx	r8
 8001e48:	2300      	movs	r3, #0
 8001e4a:	3701      	adds	r7, #1
 8001e4c:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8001e4e:	4638      	mov	r0, r7
 8001e50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e54:	2700      	movs	r7, #0
 8001e56:	4638      	mov	r0, r7
 8001e58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e5c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 8001e5e:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8001e60:	2d00      	cmp	r5, #0
 8001e62:	d0f7      	beq.n	8001e54 <ai_layers_forward_all+0x60>
 8001e64:	4647      	mov	r7, r8
 8001e66:	696b      	ldr	r3, [r5, #20]
 8001e68:	4628      	mov	r0, r5
 8001e6a:	4798      	blx	r3
 8001e6c:	462b      	mov	r3, r5
 8001e6e:	692d      	ldr	r5, [r5, #16]
 8001e70:	429d      	cmp	r5, r3
 8001e72:	d004      	beq.n	8001e7e <ai_layers_forward_all+0x8a>
 8001e74:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8001e76:	3701      	adds	r7, #1
 8001e78:	2d00      	cmp	r5, #0
 8001e7a:	d1f4      	bne.n	8001e66 <ai_layers_forward_all+0x72>
 8001e7c:	e7df      	b.n	8001e3e <ai_layers_forward_all+0x4a>
 8001e7e:	2300      	movs	r3, #0
 8001e80:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8001e82:	3701      	adds	r7, #1
 8001e84:	e7db      	b.n	8001e3e <ai_layers_forward_all+0x4a>
 8001e86:	bf00      	nop

08001e88 <forward_dense>:
 8001e88:	6983      	ldr	r3, [r0, #24]
 8001e8a:	881a      	ldrh	r2, [r3, #0]
 8001e8c:	2a00      	cmp	r2, #0
 8001e8e:	f000 80cc 	beq.w	800202a <forward_dense+0x1a2>
 8001e92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e96:	ed2d 8b02 	vpush	{d8}
 8001e9a:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8001e9e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8001ea2:	b09b      	sub	sp, #108	@ 0x6c
 8001ea4:	b104      	cbz	r4, 8001ea8 <forward_dense+0x20>
 8001ea6:	6824      	ldr	r4, [r4, #0]
 8001ea8:	2a01      	cmp	r2, #1
 8001eaa:	f000 81d7 	beq.w	800225c <forward_dense+0x3d4>
 8001eae:	f8dc 5010 	ldr.w	r5, [ip, #16]
 8001eb2:	b105      	cbz	r5, 8001eb6 <forward_dense+0x2e>
 8001eb4:	682d      	ldr	r5, [r5, #0]
 8001eb6:	2a02      	cmp	r2, #2
 8001eb8:	f000 80b9 	beq.w	800202e <forward_dense+0x1a6>
 8001ebc:	f8dc 301c 	ldr.w	r3, [ip, #28]
 8001ec0:	9308      	str	r3, [sp, #32]
 8001ec2:	2b00      	cmp	r3, #0
 8001ec4:	f000 81c1 	beq.w	800224a <forward_dense+0x3c2>
 8001ec8:	4619      	mov	r1, r3
 8001eca:	f8bc 3018 	ldrh.w	r3, [ip, #24]
 8001ece:	6809      	ldr	r1, [r1, #0]
 8001ed0:	910a      	str	r1, [sp, #40]	@ 0x28
 8001ed2:	2b01      	cmp	r3, #1
 8001ed4:	f240 81bb 	bls.w	800224e <forward_dense+0x3c6>
 8001ed8:	9b08      	ldr	r3, [sp, #32]
 8001eda:	685b      	ldr	r3, [r3, #4]
 8001edc:	9308      	str	r3, [sp, #32]
 8001ede:	460b      	mov	r3, r1
 8001ee0:	68e0      	ldr	r0, [r4, #12]
 8001ee2:	68ee      	ldr	r6, [r5, #12]
 8001ee4:	6840      	ldr	r0, [r0, #4]
 8001ee6:	6999      	ldr	r1, [r3, #24]
 8001ee8:	9010      	str	r0, [sp, #64]	@ 0x40
 8001eea:	6870      	ldr	r0, [r6, #4]
 8001eec:	680b      	ldr	r3, [r1, #0]
 8001eee:	900f      	str	r0, [sp, #60]	@ 0x3c
 8001ef0:	e9d6 7602 	ldrd	r7, r6, [r6, #8]
 8001ef4:	f3c3 1ec6 	ubfx	lr, r3, #7, #7
 8001ef8:	fb00 f707 	mul.w	r7, r0, r7
 8001efc:	f3c3 5041 	ubfx	r0, r3, #21, #2
 8001f00:	fa4e f000 	asr.w	r0, lr, r0
 8001f04:	2a03      	cmp	r2, #3
 8001f06:	900d      	str	r0, [sp, #52]	@ 0x34
 8001f08:	f000 81a5 	beq.w	8002256 <forward_dense+0x3ce>
 8001f0c:	f8dc 8028 	ldr.w	r8, [ip, #40]	@ 0x28
 8001f10:	f1b8 0f00 	cmp.w	r8, #0
 8001f14:	d006      	beq.n	8001f24 <forward_dense+0x9c>
 8001f16:	f8d8 8000 	ldr.w	r8, [r8]
 8001f1a:	f1b8 0f00 	cmp.w	r8, #0
 8001f1e:	d001      	beq.n	8001f24 <forward_dense+0x9c>
 8001f20:	f8d8 8018 	ldr.w	r8, [r8, #24]
 8001f24:	f3c3 4343 	ubfx	r3, r3, #17, #4
 8001f28:	f46f 7288 	mvn.w	r2, #272	@ 0x110
 8001f2c:	fa42 f303 	asr.w	r3, r2, r3
 8001f30:	07db      	lsls	r3, r3, #31
 8001f32:	f140 8177 	bpl.w	8002224 <forward_dense+0x39c>
 8001f36:	f04f 0900 	mov.w	r9, #0
 8001f3a:	69a3      	ldr	r3, [r4, #24]
 8001f3c:	69aa      	ldr	r2, [r5, #24]
 8001f3e:	6891      	ldr	r1, [r2, #8]
 8001f40:	689a      	ldr	r2, [r3, #8]
 8001f42:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001f44:	9102      	str	r1, [sp, #8]
 8001f46:	695b      	ldr	r3, [r3, #20]
 8001f48:	685b      	ldr	r3, [r3, #4]
 8001f4a:	9303      	str	r3, [sp, #12]
 8001f4c:	fb07 f606 	mul.w	r6, r7, r6
 8001f50:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8001f52:	eb01 0086 	add.w	r0, r1, r6, lsl #2
 8001f56:	009c      	lsls	r4, r3, #2
 8001f58:	4281      	cmp	r1, r0
 8001f5a:	900b      	str	r0, [sp, #44]	@ 0x2c
 8001f5c:	9409      	str	r4, [sp, #36]	@ 0x24
 8001f5e:	eb01 0883 	add.w	r8, r1, r3, lsl #2
 8001f62:	d25d      	bcs.n	8002020 <forward_dense+0x198>
 8001f64:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8001f66:	ed9f 8abf 	vldr	s16, [pc, #764]	@ 8002264 <forward_dense+0x3dc>
 8001f6a:	08d9      	lsrs	r1, r3, #3
 8001f6c:	4693      	mov	fp, r2
 8001f6e:	eb02 0a83 	add.w	sl, r2, r3, lsl #2
 8001f72:	461a      	mov	r2, r3
 8001f74:	f023 0301 	bic.w	r3, r3, #1
 8001f78:	eb0b 0383 	add.w	r3, fp, r3, lsl #2
 8001f7c:	9301      	str	r3, [sp, #4]
 8001f7e:	014b      	lsls	r3, r1, #5
 8001f80:	eba3 0382 	sub.w	r3, r3, r2, lsl #2
 8001f84:	9311      	str	r3, [sp, #68]	@ 0x44
 8001f86:	0093      	lsls	r3, r2, #2
 8001f88:	930c      	str	r3, [sp, #48]	@ 0x30
 8001f8a:	f002 0301 	and.w	r3, r2, #1
 8001f8e:	464c      	mov	r4, r9
 8001f90:	9104      	str	r1, [sp, #16]
 8001f92:	9305      	str	r3, [sp, #20]
 8001f94:	46c1      	mov	r9, r8
 8001f96:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001f98:	699b      	ldr	r3, [r3, #24]
 8001f9a:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8001f9e:	9b08      	ldr	r3, [sp, #32]
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d04a      	beq.n	800203a <forward_dense+0x1b2>
 8001fa4:	699b      	ldr	r3, [r3, #24]
 8001fa6:	689d      	ldr	r5, [r3, #8]
 8001fa8:	2c00      	cmp	r4, #0
 8001faa:	d049      	beq.n	8002040 <forward_dense+0x1b8>
 8001fac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001fae:	2b04      	cmp	r3, #4
 8001fb0:	9b02      	ldr	r3, [sp, #8]
 8001fb2:	d057      	beq.n	8002064 <forward_dense+0x1dc>
 8001fb4:	4599      	cmp	r9, r3
 8001fb6:	d927      	bls.n	8002008 <forward_dense+0x180>
 8001fb8:	9e03      	ldr	r6, [sp, #12]
 8001fba:	4618      	mov	r0, r3
 8001fbc:	2d00      	cmp	r5, #0
 8001fbe:	d039      	beq.n	8002034 <forward_dense+0x1ac>
 8001fc0:	ecb5 6a01 	vldmia	r5!, {s12}
 8001fc4:	45da      	cmp	sl, fp
 8001fc6:	d911      	bls.n	8001fec <forward_dense+0x164>
 8001fc8:	eddf 7aa6 	vldr	s15, [pc, #664]	@ 8002264 <forward_dense+0x3dc>
 8001fcc:	465a      	mov	r2, fp
 8001fce:	4661      	mov	r1, ip
 8001fd0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001fd4:	ecb2 7a01 	vldmia	r2!, {s14}
 8001fd8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001fdc:	edd3 6a00 	vldr	s13, [r3]
 8001fe0:	4592      	cmp	sl, r2
 8001fe2:	eee6 7a87 	vfma.f32	s15, s13, s14
 8001fe6:	d8f3      	bhi.n	8001fd0 <forward_dense+0x148>
 8001fe8:	ee36 6a27 	vadd.f32	s12, s12, s15
 8001fec:	eca0 6a01 	vstmia	r0!, {s12}
 8001ff0:	4548      	cmp	r0, r9
 8001ff2:	44b4      	add	ip, r6
 8001ff4:	d3e2      	bcc.n	8001fbc <forward_dense+0x134>
 8001ff6:	9a02      	ldr	r2, [sp, #8]
 8001ff8:	eba9 0302 	sub.w	r3, r9, r2
 8001ffc:	3b01      	subs	r3, #1
 8001ffe:	f023 0303 	bic.w	r3, r3, #3
 8002002:	3304      	adds	r3, #4
 8002004:	18d3      	adds	r3, r2, r3
 8002006:	9302      	str	r3, [sp, #8]
 8002008:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800200a:	9a01      	ldr	r2, [sp, #4]
 800200c:	4499      	add	r9, r3
 800200e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002010:	441a      	add	r2, r3
 8002012:	449a      	add	sl, r3
 8002014:	449b      	add	fp, r3
 8002016:	9201      	str	r2, [sp, #4]
 8002018:	9b02      	ldr	r3, [sp, #8]
 800201a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800201c:	4293      	cmp	r3, r2
 800201e:	d3ba      	bcc.n	8001f96 <forward_dense+0x10e>
 8002020:	b01b      	add	sp, #108	@ 0x6c
 8002022:	ecbd 8b02 	vpop	{d8}
 8002026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800202a:	6853      	ldr	r3, [r2, #4]
 800202c:	deff      	udf	#255	@ 0xff
 800202e:	2300      	movs	r3, #0
 8002030:	685b      	ldr	r3, [r3, #4]
 8002032:	deff      	udf	#255	@ 0xff
 8002034:	ed9f 6a8b 	vldr	s12, [pc, #556]	@ 8002264 <forward_dense+0x3dc>
 8002038:	e7c4      	b.n	8001fc4 <forward_dense+0x13c>
 800203a:	461d      	mov	r5, r3
 800203c:	2c00      	cmp	r4, #0
 800203e:	d1b5      	bne.n	8001fac <forward_dense+0x124>
 8002040:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8002042:	9217      	str	r2, [sp, #92]	@ 0x5c
 8002044:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8002046:	9b02      	ldr	r3, [sp, #8]
 8002048:	9218      	str	r2, [sp, #96]	@ 0x60
 800204a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800204c:	e9cd 3b13 	strd	r3, fp, [sp, #76]	@ 0x4c
 8002050:	4413      	add	r3, r2
 8002052:	9302      	str	r3, [sp, #8]
 8002054:	a813      	add	r0, sp, #76	@ 0x4c
 8002056:	2301      	movs	r3, #1
 8002058:	e9cd c515 	strd	ip, r5, [sp, #84]	@ 0x54
 800205c:	9319      	str	r3, [sp, #100]	@ 0x64
 800205e:	f000 fa67 	bl	8002530 <forward_lite_dense_if32of32wf32>
 8002062:	e7d1      	b.n	8002008 <forward_dense+0x180>
 8002064:	4599      	cmp	r9, r3
 8002066:	d9cf      	bls.n	8002008 <forward_dense+0x180>
 8002068:	9a04      	ldr	r2, [sp, #16]
 800206a:	9300      	str	r3, [sp, #0]
 800206c:	1c57      	adds	r7, r2, #1
 800206e:	9b01      	ldr	r3, [sp, #4]
 8002070:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002072:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 8002076:	4452      	add	r2, sl
 8002078:	3b01      	subs	r3, #1
 800207a:	eb0c 0787 	add.w	r7, ip, r7, lsl #2
 800207e:	9206      	str	r2, [sp, #24]
 8002080:	9307      	str	r3, [sp, #28]
 8002082:	2d00      	cmp	r5, #0
 8002084:	f000 80c3 	beq.w	800220e <forward_dense+0x386>
 8002088:	9b04      	ldr	r3, [sp, #16]
 800208a:	ecf5 2a01 	vldmia	r5!, {s5}
 800208e:	ed9f 7a75 	vldr	s14, [pc, #468]	@ 8002264 <forward_dense+0x3dc>
 8002092:	2b00      	cmp	r3, #0
 8002094:	f000 80c3 	beq.w	800221e <forward_dense+0x396>
 8002098:	f10c 0204 	add.w	r2, ip, #4
 800209c:	f10b 0320 	add.w	r3, fp, #32
 80020a0:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 80020a4:	ed13 2a07 	vldr	s4, [r3, #-28]	@ 0xffffffe4
 80020a8:	f812 1c03 	ldrb.w	r1, [r2, #-3]
 80020ac:	ed53 3a08 	vldr	s7, [r3, #-32]	@ 0xffffffe0
 80020b0:	ed13 4a06 	vldr	s8, [r3, #-24]	@ 0xffffffe8
 80020b4:	ed53 4a05 	vldr	s9, [r3, #-20]	@ 0xffffffec
 80020b8:	ed13 5a04 	vldr	s10, [r3, #-16]
 80020bc:	ed53 5a03 	vldr	s11, [r3, #-12]
 80020c0:	ed13 6a02 	vldr	s12, [r3, #-8]
 80020c4:	ed53 6a01 	vldr	s13, [r3, #-4]
 80020c8:	f000 060f 	and.w	r6, r0, #15
 80020cc:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80020d0:	edd6 7a00 	vldr	s15, [r6]
 80020d4:	0900      	lsrs	r0, r0, #4
 80020d6:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 80020da:	ed90 3a00 	vldr	s6, [r0]
 80020de:	ee67 7a82 	vmul.f32	s15, s15, s4
 80020e2:	0908      	lsrs	r0, r1, #4
 80020e4:	eee3 7a23 	vfma.f32	s15, s6, s7
 80020e8:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 80020ec:	f001 010f 	and.w	r1, r1, #15
 80020f0:	edd0 3a00 	vldr	s7, [r0]
 80020f4:	f812 0c02 	ldrb.w	r0, [r2, #-2]
 80020f8:	eee3 7a84 	vfma.f32	s15, s7, s8
 80020fc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8002100:	0906      	lsrs	r6, r0, #4
 8002102:	ed91 4a00 	vldr	s8, [r1]
 8002106:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800210a:	eee4 7a24 	vfma.f32	s15, s8, s9
 800210e:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8002112:	f000 000f 	and.w	r0, r0, #15
 8002116:	edd6 4a00 	vldr	s9, [r6]
 800211a:	eee4 7a85 	vfma.f32	s15, s9, s10
 800211e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8002122:	3204      	adds	r2, #4
 8002124:	ed90 5a00 	vldr	s10, [r0]
 8002128:	0908      	lsrs	r0, r1, #4
 800212a:	eee5 7a25 	vfma.f32	s15, s10, s11
 800212e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8002132:	f001 010f 	and.w	r1, r1, #15
 8002136:	edd0 5a00 	vldr	s11, [r0]
 800213a:	eee5 7a86 	vfma.f32	s15, s11, s12
 800213e:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8002142:	42ba      	cmp	r2, r7
 8002144:	ed91 6a00 	vldr	s12, [r1]
 8002148:	eee6 7a26 	vfma.f32	s15, s12, s13
 800214c:	f103 0320 	add.w	r3, r3, #32
 8002150:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002154:	d1a4      	bne.n	80020a0 <forward_dense+0x218>
 8002156:	f8dd e018 	ldr.w	lr, [sp, #24]
 800215a:	f1a7 0804 	sub.w	r8, r7, #4
 800215e:	9b01      	ldr	r3, [sp, #4]
 8002160:	459e      	cmp	lr, r3
 8002162:	d22a      	bcs.n	80021ba <forward_dense+0x332>
 8002164:	9b07      	ldr	r3, [sp, #28]
 8002166:	eba3 060e 	sub.w	r6, r3, lr
 800216a:	ea4f 0ad6 	mov.w	sl, r6, lsr #3
 800216e:	f10e 0208 	add.w	r2, lr, #8
 8002172:	f108 30ff 	add.w	r0, r8, #4294967295	@ 0xffffffff
 8002176:	eb08 06d6 	add.w	r6, r8, r6, lsr #3
 800217a:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800217e:	ed52 5a01 	vldr	s11, [r2, #-4]
 8002182:	ed52 6a02 	vldr	s13, [r2, #-8]
 8002186:	f003 010f 	and.w	r1, r3, #15
 800218a:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800218e:	edd1 7a00 	vldr	s15, [r1]
 8002192:	091b      	lsrs	r3, r3, #4
 8002194:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002198:	ed93 6a00 	vldr	s12, [r3]
 800219c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80021a0:	42b0      	cmp	r0, r6
 80021a2:	eee6 7a26 	vfma.f32	s15, s12, s13
 80021a6:	f102 0208 	add.w	r2, r2, #8
 80021aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80021ae:	d1e4      	bne.n	800217a <forward_dense+0x2f2>
 80021b0:	f10a 0a01 	add.w	sl, sl, #1
 80021b4:	44d0      	add	r8, sl
 80021b6:	eb0e 0eca 	add.w	lr, lr, sl, lsl #3
 80021ba:	9b05      	ldr	r3, [sp, #20]
 80021bc:	b1cb      	cbz	r3, 80021f2 <forward_dense+0x36a>
 80021be:	f898 3000 	ldrb.w	r3, [r8]
 80021c2:	edde 7a00 	vldr	s15, [lr]
 80021c6:	9a03      	ldr	r2, [sp, #12]
 80021c8:	091b      	lsrs	r3, r3, #4
 80021ca:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80021ce:	edd3 6a00 	vldr	s13, [r3]
 80021d2:	9b00      	ldr	r3, [sp, #0]
 80021d4:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80021d8:	4494      	add	ip, r2
 80021da:	4417      	add	r7, r2
 80021dc:	ee32 7a87 	vadd.f32	s14, s5, s14
 80021e0:	eca3 7a01 	vstmia	r3!, {s14}
 80021e4:	4599      	cmp	r9, r3
 80021e6:	9300      	str	r3, [sp, #0]
 80021e8:	f63f af4b 	bhi.w	8002082 <forward_dense+0x1fa>
 80021ec:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80021f0:	e701      	b.n	8001ff6 <forward_dense+0x16e>
 80021f2:	9b00      	ldr	r3, [sp, #0]
 80021f4:	9a03      	ldr	r2, [sp, #12]
 80021f6:	ee72 2a87 	vadd.f32	s5, s5, s14
 80021fa:	4494      	add	ip, r2
 80021fc:	ece3 2a01 	vstmia	r3!, {s5}
 8002200:	454b      	cmp	r3, r9
 8002202:	9300      	str	r3, [sp, #0]
 8002204:	4417      	add	r7, r2
 8002206:	d2f1      	bcs.n	80021ec <forward_dense+0x364>
 8002208:	2d00      	cmp	r5, #0
 800220a:	f47f af3d 	bne.w	8002088 <forward_dense+0x200>
 800220e:	9b04      	ldr	r3, [sp, #16]
 8002210:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 8002264 <forward_dense+0x3dc>
 8002214:	eef0 2a48 	vmov.f32	s5, s16
 8002218:	2b00      	cmp	r3, #0
 800221a:	f47f af3d 	bne.w	8002098 <forward_dense+0x210>
 800221e:	46de      	mov	lr, fp
 8002220:	46e0      	mov	r8, ip
 8002222:	e79c      	b.n	800215e <forward_dense+0x2d6>
 8002224:	f8d1 900c 	ldr.w	r9, [r1, #12]
 8002228:	f1b8 0f00 	cmp.w	r8, #0
 800222c:	f43f ae85 	beq.w	8001f3a <forward_dense+0xb2>
 8002230:	e9d8 0100 	ldrd	r0, r1, [r8]
 8002234:	f000 fbcc 	bl	80029d0 <ai_array_get_byte_size>
 8002238:	f8d8 800c 	ldr.w	r8, [r8, #12]
 800223c:	4602      	mov	r2, r0
 800223e:	4641      	mov	r1, r8
 8002240:	4648      	mov	r0, r9
 8002242:	f000 facf 	bl	80027e4 <st_int8_copy>
 8002246:	46c1      	mov	r9, r8
 8002248:	e677      	b.n	8001f3a <forward_dense+0xb2>
 800224a:	930a      	str	r3, [sp, #40]	@ 0x28
 800224c:	e648      	b.n	8001ee0 <forward_dense+0x58>
 800224e:	2300      	movs	r3, #0
 8002250:	9308      	str	r3, [sp, #32]
 8002252:	460b      	mov	r3, r1
 8002254:	e644      	b.n	8001ee0 <forward_dense+0x58>
 8002256:	2300      	movs	r3, #0
 8002258:	685b      	ldr	r3, [r3, #4]
 800225a:	deff      	udf	#255	@ 0xff
 800225c:	2300      	movs	r3, #0
 800225e:	685b      	ldr	r3, [r3, #4]
 8002260:	deff      	udf	#255	@ 0xff
 8002262:	bf00      	nop
 8002264:	00000000 	.word	0x00000000

08002268 <forward_sigmoid>:
 8002268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800226a:	ed2d 8b02 	vpush	{d8}
 800226e:	6982      	ldr	r2, [r0, #24]
 8002270:	8813      	ldrh	r3, [r2, #0]
 8002272:	2b00      	cmp	r3, #0
 8002274:	d03b      	beq.n	80022ee <forward_sigmoid+0x86>
 8002276:	6852      	ldr	r2, [r2, #4]
 8002278:	6854      	ldr	r4, [r2, #4]
 800227a:	b104      	cbz	r4, 800227e <forward_sigmoid+0x16>
 800227c:	6824      	ldr	r4, [r4, #0]
 800227e:	2b01      	cmp	r3, #1
 8002280:	d034      	beq.n	80022ec <forward_sigmoid+0x84>
 8002282:	6915      	ldr	r5, [r2, #16]
 8002284:	b105      	cbz	r5, 8002288 <forward_sigmoid+0x20>
 8002286:	682d      	ldr	r5, [r5, #0]
 8002288:	68a3      	ldr	r3, [r4, #8]
 800228a:	0a1b      	lsrs	r3, r3, #8
 800228c:	d031      	beq.n	80022f2 <forward_sigmoid+0x8a>
 800228e:	68e0      	ldr	r0, [r4, #12]
 8002290:	2201      	movs	r2, #1
 8002292:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8002296:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800229a:	4298      	cmp	r0, r3
 800229c:	fb01 f202 	mul.w	r2, r1, r2
 80022a0:	d1f9      	bne.n	8002296 <forward_sigmoid+0x2e>
 80022a2:	69a7      	ldr	r7, [r4, #24]
 80022a4:	69a9      	ldr	r1, [r5, #24]
 80022a6:	68bb      	ldr	r3, [r7, #8]
 80022a8:	688e      	ldr	r6, [r1, #8]
 80022aa:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 80022ae:	3a01      	subs	r2, #1
 80022b0:	eb03 0582 	add.w	r5, r3, r2, lsl #2
 80022b4:	42ab      	cmp	r3, r5
 80022b6:	eb06 0682 	add.w	r6, r6, r2, lsl #2
 80022ba:	d814      	bhi.n	80022e6 <forward_sigmoid+0x7e>
 80022bc:	3504      	adds	r5, #4
 80022be:	3604      	adds	r6, #4
 80022c0:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 80022c4:	462c      	mov	r4, r5
 80022c6:	ed35 0a01 	vldmdb	r5!, {s0}
 80022ca:	eeb1 0a40 	vneg.f32	s0, s0
 80022ce:	f001 fb65 	bl	800399c <expf>
 80022d2:	ee30 0a08 	vadd.f32	s0, s0, s16
 80022d6:	3c08      	subs	r4, #8
 80022d8:	eec8 7a00 	vdiv.f32	s15, s16, s0
 80022dc:	ed66 7a01 	vstmdb	r6!, {s15}
 80022e0:	68bb      	ldr	r3, [r7, #8]
 80022e2:	42a3      	cmp	r3, r4
 80022e4:	d9ee      	bls.n	80022c4 <forward_sigmoid+0x5c>
 80022e6:	ecbd 8b02 	vpop	{d8}
 80022ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80022ec:	2300      	movs	r3, #0
 80022ee:	685b      	ldr	r3, [r3, #4]
 80022f0:	deff      	udf	#255	@ 0xff
 80022f2:	69ab      	ldr	r3, [r5, #24]
 80022f4:	69a7      	ldr	r7, [r4, #24]
 80022f6:	689e      	ldr	r6, [r3, #8]
 80022f8:	68bd      	ldr	r5, [r7, #8]
 80022fa:	e7df      	b.n	80022bc <forward_sigmoid+0x54>

080022fc <forward_relu>:
 80022fc:	6982      	ldr	r2, [r0, #24]
 80022fe:	8813      	ldrh	r3, [r2, #0]
 8002300:	b323      	cbz	r3, 800234c <forward_relu+0x50>
 8002302:	6851      	ldr	r1, [r2, #4]
 8002304:	684a      	ldr	r2, [r1, #4]
 8002306:	b102      	cbz	r2, 800230a <forward_relu+0xe>
 8002308:	6812      	ldr	r2, [r2, #0]
 800230a:	2b01      	cmp	r3, #1
 800230c:	f000 808d 	beq.w	800242a <forward_relu+0x12e>
 8002310:	b470      	push	{r4, r5, r6}
 8002312:	6909      	ldr	r1, [r1, #16]
 8002314:	b101      	cbz	r1, 8002318 <forward_relu+0x1c>
 8002316:	6809      	ldr	r1, [r1, #0]
 8002318:	69c6      	ldr	r6, [r0, #28]
 800231a:	b1ce      	cbz	r6, 8002350 <forward_relu+0x54>
 800231c:	6873      	ldr	r3, [r6, #4]
 800231e:	6988      	ldr	r0, [r1, #24]
 8002320:	6991      	ldr	r1, [r2, #24]
 8002322:	2b01      	cmp	r3, #1
 8002324:	d044      	beq.n	80023b0 <forward_relu+0xb4>
 8002326:	6893      	ldr	r3, [r2, #8]
 8002328:	6880      	ldr	r0, [r0, #8]
 800232a:	6889      	ldr	r1, [r1, #8]
 800232c:	0a1b      	lsrs	r3, r3, #8
 800232e:	d073      	beq.n	8002418 <forward_relu+0x11c>
 8002330:	68d5      	ldr	r5, [r2, #12]
 8002332:	2201      	movs	r2, #1
 8002334:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8002338:	f853 4d04 	ldr.w	r4, [r3, #-4]!
 800233c:	429d      	cmp	r5, r3
 800233e:	fb04 f202 	mul.w	r2, r4, r2
 8002342:	d1f9      	bne.n	8002338 <forward_relu+0x3c>
 8002344:	68b3      	ldr	r3, [r6, #8]
 8002346:	bc70      	pop	{r4, r5, r6}
 8002348:	f000 b874 	b.w	8002434 <forward_lite_nl_relu_generic_if32of32_kernel>
 800234c:	685b      	ldr	r3, [r3, #4]
 800234e:	deff      	udf	#255	@ 0xff
 8002350:	6893      	ldr	r3, [r2, #8]
 8002352:	6989      	ldr	r1, [r1, #24]
 8002354:	6990      	ldr	r0, [r2, #24]
 8002356:	6889      	ldr	r1, [r1, #8]
 8002358:	6884      	ldr	r4, [r0, #8]
 800235a:	0a1b      	lsrs	r3, r3, #8
 800235c:	d05e      	beq.n	800241c <forward_relu+0x120>
 800235e:	68d5      	ldr	r5, [r2, #12]
 8002360:	2201      	movs	r2, #1
 8002362:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8002366:	f853 0d04 	ldr.w	r0, [r3, #-4]!
 800236a:	429d      	cmp	r5, r3
 800236c:	fb00 f202 	mul.w	r2, r0, r2
 8002370:	d1f9      	bne.n	8002366 <forward_relu+0x6a>
 8002372:	f102 4380 	add.w	r3, r2, #1073741824	@ 0x40000000
 8002376:	3b01      	subs	r3, #1
 8002378:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 800237c:	4294      	cmp	r4, r2
 800237e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8002382:	d813      	bhi.n	80023ac <forward_relu+0xb0>
 8002384:	ed9f 7a2a 	vldr	s14, [pc, #168]	@ 8002430 <forward_relu+0x134>
 8002388:	3204      	adds	r2, #4
 800238a:	3104      	adds	r1, #4
 800238c:	4613      	mov	r3, r2
 800238e:	ed72 7a01 	vldmdb	r2!, {s15}
 8002392:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800239a:	f1a3 0308 	sub.w	r3, r3, #8
 800239e:	bfb8      	it	lt
 80023a0:	eef0 7a47 	vmovlt.f32	s15, s14
 80023a4:	429c      	cmp	r4, r3
 80023a6:	ed61 7a01 	vstmdb	r1!, {s15}
 80023aa:	d9ef      	bls.n	800238c <forward_relu+0x90>
 80023ac:	bc70      	pop	{r4, r5, r6}
 80023ae:	4770      	bx	lr
 80023b0:	688c      	ldr	r4, [r1, #8]
 80023b2:	6891      	ldr	r1, [r2, #8]
 80023b4:	6880      	ldr	r0, [r0, #8]
 80023b6:	0a09      	lsrs	r1, r1, #8
 80023b8:	d032      	beq.n	8002420 <forward_relu+0x124>
 80023ba:	68d5      	ldr	r5, [r2, #12]
 80023bc:	eb05 0281 	add.w	r2, r5, r1, lsl #2
 80023c0:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 80023c4:	4295      	cmp	r5, r2
 80023c6:	fb01 f303 	mul.w	r3, r1, r3
 80023ca:	d1f9      	bne.n	80023c0 <forward_relu+0xc4>
 80023cc:	f103 4280 	add.w	r2, r3, #1073741824	@ 0x40000000
 80023d0:	3a01      	subs	r2, #1
 80023d2:	68b1      	ldr	r1, [r6, #8]
 80023d4:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80023d8:	429c      	cmp	r4, r3
 80023da:	ed91 7a00 	vldr	s14, [r1]
 80023de:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 80023e2:	d8e3      	bhi.n	80023ac <forward_relu+0xb0>
 80023e4:	2500      	movs	r5, #0
 80023e6:	3304      	adds	r3, #4
 80023e8:	1d02      	adds	r2, r0, #4
 80023ea:	ed53 7a01 	vldr	s15, [r3, #-4]
 80023ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80023f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80023f6:	f1a3 0104 	sub.w	r1, r3, #4
 80023fa:	f1a3 0308 	sub.w	r3, r3, #8
 80023fe:	d405      	bmi.n	800240c <forward_relu+0x110>
 8002400:	429c      	cmp	r4, r3
 8002402:	f842 5d04 	str.w	r5, [r2, #-4]!
 8002406:	d8d1      	bhi.n	80023ac <forward_relu+0xb0>
 8002408:	460b      	mov	r3, r1
 800240a:	e7ee      	b.n	80023ea <forward_relu+0xee>
 800240c:	429c      	cmp	r4, r3
 800240e:	ed62 7a01 	vstmdb	r2!, {s15}
 8002412:	d8cb      	bhi.n	80023ac <forward_relu+0xb0>
 8002414:	460b      	mov	r3, r1
 8002416:	e7e8      	b.n	80023ea <forward_relu+0xee>
 8002418:	2201      	movs	r2, #1
 800241a:	e793      	b.n	8002344 <forward_relu+0x48>
 800241c:	4622      	mov	r2, r4
 800241e:	e7b1      	b.n	8002384 <forward_relu+0x88>
 8002420:	68b2      	ldr	r2, [r6, #8]
 8002422:	4623      	mov	r3, r4
 8002424:	ed92 7a00 	vldr	s14, [r2]
 8002428:	e7dc      	b.n	80023e4 <forward_relu+0xe8>
 800242a:	2300      	movs	r3, #0
 800242c:	685b      	ldr	r3, [r3, #4]
 800242e:	deff      	udf	#255	@ 0xff
 8002430:	00000000 	.word	0x00000000

08002434 <forward_lite_nl_relu_generic_if32of32_kernel>:
 8002434:	edd3 6a02 	vldr	s13, [r3, #8]
 8002438:	ed93 7a00 	vldr	s14, [r3]
 800243c:	ed93 6a01 	vldr	s12, [r3, #4]
 8002440:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8002444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002448:	d42a      	bmi.n	80024a0 <forward_lite_nl_relu_generic_if32of32_kernel+0x6c>
 800244a:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 800244e:	3a01      	subs	r2, #1
 8002450:	eb01 0c82 	add.w	ip, r1, r2, lsl #2
 8002454:	4561      	cmp	r1, ip
 8002456:	ea4f 0282 	mov.w	r2, r2, lsl #2
 800245a:	d85d      	bhi.n	8002518 <forward_lite_nl_relu_generic_if32of32_kernel+0xe4>
 800245c:	1d11      	adds	r1, r2, #4
 800245e:	f10c 0304 	add.w	r3, ip, #4
 8002462:	4408      	add	r0, r1
 8002464:	ebac 0202 	sub.w	r2, ip, r2
 8002468:	e00c      	b.n	8002484 <forward_lite_nl_relu_generic_if32of32_kernel+0x50>
 800246a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800246e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002472:	ee77 5ac7 	vsub.f32	s11, s15, s14
 8002476:	db01      	blt.n	800247c <forward_lite_nl_relu_generic_if32of32_kernel+0x48>
 8002478:	ee65 7a86 	vmul.f32	s15, s11, s12
 800247c:	4293      	cmp	r3, r2
 800247e:	ed60 7a01 	vstmdb	r0!, {s15}
 8002482:	d00c      	beq.n	800249e <forward_lite_nl_relu_generic_if32of32_kernel+0x6a>
 8002484:	ed73 7a01 	vldmdb	r3!, {s15}
 8002488:	eef4 6ae7 	vcmpe.f32	s13, s15
 800248c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002490:	daeb      	bge.n	800246a <forward_lite_nl_relu_generic_if32of32_kernel+0x36>
 8002492:	eef0 7a66 	vmov.f32	s15, s13
 8002496:	4293      	cmp	r3, r2
 8002498:	ed60 7a01 	vstmdb	r0!, {s15}
 800249c:	d1f2      	bne.n	8002484 <forward_lite_nl_relu_generic_if32of32_kernel+0x50>
 800249e:	4770      	bx	lr
 80024a0:	eeb5 6a40 	vcmp.f32	s12, #0.0
 80024a4:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 80024a8:	3a01      	subs	r2, #1
 80024aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80024ae:	eb01 0c82 	add.w	ip, r1, r2, lsl #2
 80024b2:	ea4f 0282 	mov.w	r2, r2, lsl #2
 80024b6:	d017      	beq.n	80024e8 <forward_lite_nl_relu_generic_if32of32_kernel+0xb4>
 80024b8:	4561      	cmp	r1, ip
 80024ba:	d82d      	bhi.n	8002518 <forward_lite_nl_relu_generic_if32of32_kernel+0xe4>
 80024bc:	1d11      	adds	r1, r2, #4
 80024be:	f10c 0304 	add.w	r3, ip, #4
 80024c2:	4401      	add	r1, r0
 80024c4:	ebac 0202 	sub.w	r2, ip, r2
 80024c8:	ed73 7a01 	vldmdb	r3!, {s15}
 80024cc:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80024d0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80024d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80024d8:	ee66 6a86 	vmul.f32	s13, s13, s12
 80024dc:	d81d      	bhi.n	800251a <forward_lite_nl_relu_generic_if32of32_kernel+0xe6>
 80024de:	4293      	cmp	r3, r2
 80024e0:	ed61 6a01 	vstmdb	r1!, {s13}
 80024e4:	d1f0      	bne.n	80024c8 <forward_lite_nl_relu_generic_if32of32_kernel+0x94>
 80024e6:	4770      	bx	lr
 80024e8:	4561      	cmp	r1, ip
 80024ea:	d815      	bhi.n	8002518 <forward_lite_nl_relu_generic_if32of32_kernel+0xe4>
 80024ec:	1d11      	adds	r1, r2, #4
 80024ee:	b500      	push	{lr}
 80024f0:	f10c 0304 	add.w	r3, ip, #4
 80024f4:	f04f 0e00 	mov.w	lr, #0
 80024f8:	4401      	add	r1, r0
 80024fa:	ebac 0202 	sub.w	r2, ip, r2
 80024fe:	ed73 7a01 	vldmdb	r3!, {s15}
 8002502:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800250a:	d40b      	bmi.n	8002524 <forward_lite_nl_relu_generic_if32of32_kernel+0xf0>
 800250c:	4293      	cmp	r3, r2
 800250e:	f841 ed04 	str.w	lr, [r1, #-4]!
 8002512:	d1f4      	bne.n	80024fe <forward_lite_nl_relu_generic_if32of32_kernel+0xca>
 8002514:	f85d fb04 	ldr.w	pc, [sp], #4
 8002518:	4770      	bx	lr
 800251a:	4293      	cmp	r3, r2
 800251c:	ed61 7a01 	vstmdb	r1!, {s15}
 8002520:	d1d2      	bne.n	80024c8 <forward_lite_nl_relu_generic_if32of32_kernel+0x94>
 8002522:	4770      	bx	lr
 8002524:	4293      	cmp	r3, r2
 8002526:	ed61 7a01 	vstmdb	r1!, {s15}
 800252a:	d1e8      	bne.n	80024fe <forward_lite_nl_relu_generic_if32of32_kernel+0xca>
 800252c:	e7f2      	b.n	8002514 <forward_lite_nl_relu_generic_if32of32_kernel+0xe0>
 800252e:	bf00      	nop

08002530 <forward_lite_dense_if32of32wf32>:
 8002530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002534:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 8002538:	6801      	ldr	r1, [r0, #0]
 800253a:	f8d0 8004 	ldr.w	r8, [r0, #4]
 800253e:	fb02 f303 	mul.w	r3, r2, r3
 8002542:	b083      	sub	sp, #12
 8002544:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8002548:	4299      	cmp	r1, r3
 800254a:	9100      	str	r1, [sp, #0]
 800254c:	9301      	str	r3, [sp, #4]
 800254e:	f080 811e 	bcs.w	800278e <forward_lite_dense_if32of32wf32+0x25e>
 8002552:	6904      	ldr	r4, [r0, #16]
 8002554:	4607      	mov	r7, r0
 8002556:	0096      	lsls	r6, r2, #2
 8002558:	9b00      	ldr	r3, [sp, #0]
 800255a:	68bd      	ldr	r5, [r7, #8]
 800255c:	eb03 0e06 	add.w	lr, r3, r6
 8002560:	459e      	cmp	lr, r3
 8002562:	461e      	mov	r6, r3
 8002564:	f240 8104 	bls.w	8002770 <forward_lite_dense_if32of32wf32+0x240>
 8002568:	f1a4 0c10 	sub.w	ip, r4, #16
 800256c:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
 8002570:	f10c 0c01 	add.w	ip, ip, #1
 8002574:	ea4f 1b8c 	mov.w	fp, ip, lsl #6
 8002578:	ea4f 0984 	mov.w	r9, r4, lsl #2
 800257c:	eb08 1c8c 	add.w	ip, r8, ip, lsl #6
 8002580:	2c0f      	cmp	r4, #15
 8002582:	ed9f 7a97 	vldr	s14, [pc, #604]	@ 80027e0 <forward_lite_dense_if32of32wf32+0x2b0>
 8002586:	f240 8105 	bls.w	8002794 <forward_lite_dense_if32of32wf32+0x264>
 800258a:	f108 0240 	add.w	r2, r8, #64	@ 0x40
 800258e:	f105 0340 	add.w	r3, r5, #64	@ 0x40
 8002592:	4621      	mov	r1, r4
 8002594:	ed53 5a0f 	vldr	s11, [r3, #-60]	@ 0xffffffc4
 8002598:	ed52 7a0f 	vldr	s15, [r2, #-60]	@ 0xffffffc4
 800259c:	ed12 6a10 	vldr	s12, [r2, #-64]	@ 0xffffffc0
 80025a0:	ed53 6a10 	vldr	s13, [r3, #-64]	@ 0xffffffc0
 80025a4:	ed52 4a0d 	vldr	s9, [r2, #-52]	@ 0xffffffcc
 80025a8:	ed12 5a0c 	vldr	s10, [r2, #-48]	@ 0xffffffd0
 80025ac:	ed12 3a0a 	vldr	s6, [r2, #-40]	@ 0xffffffd8
 80025b0:	ed53 3a0a 	vldr	s7, [r3, #-40]	@ 0xffffffd8
 80025b4:	ed12 4a09 	vldr	s8, [r2, #-36]	@ 0xffffffdc
 80025b8:	ed12 1a06 	vldr	s2, [r2, #-24]	@ 0xffffffe8
 80025bc:	ed53 1a06 	vldr	s3, [r3, #-24]	@ 0xffffffe8
 80025c0:	ed12 2a05 	vldr	s4, [r2, #-20]	@ 0xffffffec
 80025c4:	ed53 2a05 	vldr	s5, [r3, #-20]	@ 0xffffffec
 80025c8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80025cc:	ed52 5a0e 	vldr	s11, [r2, #-56]	@ 0xffffffc8
 80025d0:	eee6 7a26 	vfma.f32	s15, s12, s13
 80025d4:	3910      	subs	r1, #16
 80025d6:	290f      	cmp	r1, #15
 80025d8:	ed13 6a0e 	vldr	s12, [r3, #-56]	@ 0xffffffc8
 80025dc:	ed53 6a0d 	vldr	s13, [r3, #-52]	@ 0xffffffcc
 80025e0:	eee5 7a86 	vfma.f32	s15, s11, s12
 80025e4:	f102 0240 	add.w	r2, r2, #64	@ 0x40
 80025e8:	f103 0340 	add.w	r3, r3, #64	@ 0x40
 80025ec:	ed53 5a1c 	vldr	s11, [r3, #-112]	@ 0xffffff90
 80025f0:	ed12 6a1b 	vldr	s12, [r2, #-108]	@ 0xffffff94
 80025f4:	eee4 7aa6 	vfma.f32	s15, s9, s13
 80025f8:	ed53 6a1b 	vldr	s13, [r3, #-108]	@ 0xffffff94
 80025fc:	ed53 4a19 	vldr	s9, [r3, #-100]	@ 0xffffff9c
 8002600:	eee5 7a25 	vfma.f32	s15, s10, s11
 8002604:	ed12 5a18 	vldr	s10, [r2, #-96]	@ 0xffffffa0
 8002608:	ed53 5a18 	vldr	s11, [r3, #-96]	@ 0xffffffa0
 800260c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8002610:	ed12 6a17 	vldr	s12, [r2, #-92]	@ 0xffffffa4
 8002614:	ed53 6a17 	vldr	s13, [r3, #-92]	@ 0xffffffa4
 8002618:	eee3 7a23 	vfma.f32	s15, s6, s7
 800261c:	ed12 3a14 	vldr	s6, [r2, #-80]	@ 0xffffffb0
 8002620:	ed53 3a14 	vldr	s7, [r3, #-80]	@ 0xffffffb0
 8002624:	eee4 7a24 	vfma.f32	s15, s8, s9
 8002628:	ed12 4a13 	vldr	s8, [r2, #-76]	@ 0xffffffb4
 800262c:	ed53 4a13 	vldr	s9, [r3, #-76]	@ 0xffffffb4
 8002630:	eee5 7a25 	vfma.f32	s15, s10, s11
 8002634:	ed12 5a12 	vldr	s10, [r2, #-72]	@ 0xffffffb8
 8002638:	ed53 5a12 	vldr	s11, [r3, #-72]	@ 0xffffffb8
 800263c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8002640:	ed12 6a11 	vldr	s12, [r2, #-68]	@ 0xffffffbc
 8002644:	ed53 6a11 	vldr	s13, [r3, #-68]	@ 0xffffffbc
 8002648:	eee1 7a21 	vfma.f32	s15, s2, s3
 800264c:	eee2 7a22 	vfma.f32	s15, s4, s5
 8002650:	eee3 7a23 	vfma.f32	s15, s6, s7
 8002654:	eee4 7a24 	vfma.f32	s15, s8, s9
 8002658:	eee5 7a25 	vfma.f32	s15, s10, s11
 800265c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8002660:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002664:	d896      	bhi.n	8002594 <forward_lite_dense_if32of32wf32+0x64>
 8002666:	eb05 020b 	add.w	r2, r5, fp
 800266a:	f004 010f 	and.w	r1, r4, #15
 800266e:	4663      	mov	r3, ip
 8002670:	2903      	cmp	r1, #3
 8002672:	d95f      	bls.n	8002734 <forward_lite_dense_if32of32wf32+0x204>
 8002674:	edd2 6a01 	vldr	s13, [r2, #4]
 8002678:	edd3 7a01 	vldr	s15, [r3, #4]
 800267c:	ed93 6a00 	vldr	s12, [r3]
 8002680:	ed93 5a02 	vldr	s10, [r3, #8]
 8002684:	edd2 5a02 	vldr	s11, [r2, #8]
 8002688:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800268c:	edd2 6a00 	vldr	s13, [r2]
 8002690:	eee6 7a26 	vfma.f32	s15, s12, s13
 8002694:	1f08      	subs	r0, r1, #4
 8002696:	2803      	cmp	r0, #3
 8002698:	ed93 6a03 	vldr	s12, [r3, #12]
 800269c:	edd2 6a03 	vldr	s13, [r2, #12]
 80026a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80026a4:	eee5 7a25 	vfma.f32	s15, s10, s11
 80026a8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80026ac:	eeb0 7a67 	vmov.f32	s14, s15
 80026b0:	d938      	bls.n	8002724 <forward_lite_dense_if32of32wf32+0x1f4>
 80026b2:	edd2 6a05 	vldr	s13, [r2, #20]
 80026b6:	edd3 7a05 	vldr	s15, [r3, #20]
 80026ba:	ed93 6a04 	vldr	s12, [r3, #16]
 80026be:	ed93 5a06 	vldr	s10, [r3, #24]
 80026c2:	edd2 5a06 	vldr	s11, [r2, #24]
 80026c6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80026ca:	edd2 6a04 	vldr	s13, [r2, #16]
 80026ce:	eee6 7a26 	vfma.f32	s15, s12, s13
 80026d2:	f1a1 0a08 	sub.w	sl, r1, #8
 80026d6:	f1ba 0f03 	cmp.w	sl, #3
 80026da:	ed93 6a07 	vldr	s12, [r3, #28]
 80026de:	edd2 6a07 	vldr	s13, [r2, #28]
 80026e2:	eee5 7a25 	vfma.f32	s15, s10, s11
 80026e6:	eee6 7a26 	vfma.f32	s15, s12, s13
 80026ea:	ee37 7a27 	vadd.f32	s14, s14, s15
 80026ee:	d919      	bls.n	8002724 <forward_lite_dense_if32of32wf32+0x1f4>
 80026f0:	edd3 6a09 	vldr	s13, [r3, #36]	@ 0x24
 80026f4:	edd2 7a09 	vldr	s15, [r2, #36]	@ 0x24
 80026f8:	ed92 6a08 	vldr	s12, [r2, #32]
 80026fc:	ed92 5a0a 	vldr	s10, [r2, #40]	@ 0x28
 8002700:	edd3 5a0a 	vldr	s11, [r3, #40]	@ 0x28
 8002704:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8002708:	edd3 6a08 	vldr	s13, [r3, #32]
 800270c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8002710:	ed92 6a0b 	vldr	s12, [r2, #44]	@ 0x2c
 8002714:	edd3 6a0b 	vldr	s13, [r3, #44]	@ 0x2c
 8002718:	eee5 7a25 	vfma.f32	s15, s10, s11
 800271c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8002720:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002724:	0880      	lsrs	r0, r0, #2
 8002726:	3001      	adds	r0, #1
 8002728:	eb02 1200 	add.w	r2, r2, r0, lsl #4
 800272c:	eb03 1300 	add.w	r3, r3, r0, lsl #4
 8002730:	f001 0103 	and.w	r1, r1, #3
 8002734:	b1a9      	cbz	r1, 8002762 <forward_lite_dense_if32of32wf32+0x232>
 8002736:	edd3 6a00 	vldr	s13, [r3]
 800273a:	edd2 7a00 	vldr	s15, [r2]
 800273e:	3901      	subs	r1, #1
 8002740:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8002744:	d00d      	beq.n	8002762 <forward_lite_dense_if32of32wf32+0x232>
 8002746:	edd3 6a01 	vldr	s13, [r3, #4]
 800274a:	edd2 7a01 	vldr	s15, [r2, #4]
 800274e:	2901      	cmp	r1, #1
 8002750:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8002754:	d005      	beq.n	8002762 <forward_lite_dense_if32of32wf32+0x232>
 8002756:	edd2 6a02 	vldr	s13, [r2, #8]
 800275a:	edd3 7a02 	vldr	s15, [r3, #8]
 800275e:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8002762:	444d      	add	r5, r9
 8002764:	eca6 7a01 	vstmia	r6!, {s14}
 8002768:	45b6      	cmp	lr, r6
 800276a:	f63f af09 	bhi.w	8002580 <forward_lite_dense_if32of32wf32+0x50>
 800276e:	697a      	ldr	r2, [r7, #20]
 8002770:	68fb      	ldr	r3, [r7, #12]
 8002772:	b99b      	cbnz	r3, 800279c <forward_lite_dense_if32of32wf32+0x26c>
 8002774:	9b00      	ldr	r3, [sp, #0]
 8002776:	9901      	ldr	r1, [sp, #4]
 8002778:	693c      	ldr	r4, [r7, #16]
 800277a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800277e:	4299      	cmp	r1, r3
 8002780:	9300      	str	r3, [sp, #0]
 8002782:	eb08 0884 	add.w	r8, r8, r4, lsl #2
 8002786:	ea4f 0682 	mov.w	r6, r2, lsl #2
 800278a:	f63f aee5 	bhi.w	8002558 <forward_lite_dense_if32of32wf32+0x28>
 800278e:	b003      	add	sp, #12
 8002790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002794:	4621      	mov	r1, r4
 8002796:	462a      	mov	r2, r5
 8002798:	4643      	mov	r3, r8
 800279a:	e769      	b.n	8002670 <forward_lite_dense_if32of32wf32+0x140>
 800279c:	2a00      	cmp	r2, #0
 800279e:	d0e9      	beq.n	8002774 <forward_lite_dense_if32of32wf32+0x244>
 80027a0:	9a00      	ldr	r2, [sp, #0]
 80027a2:	ed93 7a00 	vldr	s14, [r3]
 80027a6:	edd2 7a00 	vldr	s15, [r2]
 80027aa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80027ae:	4613      	mov	r3, r2
 80027b0:	edc2 7a00 	vstr	s15, [r2]
 80027b4:	697a      	ldr	r2, [r7, #20]
 80027b6:	2a01      	cmp	r2, #1
 80027b8:	d9dc      	bls.n	8002774 <forward_lite_dense_if32of32wf32+0x244>
 80027ba:	1d19      	adds	r1, r3, #4
 80027bc:	2301      	movs	r3, #1
 80027be:	68fa      	ldr	r2, [r7, #12]
 80027c0:	ed91 7a00 	vldr	s14, [r1]
 80027c4:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80027c8:	edd2 7a00 	vldr	s15, [r2]
 80027cc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80027d0:	3301      	adds	r3, #1
 80027d2:	ece1 7a01 	vstmia	r1!, {s15}
 80027d6:	697a      	ldr	r2, [r7, #20]
 80027d8:	429a      	cmp	r2, r3
 80027da:	d8f0      	bhi.n	80027be <forward_lite_dense_if32of32wf32+0x28e>
 80027dc:	e7ca      	b.n	8002774 <forward_lite_dense_if32of32wf32+0x244>
 80027de:	bf00      	nop
 80027e0:	00000000 	.word	0x00000000

080027e4 <st_int8_copy>:
 80027e4:	4288      	cmp	r0, r1
 80027e6:	d056      	beq.n	8002896 <st_int8_copy+0xb2>
 80027e8:	2a00      	cmp	r2, #0
 80027ea:	d054      	beq.n	8002896 <st_int8_copy+0xb2>
 80027ec:	4288      	cmp	r0, r1
 80027ee:	d353      	bcc.n	8002898 <st_int8_copy+0xb4>
 80027f0:	078b      	lsls	r3, r1, #30
 80027f2:	d102      	bne.n	80027fa <st_int8_copy+0x16>
 80027f4:	e009      	b.n	800280a <st_int8_copy+0x26>
 80027f6:	2a00      	cmp	r2, #0
 80027f8:	d05b      	beq.n	80028b2 <st_int8_copy+0xce>
 80027fa:	f910 3b01 	ldrsb.w	r3, [r0], #1
 80027fe:	f801 3b01 	strb.w	r3, [r1], #1
 8002802:	078b      	lsls	r3, r1, #30
 8002804:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8002808:	d1f5      	bne.n	80027f6 <st_int8_copy+0x12>
 800280a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800280e:	ea5f 1e12 	movs.w	lr, r2, lsr #4
 8002812:	d068      	beq.n	80028e6 <st_int8_copy+0x102>
 8002814:	ea40 0301 	orr.w	r3, r0, r1
 8002818:	075b      	lsls	r3, r3, #29
 800281a:	d14b      	bne.n	80028b4 <st_int8_copy+0xd0>
 800281c:	f1be 0f01 	cmp.w	lr, #1
 8002820:	d048      	beq.n	80028b4 <st_int8_copy+0xd0>
 8002822:	f100 0310 	add.w	r3, r0, #16
 8002826:	ea4f 140e 	mov.w	r4, lr, lsl #4
 800282a:	f101 0c10 	add.w	ip, r1, #16
 800282e:	eb03 1e0e 	add.w	lr, r3, lr, lsl #4
 8002832:	ed13 6b04 	vldr	d6, [r3, #-16]
 8002836:	ed13 7b02 	vldr	d7, [r3, #-8]
 800283a:	3310      	adds	r3, #16
 800283c:	4573      	cmp	r3, lr
 800283e:	ed0c 6b04 	vstr	d6, [ip, #-16]
 8002842:	ed0c 7b02 	vstr	d7, [ip, #-8]
 8002846:	f10c 0c10 	add.w	ip, ip, #16
 800284a:	d1f2      	bne.n	8002832 <st_int8_copy+0x4e>
 800284c:	f3c2 0381 	ubfx	r3, r2, #2, #2
 8002850:	4421      	add	r1, r4
 8002852:	4420      	add	r0, r4
 8002854:	f002 0203 	and.w	r2, r2, #3
 8002858:	b16b      	cbz	r3, 8002876 <st_int8_copy+0x92>
 800285a:	6804      	ldr	r4, [r0, #0]
 800285c:	600c      	str	r4, [r1, #0]
 800285e:	1e5c      	subs	r4, r3, #1
 8002860:	d005      	beq.n	800286e <st_int8_copy+0x8a>
 8002862:	6845      	ldr	r5, [r0, #4]
 8002864:	604d      	str	r5, [r1, #4]
 8002866:	2c01      	cmp	r4, #1
 8002868:	bf1c      	itt	ne
 800286a:	6884      	ldrne	r4, [r0, #8]
 800286c:	608c      	strne	r4, [r1, #8]
 800286e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8002872:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8002876:	b162      	cbz	r2, 8002892 <st_int8_copy+0xae>
 8002878:	f990 3000 	ldrsb.w	r3, [r0]
 800287c:	700b      	strb	r3, [r1, #0]
 800287e:	3a01      	subs	r2, #1
 8002880:	d007      	beq.n	8002892 <st_int8_copy+0xae>
 8002882:	f990 3001 	ldrsb.w	r3, [r0, #1]
 8002886:	704b      	strb	r3, [r1, #1]
 8002888:	2a01      	cmp	r2, #1
 800288a:	bf1c      	itt	ne
 800288c:	f990 3002 	ldrsbne.w	r3, [r0, #2]
 8002890:	708b      	strbne	r3, [r1, #2]
 8002892:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002896:	4770      	bx	lr
 8002898:	1883      	adds	r3, r0, r2
 800289a:	428b      	cmp	r3, r1
 800289c:	d9a8      	bls.n	80027f0 <st_int8_copy+0xc>
 800289e:	4283      	cmp	r3, r0
 80028a0:	440a      	add	r2, r1
 80028a2:	d9f8      	bls.n	8002896 <st_int8_copy+0xb2>
 80028a4:	f913 1d01 	ldrsb.w	r1, [r3, #-1]!
 80028a8:	f802 1d01 	strb.w	r1, [r2, #-1]!
 80028ac:	4283      	cmp	r3, r0
 80028ae:	d1f9      	bne.n	80028a4 <st_int8_copy+0xc0>
 80028b0:	4770      	bx	lr
 80028b2:	4770      	bx	lr
 80028b4:	ea4f 140e 	mov.w	r4, lr, lsl #4
 80028b8:	460b      	mov	r3, r1
 80028ba:	eb01 1e0e 	add.w	lr, r1, lr, lsl #4
 80028be:	4684      	mov	ip, r0
 80028c0:	f8dc 7000 	ldr.w	r7, [ip]
 80028c4:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80028c8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80028cc:	f8dc 800c 	ldr.w	r8, [ip, #12]
 80028d0:	f8c3 800c 	str.w	r8, [r3, #12]
 80028d4:	601f      	str	r7, [r3, #0]
 80028d6:	605e      	str	r6, [r3, #4]
 80028d8:	609d      	str	r5, [r3, #8]
 80028da:	3310      	adds	r3, #16
 80028dc:	459e      	cmp	lr, r3
 80028de:	f10c 0c10 	add.w	ip, ip, #16
 80028e2:	d1ed      	bne.n	80028c0 <st_int8_copy+0xdc>
 80028e4:	e7b2      	b.n	800284c <st_int8_copy+0x68>
 80028e6:	0893      	lsrs	r3, r2, #2
 80028e8:	f002 0203 	and.w	r2, r2, #3
 80028ec:	e7b4      	b.n	8002858 <st_int8_copy+0x74>
 80028ee:	bf00      	nop

080028f0 <ai_array_to_buffer_fmt>:
 80028f0:	f3c0 4343 	ubfx	r3, r0, #17, #4
 80028f4:	2b02      	cmp	r3, #2
 80028f6:	d053      	beq.n	80029a0 <ai_array_to_buffer_fmt+0xb0>
 80028f8:	4a2c      	ldr	r2, [pc, #176]	@ (80029ac <ai_array_to_buffer_fmt+0xbc>)
 80028fa:	f020 437e 	bic.w	r3, r0, #4261412864	@ 0xfe000000
 80028fe:	4293      	cmp	r3, r2
 8002900:	d010      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 8002902:	dc21      	bgt.n	8002948 <ai_array_to_buffer_fmt+0x58>
 8002904:	4a2a      	ldr	r2, [pc, #168]	@ (80029b0 <ai_array_to_buffer_fmt+0xc0>)
 8002906:	4293      	cmp	r3, r2
 8002908:	d00c      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 800290a:	dd0f      	ble.n	800292c <ai_array_to_buffer_fmt+0x3c>
 800290c:	4a29      	ldr	r2, [pc, #164]	@ (80029b4 <ai_array_to_buffer_fmt+0xc4>)
 800290e:	4293      	cmp	r3, r2
 8002910:	d008      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 8002912:	f502 32fa 	add.w	r2, r2, #128000	@ 0x1f400
 8002916:	4293      	cmp	r3, r2
 8002918:	d004      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 800291a:	4a27      	ldr	r2, [pc, #156]	@ (80029b8 <ai_array_to_buffer_fmt+0xc8>)
 800291c:	4293      	cmp	r3, r2
 800291e:	bf0c      	ite	eq
 8002920:	4613      	moveq	r3, r2
 8002922:	2340      	movne	r3, #64	@ 0x40
 8002924:	f000 40d0 	and.w	r0, r0, #1744830464	@ 0x68000000
 8002928:	4318      	orrs	r0, r3
 800292a:	4770      	bx	lr
 800292c:	f5a2 6280 	sub.w	r2, r2, #1024	@ 0x400
 8002930:	4293      	cmp	r3, r2
 8002932:	d0f7      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 8002934:	dd2a      	ble.n	800298c <ai_array_to_buffer_fmt+0x9c>
 8002936:	4a21      	ldr	r2, [pc, #132]	@ (80029bc <ai_array_to_buffer_fmt+0xcc>)
 8002938:	f000 40d0 	and.w	r0, r0, #1744830464	@ 0x68000000
 800293c:	4293      	cmp	r3, r2
 800293e:	bf0c      	ite	eq
 8002940:	4613      	moveq	r3, r2
 8002942:	2340      	movne	r3, #64	@ 0x40
 8002944:	4318      	orrs	r0, r3
 8002946:	4770      	bx	lr
 8002948:	4a1d      	ldr	r2, [pc, #116]	@ (80029c0 <ai_array_to_buffer_fmt+0xd0>)
 800294a:	4293      	cmp	r3, r2
 800294c:	d0ea      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 800294e:	dd0f      	ble.n	8002970 <ai_array_to_buffer_fmt+0x80>
 8002950:	4a1c      	ldr	r2, [pc, #112]	@ (80029c4 <ai_array_to_buffer_fmt+0xd4>)
 8002952:	4293      	cmp	r3, r2
 8002954:	d0e6      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 8002956:	f502 027e 	add.w	r2, r2, #16646144	@ 0xfe0000
 800295a:	4293      	cmp	r3, r2
 800295c:	d0e2      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 800295e:	4a1a      	ldr	r2, [pc, #104]	@ (80029c8 <ai_array_to_buffer_fmt+0xd8>)
 8002960:	f000 40d0 	and.w	r0, r0, #1744830464	@ 0x68000000
 8002964:	4293      	cmp	r3, r2
 8002966:	bf0c      	ite	eq
 8002968:	4613      	moveq	r3, r2
 800296a:	2340      	movne	r3, #64	@ 0x40
 800296c:	4318      	orrs	r0, r3
 800296e:	4770      	bx	lr
 8002970:	f5a2 6280 	sub.w	r2, r2, #1024	@ 0x400
 8002974:	4293      	cmp	r3, r2
 8002976:	d0d5      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 8002978:	3207      	adds	r2, #7
 800297a:	4293      	cmp	r3, r2
 800297c:	d0d2      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 800297e:	f2a2 3287 	subw	r2, r2, #903	@ 0x387
 8002982:	4293      	cmp	r3, r2
 8002984:	bf0c      	ite	eq
 8002986:	4613      	moveq	r3, r2
 8002988:	2340      	movne	r3, #64	@ 0x40
 800298a:	e7cb      	b.n	8002924 <ai_array_to_buffer_fmt+0x34>
 800298c:	f5a2 6280 	sub.w	r2, r2, #1024	@ 0x400
 8002990:	4293      	cmp	r3, r2
 8002992:	d0c7      	beq.n	8002924 <ai_array_to_buffer_fmt+0x34>
 8002994:	3280      	adds	r2, #128	@ 0x80
 8002996:	4293      	cmp	r3, r2
 8002998:	bf0c      	ite	eq
 800299a:	4613      	moveq	r3, r2
 800299c:	2340      	movne	r3, #64	@ 0x40
 800299e:	e7c1      	b.n	8002924 <ai_array_to_buffer_fmt+0x34>
 80029a0:	4b0a      	ldr	r3, [pc, #40]	@ (80029cc <ai_array_to_buffer_fmt+0xdc>)
 80029a2:	4003      	ands	r3, r0
 80029a4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80029a8:	e7bc      	b.n	8002924 <ai_array_to_buffer_fmt+0x34>
 80029aa:	bf00      	nop
 80029ac:	00840040 	.word	0x00840040
 80029b0:	00040840 	.word	0x00040840
 80029b4:	00041040 	.word	0x00041040
 80029b8:	0004084f 	.word	0x0004084f
 80029bc:	00040447 	.word	0x00040447
 80029c0:	00840840 	.word	0x00840840
 80029c4:	00841040 	.word	0x00841040
 80029c8:	0084084f 	.word	0x0084084f
 80029cc:	00803fff 	.word	0x00803fff

080029d0 <ai_array_get_byte_size>:
 80029d0:	b319      	cbz	r1, 8002a1a <ai_array_get_byte_size+0x4a>
 80029d2:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 80029d6:	fb01 f303 	mul.w	r3, r1, r3
 80029da:	f3c0 4243 	ubfx	r2, r0, #17, #4
 80029de:	3307      	adds	r3, #7
 80029e0:	f3c0 5141 	ubfx	r1, r0, #21, #2
 80029e4:	f023 0307 	bic.w	r3, r3, #7
 80029e8:	2a04      	cmp	r2, #4
 80029ea:	ea4f 10e0 	mov.w	r0, r0, asr #7
 80029ee:	fa23 f101 	lsr.w	r1, r3, r1
 80029f2:	d00b      	beq.n	8002a0c <ai_array_get_byte_size+0x3c>
 80029f4:	2a08      	cmp	r2, #8
 80029f6:	d002      	beq.n	80029fe <ai_array_get_byte_size+0x2e>
 80029f8:	3107      	adds	r1, #7
 80029fa:	08c8      	lsrs	r0, r1, #3
 80029fc:	4770      	bx	lr
 80029fe:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002a02:	eb01 2100 	add.w	r1, r1, r0, lsl #8
 8002a06:	3107      	adds	r1, #7
 8002a08:	08c8      	lsrs	r0, r1, #3
 8002a0a:	4770      	bx	lr
 8002a0c:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002a10:	eb01 1100 	add.w	r1, r1, r0, lsl #4
 8002a14:	3107      	adds	r1, #7
 8002a16:	08c8      	lsrs	r0, r1, #3
 8002a18:	4770      	bx	lr
 8002a1a:	4608      	mov	r0, r1
 8002a1c:	4770      	bx	lr
 8002a1e:	bf00      	nop

08002a20 <ai_array_get_data_byte_size>:
 8002a20:	b169      	cbz	r1, 8002a3e <ai_array_get_data_byte_size+0x1e>
 8002a22:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 8002a26:	fb03 f101 	mul.w	r1, r3, r1
 8002a2a:	1dcb      	adds	r3, r1, #7
 8002a2c:	f023 0307 	bic.w	r3, r3, #7
 8002a30:	f3c0 5041 	ubfx	r0, r0, #21, #2
 8002a34:	fa23 f000 	lsr.w	r0, r3, r0
 8002a38:	3007      	adds	r0, #7
 8002a3a:	08c0      	lsrs	r0, r0, #3
 8002a3c:	4770      	bx	lr
 8002a3e:	4608      	mov	r0, r1
 8002a40:	4770      	bx	lr
 8002a42:	bf00      	nop

08002a44 <ai_version_get>:
 8002a44:	0212      	lsls	r2, r2, #8
 8002a46:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002a4a:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8002a4e:	4770      	bx	lr

08002a50 <get_tensor_byte_size>:
 8002a50:	b410      	push	{r4}
 8002a52:	6983      	ldr	r3, [r0, #24]
 8002a54:	68c4      	ldr	r4, [r0, #12]
 8002a56:	6941      	ldr	r1, [r0, #20]
 8002a58:	681b      	ldr	r3, [r3, #0]
 8002a5a:	68e0      	ldr	r0, [r4, #12]
 8002a5c:	4a07      	ldr	r2, [pc, #28]	@ (8002a7c <get_tensor_byte_size+0x2c>)
 8002a5e:	68c9      	ldr	r1, [r1, #12]
 8002a60:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002a64:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
 8002a68:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002a6c:	fb01 f000 	mul.w	r0, r1, r0
 8002a70:	4293      	cmp	r3, r2
 8002a72:	bf04      	itt	eq
 8002a74:	3007      	addeq	r0, #7
 8002a76:	08c0      	lsreq	r0, r0, #3
 8002a78:	4770      	bx	lr
 8002a7a:	bf00      	nop
 8002a7c:	000400c0 	.word	0x000400c0

08002a80 <sbrk_aligned>:
 8002a80:	b570      	push	{r4, r5, r6, lr}
 8002a82:	4e0f      	ldr	r6, [pc, #60]	@ (8002ac0 <sbrk_aligned+0x40>)
 8002a84:	460c      	mov	r4, r1
 8002a86:	6831      	ldr	r1, [r6, #0]
 8002a88:	4605      	mov	r5, r0
 8002a8a:	b911      	cbnz	r1, 8002a92 <sbrk_aligned+0x12>
 8002a8c:	f000 f9e0 	bl	8002e50 <_sbrk_r>
 8002a90:	6030      	str	r0, [r6, #0]
 8002a92:	4621      	mov	r1, r4
 8002a94:	4628      	mov	r0, r5
 8002a96:	f000 f9db 	bl	8002e50 <_sbrk_r>
 8002a9a:	1c43      	adds	r3, r0, #1
 8002a9c:	d103      	bne.n	8002aa6 <sbrk_aligned+0x26>
 8002a9e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8002aa2:	4620      	mov	r0, r4
 8002aa4:	bd70      	pop	{r4, r5, r6, pc}
 8002aa6:	1cc4      	adds	r4, r0, #3
 8002aa8:	f024 0403 	bic.w	r4, r4, #3
 8002aac:	42a0      	cmp	r0, r4
 8002aae:	d0f8      	beq.n	8002aa2 <sbrk_aligned+0x22>
 8002ab0:	1a21      	subs	r1, r4, r0
 8002ab2:	4628      	mov	r0, r5
 8002ab4:	f000 f9cc 	bl	8002e50 <_sbrk_r>
 8002ab8:	3001      	adds	r0, #1
 8002aba:	d1f2      	bne.n	8002aa2 <sbrk_aligned+0x22>
 8002abc:	e7ef      	b.n	8002a9e <sbrk_aligned+0x1e>
 8002abe:	bf00      	nop
 8002ac0:	20000ae0 	.word	0x20000ae0

08002ac4 <_malloc_r>:
 8002ac4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002ac8:	1ccd      	adds	r5, r1, #3
 8002aca:	f025 0503 	bic.w	r5, r5, #3
 8002ace:	3508      	adds	r5, #8
 8002ad0:	2d0c      	cmp	r5, #12
 8002ad2:	bf38      	it	cc
 8002ad4:	250c      	movcc	r5, #12
 8002ad6:	2d00      	cmp	r5, #0
 8002ad8:	4606      	mov	r6, r0
 8002ada:	db01      	blt.n	8002ae0 <_malloc_r+0x1c>
 8002adc:	42a9      	cmp	r1, r5
 8002ade:	d904      	bls.n	8002aea <_malloc_r+0x26>
 8002ae0:	230c      	movs	r3, #12
 8002ae2:	6033      	str	r3, [r6, #0]
 8002ae4:	2000      	movs	r0, #0
 8002ae6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002aea:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002bc0 <_malloc_r+0xfc>
 8002aee:	f000 f869 	bl	8002bc4 <__malloc_lock>
 8002af2:	f8d8 3000 	ldr.w	r3, [r8]
 8002af6:	461c      	mov	r4, r3
 8002af8:	bb44      	cbnz	r4, 8002b4c <_malloc_r+0x88>
 8002afa:	4629      	mov	r1, r5
 8002afc:	4630      	mov	r0, r6
 8002afe:	f7ff ffbf 	bl	8002a80 <sbrk_aligned>
 8002b02:	1c43      	adds	r3, r0, #1
 8002b04:	4604      	mov	r4, r0
 8002b06:	d158      	bne.n	8002bba <_malloc_r+0xf6>
 8002b08:	f8d8 4000 	ldr.w	r4, [r8]
 8002b0c:	4627      	mov	r7, r4
 8002b0e:	2f00      	cmp	r7, #0
 8002b10:	d143      	bne.n	8002b9a <_malloc_r+0xd6>
 8002b12:	2c00      	cmp	r4, #0
 8002b14:	d04b      	beq.n	8002bae <_malloc_r+0xea>
 8002b16:	6823      	ldr	r3, [r4, #0]
 8002b18:	4639      	mov	r1, r7
 8002b1a:	4630      	mov	r0, r6
 8002b1c:	eb04 0903 	add.w	r9, r4, r3
 8002b20:	f000 f996 	bl	8002e50 <_sbrk_r>
 8002b24:	4581      	cmp	r9, r0
 8002b26:	d142      	bne.n	8002bae <_malloc_r+0xea>
 8002b28:	6821      	ldr	r1, [r4, #0]
 8002b2a:	1a6d      	subs	r5, r5, r1
 8002b2c:	4629      	mov	r1, r5
 8002b2e:	4630      	mov	r0, r6
 8002b30:	f7ff ffa6 	bl	8002a80 <sbrk_aligned>
 8002b34:	3001      	adds	r0, #1
 8002b36:	d03a      	beq.n	8002bae <_malloc_r+0xea>
 8002b38:	6823      	ldr	r3, [r4, #0]
 8002b3a:	442b      	add	r3, r5
 8002b3c:	6023      	str	r3, [r4, #0]
 8002b3e:	f8d8 3000 	ldr.w	r3, [r8]
 8002b42:	685a      	ldr	r2, [r3, #4]
 8002b44:	bb62      	cbnz	r2, 8002ba0 <_malloc_r+0xdc>
 8002b46:	f8c8 7000 	str.w	r7, [r8]
 8002b4a:	e00f      	b.n	8002b6c <_malloc_r+0xa8>
 8002b4c:	6822      	ldr	r2, [r4, #0]
 8002b4e:	1b52      	subs	r2, r2, r5
 8002b50:	d420      	bmi.n	8002b94 <_malloc_r+0xd0>
 8002b52:	2a0b      	cmp	r2, #11
 8002b54:	d917      	bls.n	8002b86 <_malloc_r+0xc2>
 8002b56:	1961      	adds	r1, r4, r5
 8002b58:	42a3      	cmp	r3, r4
 8002b5a:	6025      	str	r5, [r4, #0]
 8002b5c:	bf18      	it	ne
 8002b5e:	6059      	strne	r1, [r3, #4]
 8002b60:	6863      	ldr	r3, [r4, #4]
 8002b62:	bf08      	it	eq
 8002b64:	f8c8 1000 	streq.w	r1, [r8]
 8002b68:	5162      	str	r2, [r4, r5]
 8002b6a:	604b      	str	r3, [r1, #4]
 8002b6c:	4630      	mov	r0, r6
 8002b6e:	f000 f82f 	bl	8002bd0 <__malloc_unlock>
 8002b72:	f104 000b 	add.w	r0, r4, #11
 8002b76:	1d23      	adds	r3, r4, #4
 8002b78:	f020 0007 	bic.w	r0, r0, #7
 8002b7c:	1ac2      	subs	r2, r0, r3
 8002b7e:	bf1c      	itt	ne
 8002b80:	1a1b      	subne	r3, r3, r0
 8002b82:	50a3      	strne	r3, [r4, r2]
 8002b84:	e7af      	b.n	8002ae6 <_malloc_r+0x22>
 8002b86:	6862      	ldr	r2, [r4, #4]
 8002b88:	42a3      	cmp	r3, r4
 8002b8a:	bf0c      	ite	eq
 8002b8c:	f8c8 2000 	streq.w	r2, [r8]
 8002b90:	605a      	strne	r2, [r3, #4]
 8002b92:	e7eb      	b.n	8002b6c <_malloc_r+0xa8>
 8002b94:	4623      	mov	r3, r4
 8002b96:	6864      	ldr	r4, [r4, #4]
 8002b98:	e7ae      	b.n	8002af8 <_malloc_r+0x34>
 8002b9a:	463c      	mov	r4, r7
 8002b9c:	687f      	ldr	r7, [r7, #4]
 8002b9e:	e7b6      	b.n	8002b0e <_malloc_r+0x4a>
 8002ba0:	461a      	mov	r2, r3
 8002ba2:	685b      	ldr	r3, [r3, #4]
 8002ba4:	42a3      	cmp	r3, r4
 8002ba6:	d1fb      	bne.n	8002ba0 <_malloc_r+0xdc>
 8002ba8:	2300      	movs	r3, #0
 8002baa:	6053      	str	r3, [r2, #4]
 8002bac:	e7de      	b.n	8002b6c <_malloc_r+0xa8>
 8002bae:	230c      	movs	r3, #12
 8002bb0:	6033      	str	r3, [r6, #0]
 8002bb2:	4630      	mov	r0, r6
 8002bb4:	f000 f80c 	bl	8002bd0 <__malloc_unlock>
 8002bb8:	e794      	b.n	8002ae4 <_malloc_r+0x20>
 8002bba:	6005      	str	r5, [r0, #0]
 8002bbc:	e7d6      	b.n	8002b6c <_malloc_r+0xa8>
 8002bbe:	bf00      	nop
 8002bc0:	20000ae4 	.word	0x20000ae4

08002bc4 <__malloc_lock>:
 8002bc4:	4801      	ldr	r0, [pc, #4]	@ (8002bcc <__malloc_lock+0x8>)
 8002bc6:	f000 b97e 	b.w	8002ec6 <__retarget_lock_acquire_recursive>
 8002bca:	bf00      	nop
 8002bcc:	20000c24 	.word	0x20000c24

08002bd0 <__malloc_unlock>:
 8002bd0:	4801      	ldr	r0, [pc, #4]	@ (8002bd8 <__malloc_unlock+0x8>)
 8002bd2:	f000 b979 	b.w	8002ec8 <__retarget_lock_release_recursive>
 8002bd6:	bf00      	nop
 8002bd8:	20000c24 	.word	0x20000c24

08002bdc <std>:
 8002bdc:	2300      	movs	r3, #0
 8002bde:	b510      	push	{r4, lr}
 8002be0:	4604      	mov	r4, r0
 8002be2:	e9c0 3300 	strd	r3, r3, [r0]
 8002be6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002bea:	6083      	str	r3, [r0, #8]
 8002bec:	8181      	strh	r1, [r0, #12]
 8002bee:	6643      	str	r3, [r0, #100]	@ 0x64
 8002bf0:	81c2      	strh	r2, [r0, #14]
 8002bf2:	6183      	str	r3, [r0, #24]
 8002bf4:	4619      	mov	r1, r3
 8002bf6:	2208      	movs	r2, #8
 8002bf8:	305c      	adds	r0, #92	@ 0x5c
 8002bfa:	f000 f921 	bl	8002e40 <memset>
 8002bfe:	4b0d      	ldr	r3, [pc, #52]	@ (8002c34 <std+0x58>)
 8002c00:	6263      	str	r3, [r4, #36]	@ 0x24
 8002c02:	4b0d      	ldr	r3, [pc, #52]	@ (8002c38 <std+0x5c>)
 8002c04:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002c06:	4b0d      	ldr	r3, [pc, #52]	@ (8002c3c <std+0x60>)
 8002c08:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002c0a:	4b0d      	ldr	r3, [pc, #52]	@ (8002c40 <std+0x64>)
 8002c0c:	6323      	str	r3, [r4, #48]	@ 0x30
 8002c0e:	4b0d      	ldr	r3, [pc, #52]	@ (8002c44 <std+0x68>)
 8002c10:	6224      	str	r4, [r4, #32]
 8002c12:	429c      	cmp	r4, r3
 8002c14:	d006      	beq.n	8002c24 <std+0x48>
 8002c16:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002c1a:	4294      	cmp	r4, r2
 8002c1c:	d002      	beq.n	8002c24 <std+0x48>
 8002c1e:	33d0      	adds	r3, #208	@ 0xd0
 8002c20:	429c      	cmp	r4, r3
 8002c22:	d105      	bne.n	8002c30 <std+0x54>
 8002c24:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002c28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c2c:	f000 b94a 	b.w	8002ec4 <__retarget_lock_init_recursive>
 8002c30:	bd10      	pop	{r4, pc}
 8002c32:	bf00      	nop
 8002c34:	08003659 	.word	0x08003659
 8002c38:	0800367b 	.word	0x0800367b
 8002c3c:	080036b3 	.word	0x080036b3
 8002c40:	080036d7 	.word	0x080036d7
 8002c44:	20000ae8 	.word	0x20000ae8

08002c48 <stdio_exit_handler>:
 8002c48:	4a02      	ldr	r2, [pc, #8]	@ (8002c54 <stdio_exit_handler+0xc>)
 8002c4a:	4903      	ldr	r1, [pc, #12]	@ (8002c58 <stdio_exit_handler+0x10>)
 8002c4c:	4803      	ldr	r0, [pc, #12]	@ (8002c5c <stdio_exit_handler+0x14>)
 8002c4e:	f000 b869 	b.w	8002d24 <_fwalk_sglue>
 8002c52:	bf00      	nop
 8002c54:	20000920 	.word	0x20000920
 8002c58:	08003609 	.word	0x08003609
 8002c5c:	20000930 	.word	0x20000930

08002c60 <cleanup_stdio>:
 8002c60:	6841      	ldr	r1, [r0, #4]
 8002c62:	4b0c      	ldr	r3, [pc, #48]	@ (8002c94 <cleanup_stdio+0x34>)
 8002c64:	4299      	cmp	r1, r3
 8002c66:	b510      	push	{r4, lr}
 8002c68:	4604      	mov	r4, r0
 8002c6a:	d001      	beq.n	8002c70 <cleanup_stdio+0x10>
 8002c6c:	f000 fccc 	bl	8003608 <_fflush_r>
 8002c70:	68a1      	ldr	r1, [r4, #8]
 8002c72:	4b09      	ldr	r3, [pc, #36]	@ (8002c98 <cleanup_stdio+0x38>)
 8002c74:	4299      	cmp	r1, r3
 8002c76:	d002      	beq.n	8002c7e <cleanup_stdio+0x1e>
 8002c78:	4620      	mov	r0, r4
 8002c7a:	f000 fcc5 	bl	8003608 <_fflush_r>
 8002c7e:	68e1      	ldr	r1, [r4, #12]
 8002c80:	4b06      	ldr	r3, [pc, #24]	@ (8002c9c <cleanup_stdio+0x3c>)
 8002c82:	4299      	cmp	r1, r3
 8002c84:	d004      	beq.n	8002c90 <cleanup_stdio+0x30>
 8002c86:	4620      	mov	r0, r4
 8002c88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c8c:	f000 bcbc 	b.w	8003608 <_fflush_r>
 8002c90:	bd10      	pop	{r4, pc}
 8002c92:	bf00      	nop
 8002c94:	20000ae8 	.word	0x20000ae8
 8002c98:	20000b50 	.word	0x20000b50
 8002c9c:	20000bb8 	.word	0x20000bb8

08002ca0 <global_stdio_init.part.0>:
 8002ca0:	b510      	push	{r4, lr}
 8002ca2:	4b0b      	ldr	r3, [pc, #44]	@ (8002cd0 <global_stdio_init.part.0+0x30>)
 8002ca4:	4c0b      	ldr	r4, [pc, #44]	@ (8002cd4 <global_stdio_init.part.0+0x34>)
 8002ca6:	4a0c      	ldr	r2, [pc, #48]	@ (8002cd8 <global_stdio_init.part.0+0x38>)
 8002ca8:	601a      	str	r2, [r3, #0]
 8002caa:	4620      	mov	r0, r4
 8002cac:	2200      	movs	r2, #0
 8002cae:	2104      	movs	r1, #4
 8002cb0:	f7ff ff94 	bl	8002bdc <std>
 8002cb4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002cb8:	2201      	movs	r2, #1
 8002cba:	2109      	movs	r1, #9
 8002cbc:	f7ff ff8e 	bl	8002bdc <std>
 8002cc0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002cc4:	2202      	movs	r2, #2
 8002cc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002cca:	2112      	movs	r1, #18
 8002ccc:	f7ff bf86 	b.w	8002bdc <std>
 8002cd0:	20000c20 	.word	0x20000c20
 8002cd4:	20000ae8 	.word	0x20000ae8
 8002cd8:	08002c49 	.word	0x08002c49

08002cdc <__sfp_lock_acquire>:
 8002cdc:	4801      	ldr	r0, [pc, #4]	@ (8002ce4 <__sfp_lock_acquire+0x8>)
 8002cde:	f000 b8f2 	b.w	8002ec6 <__retarget_lock_acquire_recursive>
 8002ce2:	bf00      	nop
 8002ce4:	20000c25 	.word	0x20000c25

08002ce8 <__sfp_lock_release>:
 8002ce8:	4801      	ldr	r0, [pc, #4]	@ (8002cf0 <__sfp_lock_release+0x8>)
 8002cea:	f000 b8ed 	b.w	8002ec8 <__retarget_lock_release_recursive>
 8002cee:	bf00      	nop
 8002cf0:	20000c25 	.word	0x20000c25

08002cf4 <__sinit>:
 8002cf4:	b510      	push	{r4, lr}
 8002cf6:	4604      	mov	r4, r0
 8002cf8:	f7ff fff0 	bl	8002cdc <__sfp_lock_acquire>
 8002cfc:	6a23      	ldr	r3, [r4, #32]
 8002cfe:	b11b      	cbz	r3, 8002d08 <__sinit+0x14>
 8002d00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d04:	f7ff bff0 	b.w	8002ce8 <__sfp_lock_release>
 8002d08:	4b04      	ldr	r3, [pc, #16]	@ (8002d1c <__sinit+0x28>)
 8002d0a:	6223      	str	r3, [r4, #32]
 8002d0c:	4b04      	ldr	r3, [pc, #16]	@ (8002d20 <__sinit+0x2c>)
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	d1f5      	bne.n	8002d00 <__sinit+0xc>
 8002d14:	f7ff ffc4 	bl	8002ca0 <global_stdio_init.part.0>
 8002d18:	e7f2      	b.n	8002d00 <__sinit+0xc>
 8002d1a:	bf00      	nop
 8002d1c:	08002c61 	.word	0x08002c61
 8002d20:	20000c20 	.word	0x20000c20

08002d24 <_fwalk_sglue>:
 8002d24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002d28:	4607      	mov	r7, r0
 8002d2a:	4688      	mov	r8, r1
 8002d2c:	4614      	mov	r4, r2
 8002d2e:	2600      	movs	r6, #0
 8002d30:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002d34:	f1b9 0901 	subs.w	r9, r9, #1
 8002d38:	d505      	bpl.n	8002d46 <_fwalk_sglue+0x22>
 8002d3a:	6824      	ldr	r4, [r4, #0]
 8002d3c:	2c00      	cmp	r4, #0
 8002d3e:	d1f7      	bne.n	8002d30 <_fwalk_sglue+0xc>
 8002d40:	4630      	mov	r0, r6
 8002d42:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002d46:	89ab      	ldrh	r3, [r5, #12]
 8002d48:	2b01      	cmp	r3, #1
 8002d4a:	d907      	bls.n	8002d5c <_fwalk_sglue+0x38>
 8002d4c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002d50:	3301      	adds	r3, #1
 8002d52:	d003      	beq.n	8002d5c <_fwalk_sglue+0x38>
 8002d54:	4629      	mov	r1, r5
 8002d56:	4638      	mov	r0, r7
 8002d58:	47c0      	blx	r8
 8002d5a:	4306      	orrs	r6, r0
 8002d5c:	3568      	adds	r5, #104	@ 0x68
 8002d5e:	e7e9      	b.n	8002d34 <_fwalk_sglue+0x10>

08002d60 <iprintf>:
 8002d60:	b40f      	push	{r0, r1, r2, r3}
 8002d62:	b507      	push	{r0, r1, r2, lr}
 8002d64:	4906      	ldr	r1, [pc, #24]	@ (8002d80 <iprintf+0x20>)
 8002d66:	ab04      	add	r3, sp, #16
 8002d68:	6808      	ldr	r0, [r1, #0]
 8002d6a:	f853 2b04 	ldr.w	r2, [r3], #4
 8002d6e:	6881      	ldr	r1, [r0, #8]
 8002d70:	9301      	str	r3, [sp, #4]
 8002d72:	f000 f91f 	bl	8002fb4 <_vfiprintf_r>
 8002d76:	b003      	add	sp, #12
 8002d78:	f85d eb04 	ldr.w	lr, [sp], #4
 8002d7c:	b004      	add	sp, #16
 8002d7e:	4770      	bx	lr
 8002d80:	2000092c 	.word	0x2000092c

08002d84 <_puts_r>:
 8002d84:	6a03      	ldr	r3, [r0, #32]
 8002d86:	b570      	push	{r4, r5, r6, lr}
 8002d88:	6884      	ldr	r4, [r0, #8]
 8002d8a:	4605      	mov	r5, r0
 8002d8c:	460e      	mov	r6, r1
 8002d8e:	b90b      	cbnz	r3, 8002d94 <_puts_r+0x10>
 8002d90:	f7ff ffb0 	bl	8002cf4 <__sinit>
 8002d94:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8002d96:	07db      	lsls	r3, r3, #31
 8002d98:	d405      	bmi.n	8002da6 <_puts_r+0x22>
 8002d9a:	89a3      	ldrh	r3, [r4, #12]
 8002d9c:	0598      	lsls	r0, r3, #22
 8002d9e:	d402      	bmi.n	8002da6 <_puts_r+0x22>
 8002da0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002da2:	f000 f890 	bl	8002ec6 <__retarget_lock_acquire_recursive>
 8002da6:	89a3      	ldrh	r3, [r4, #12]
 8002da8:	0719      	lsls	r1, r3, #28
 8002daa:	d502      	bpl.n	8002db2 <_puts_r+0x2e>
 8002dac:	6923      	ldr	r3, [r4, #16]
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d135      	bne.n	8002e1e <_puts_r+0x9a>
 8002db2:	4621      	mov	r1, r4
 8002db4:	4628      	mov	r0, r5
 8002db6:	f000 fcd1 	bl	800375c <__swsetup_r>
 8002dba:	b380      	cbz	r0, 8002e1e <_puts_r+0x9a>
 8002dbc:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8002dc0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8002dc2:	07da      	lsls	r2, r3, #31
 8002dc4:	d405      	bmi.n	8002dd2 <_puts_r+0x4e>
 8002dc6:	89a3      	ldrh	r3, [r4, #12]
 8002dc8:	059b      	lsls	r3, r3, #22
 8002dca:	d402      	bmi.n	8002dd2 <_puts_r+0x4e>
 8002dcc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002dce:	f000 f87b 	bl	8002ec8 <__retarget_lock_release_recursive>
 8002dd2:	4628      	mov	r0, r5
 8002dd4:	bd70      	pop	{r4, r5, r6, pc}
 8002dd6:	2b00      	cmp	r3, #0
 8002dd8:	da04      	bge.n	8002de4 <_puts_r+0x60>
 8002dda:	69a2      	ldr	r2, [r4, #24]
 8002ddc:	429a      	cmp	r2, r3
 8002dde:	dc17      	bgt.n	8002e10 <_puts_r+0x8c>
 8002de0:	290a      	cmp	r1, #10
 8002de2:	d015      	beq.n	8002e10 <_puts_r+0x8c>
 8002de4:	6823      	ldr	r3, [r4, #0]
 8002de6:	1c5a      	adds	r2, r3, #1
 8002de8:	6022      	str	r2, [r4, #0]
 8002dea:	7019      	strb	r1, [r3, #0]
 8002dec:	68a3      	ldr	r3, [r4, #8]
 8002dee:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002df2:	3b01      	subs	r3, #1
 8002df4:	60a3      	str	r3, [r4, #8]
 8002df6:	2900      	cmp	r1, #0
 8002df8:	d1ed      	bne.n	8002dd6 <_puts_r+0x52>
 8002dfa:	2b00      	cmp	r3, #0
 8002dfc:	da11      	bge.n	8002e22 <_puts_r+0x9e>
 8002dfe:	4622      	mov	r2, r4
 8002e00:	210a      	movs	r1, #10
 8002e02:	4628      	mov	r0, r5
 8002e04:	f000 fc6b 	bl	80036de <__swbuf_r>
 8002e08:	3001      	adds	r0, #1
 8002e0a:	d0d7      	beq.n	8002dbc <_puts_r+0x38>
 8002e0c:	250a      	movs	r5, #10
 8002e0e:	e7d7      	b.n	8002dc0 <_puts_r+0x3c>
 8002e10:	4622      	mov	r2, r4
 8002e12:	4628      	mov	r0, r5
 8002e14:	f000 fc63 	bl	80036de <__swbuf_r>
 8002e18:	3001      	adds	r0, #1
 8002e1a:	d1e7      	bne.n	8002dec <_puts_r+0x68>
 8002e1c:	e7ce      	b.n	8002dbc <_puts_r+0x38>
 8002e1e:	3e01      	subs	r6, #1
 8002e20:	e7e4      	b.n	8002dec <_puts_r+0x68>
 8002e22:	6823      	ldr	r3, [r4, #0]
 8002e24:	1c5a      	adds	r2, r3, #1
 8002e26:	6022      	str	r2, [r4, #0]
 8002e28:	220a      	movs	r2, #10
 8002e2a:	701a      	strb	r2, [r3, #0]
 8002e2c:	e7ee      	b.n	8002e0c <_puts_r+0x88>
	...

08002e30 <puts>:
 8002e30:	4b02      	ldr	r3, [pc, #8]	@ (8002e3c <puts+0xc>)
 8002e32:	4601      	mov	r1, r0
 8002e34:	6818      	ldr	r0, [r3, #0]
 8002e36:	f7ff bfa5 	b.w	8002d84 <_puts_r>
 8002e3a:	bf00      	nop
 8002e3c:	2000092c 	.word	0x2000092c

08002e40 <memset>:
 8002e40:	4402      	add	r2, r0
 8002e42:	4603      	mov	r3, r0
 8002e44:	4293      	cmp	r3, r2
 8002e46:	d100      	bne.n	8002e4a <memset+0xa>
 8002e48:	4770      	bx	lr
 8002e4a:	f803 1b01 	strb.w	r1, [r3], #1
 8002e4e:	e7f9      	b.n	8002e44 <memset+0x4>

08002e50 <_sbrk_r>:
 8002e50:	b538      	push	{r3, r4, r5, lr}
 8002e52:	4d06      	ldr	r5, [pc, #24]	@ (8002e6c <_sbrk_r+0x1c>)
 8002e54:	2300      	movs	r3, #0
 8002e56:	4604      	mov	r4, r0
 8002e58:	4608      	mov	r0, r1
 8002e5a:	602b      	str	r3, [r5, #0]
 8002e5c:	f7fd fc2a 	bl	80006b4 <_sbrk>
 8002e60:	1c43      	adds	r3, r0, #1
 8002e62:	d102      	bne.n	8002e6a <_sbrk_r+0x1a>
 8002e64:	682b      	ldr	r3, [r5, #0]
 8002e66:	b103      	cbz	r3, 8002e6a <_sbrk_r+0x1a>
 8002e68:	6023      	str	r3, [r4, #0]
 8002e6a:	bd38      	pop	{r3, r4, r5, pc}
 8002e6c:	20000c28 	.word	0x20000c28

08002e70 <__errno>:
 8002e70:	4b01      	ldr	r3, [pc, #4]	@ (8002e78 <__errno+0x8>)
 8002e72:	6818      	ldr	r0, [r3, #0]
 8002e74:	4770      	bx	lr
 8002e76:	bf00      	nop
 8002e78:	2000092c 	.word	0x2000092c

08002e7c <__libc_init_array>:
 8002e7c:	b570      	push	{r4, r5, r6, lr}
 8002e7e:	4d0d      	ldr	r5, [pc, #52]	@ (8002eb4 <__libc_init_array+0x38>)
 8002e80:	4c0d      	ldr	r4, [pc, #52]	@ (8002eb8 <__libc_init_array+0x3c>)
 8002e82:	1b64      	subs	r4, r4, r5
 8002e84:	10a4      	asrs	r4, r4, #2
 8002e86:	2600      	movs	r6, #0
 8002e88:	42a6      	cmp	r6, r4
 8002e8a:	d109      	bne.n	8002ea0 <__libc_init_array+0x24>
 8002e8c:	4d0b      	ldr	r5, [pc, #44]	@ (8002ebc <__libc_init_array+0x40>)
 8002e8e:	4c0c      	ldr	r4, [pc, #48]	@ (8002ec0 <__libc_init_array+0x44>)
 8002e90:	f000 fee8 	bl	8003c64 <_init>
 8002e94:	1b64      	subs	r4, r4, r5
 8002e96:	10a4      	asrs	r4, r4, #2
 8002e98:	2600      	movs	r6, #0
 8002e9a:	42a6      	cmp	r6, r4
 8002e9c:	d105      	bne.n	8002eaa <__libc_init_array+0x2e>
 8002e9e:	bd70      	pop	{r4, r5, r6, pc}
 8002ea0:	f855 3b04 	ldr.w	r3, [r5], #4
 8002ea4:	4798      	blx	r3
 8002ea6:	3601      	adds	r6, #1
 8002ea8:	e7ee      	b.n	8002e88 <__libc_init_array+0xc>
 8002eaa:	f855 3b04 	ldr.w	r3, [r5], #4
 8002eae:	4798      	blx	r3
 8002eb0:	3601      	adds	r6, #1
 8002eb2:	e7f2      	b.n	8002e9a <__libc_init_array+0x1e>
 8002eb4:	0800460c 	.word	0x0800460c
 8002eb8:	0800460c 	.word	0x0800460c
 8002ebc:	0800460c 	.word	0x0800460c
 8002ec0:	08004610 	.word	0x08004610

08002ec4 <__retarget_lock_init_recursive>:
 8002ec4:	4770      	bx	lr

08002ec6 <__retarget_lock_acquire_recursive>:
 8002ec6:	4770      	bx	lr

08002ec8 <__retarget_lock_release_recursive>:
 8002ec8:	4770      	bx	lr
	...

08002ecc <_free_r>:
 8002ecc:	b538      	push	{r3, r4, r5, lr}
 8002ece:	4605      	mov	r5, r0
 8002ed0:	2900      	cmp	r1, #0
 8002ed2:	d041      	beq.n	8002f58 <_free_r+0x8c>
 8002ed4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002ed8:	1f0c      	subs	r4, r1, #4
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	bfb8      	it	lt
 8002ede:	18e4      	addlt	r4, r4, r3
 8002ee0:	f7ff fe70 	bl	8002bc4 <__malloc_lock>
 8002ee4:	4a1d      	ldr	r2, [pc, #116]	@ (8002f5c <_free_r+0x90>)
 8002ee6:	6813      	ldr	r3, [r2, #0]
 8002ee8:	b933      	cbnz	r3, 8002ef8 <_free_r+0x2c>
 8002eea:	6063      	str	r3, [r4, #4]
 8002eec:	6014      	str	r4, [r2, #0]
 8002eee:	4628      	mov	r0, r5
 8002ef0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002ef4:	f7ff be6c 	b.w	8002bd0 <__malloc_unlock>
 8002ef8:	42a3      	cmp	r3, r4
 8002efa:	d908      	bls.n	8002f0e <_free_r+0x42>
 8002efc:	6820      	ldr	r0, [r4, #0]
 8002efe:	1821      	adds	r1, r4, r0
 8002f00:	428b      	cmp	r3, r1
 8002f02:	bf01      	itttt	eq
 8002f04:	6819      	ldreq	r1, [r3, #0]
 8002f06:	685b      	ldreq	r3, [r3, #4]
 8002f08:	1809      	addeq	r1, r1, r0
 8002f0a:	6021      	streq	r1, [r4, #0]
 8002f0c:	e7ed      	b.n	8002eea <_free_r+0x1e>
 8002f0e:	461a      	mov	r2, r3
 8002f10:	685b      	ldr	r3, [r3, #4]
 8002f12:	b10b      	cbz	r3, 8002f18 <_free_r+0x4c>
 8002f14:	42a3      	cmp	r3, r4
 8002f16:	d9fa      	bls.n	8002f0e <_free_r+0x42>
 8002f18:	6811      	ldr	r1, [r2, #0]
 8002f1a:	1850      	adds	r0, r2, r1
 8002f1c:	42a0      	cmp	r0, r4
 8002f1e:	d10b      	bne.n	8002f38 <_free_r+0x6c>
 8002f20:	6820      	ldr	r0, [r4, #0]
 8002f22:	4401      	add	r1, r0
 8002f24:	1850      	adds	r0, r2, r1
 8002f26:	4283      	cmp	r3, r0
 8002f28:	6011      	str	r1, [r2, #0]
 8002f2a:	d1e0      	bne.n	8002eee <_free_r+0x22>
 8002f2c:	6818      	ldr	r0, [r3, #0]
 8002f2e:	685b      	ldr	r3, [r3, #4]
 8002f30:	6053      	str	r3, [r2, #4]
 8002f32:	4408      	add	r0, r1
 8002f34:	6010      	str	r0, [r2, #0]
 8002f36:	e7da      	b.n	8002eee <_free_r+0x22>
 8002f38:	d902      	bls.n	8002f40 <_free_r+0x74>
 8002f3a:	230c      	movs	r3, #12
 8002f3c:	602b      	str	r3, [r5, #0]
 8002f3e:	e7d6      	b.n	8002eee <_free_r+0x22>
 8002f40:	6820      	ldr	r0, [r4, #0]
 8002f42:	1821      	adds	r1, r4, r0
 8002f44:	428b      	cmp	r3, r1
 8002f46:	bf04      	itt	eq
 8002f48:	6819      	ldreq	r1, [r3, #0]
 8002f4a:	685b      	ldreq	r3, [r3, #4]
 8002f4c:	6063      	str	r3, [r4, #4]
 8002f4e:	bf04      	itt	eq
 8002f50:	1809      	addeq	r1, r1, r0
 8002f52:	6021      	streq	r1, [r4, #0]
 8002f54:	6054      	str	r4, [r2, #4]
 8002f56:	e7ca      	b.n	8002eee <_free_r+0x22>
 8002f58:	bd38      	pop	{r3, r4, r5, pc}
 8002f5a:	bf00      	nop
 8002f5c:	20000ae4 	.word	0x20000ae4

08002f60 <__sfputc_r>:
 8002f60:	6893      	ldr	r3, [r2, #8]
 8002f62:	3b01      	subs	r3, #1
 8002f64:	2b00      	cmp	r3, #0
 8002f66:	b410      	push	{r4}
 8002f68:	6093      	str	r3, [r2, #8]
 8002f6a:	da08      	bge.n	8002f7e <__sfputc_r+0x1e>
 8002f6c:	6994      	ldr	r4, [r2, #24]
 8002f6e:	42a3      	cmp	r3, r4
 8002f70:	db01      	blt.n	8002f76 <__sfputc_r+0x16>
 8002f72:	290a      	cmp	r1, #10
 8002f74:	d103      	bne.n	8002f7e <__sfputc_r+0x1e>
 8002f76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002f7a:	f000 bbb0 	b.w	80036de <__swbuf_r>
 8002f7e:	6813      	ldr	r3, [r2, #0]
 8002f80:	1c58      	adds	r0, r3, #1
 8002f82:	6010      	str	r0, [r2, #0]
 8002f84:	7019      	strb	r1, [r3, #0]
 8002f86:	4608      	mov	r0, r1
 8002f88:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002f8c:	4770      	bx	lr

08002f8e <__sfputs_r>:
 8002f8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f90:	4606      	mov	r6, r0
 8002f92:	460f      	mov	r7, r1
 8002f94:	4614      	mov	r4, r2
 8002f96:	18d5      	adds	r5, r2, r3
 8002f98:	42ac      	cmp	r4, r5
 8002f9a:	d101      	bne.n	8002fa0 <__sfputs_r+0x12>
 8002f9c:	2000      	movs	r0, #0
 8002f9e:	e007      	b.n	8002fb0 <__sfputs_r+0x22>
 8002fa0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002fa4:	463a      	mov	r2, r7
 8002fa6:	4630      	mov	r0, r6
 8002fa8:	f7ff ffda 	bl	8002f60 <__sfputc_r>
 8002fac:	1c43      	adds	r3, r0, #1
 8002fae:	d1f3      	bne.n	8002f98 <__sfputs_r+0xa>
 8002fb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08002fb4 <_vfiprintf_r>:
 8002fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fb8:	460d      	mov	r5, r1
 8002fba:	b09d      	sub	sp, #116	@ 0x74
 8002fbc:	4614      	mov	r4, r2
 8002fbe:	4698      	mov	r8, r3
 8002fc0:	4606      	mov	r6, r0
 8002fc2:	b118      	cbz	r0, 8002fcc <_vfiprintf_r+0x18>
 8002fc4:	6a03      	ldr	r3, [r0, #32]
 8002fc6:	b90b      	cbnz	r3, 8002fcc <_vfiprintf_r+0x18>
 8002fc8:	f7ff fe94 	bl	8002cf4 <__sinit>
 8002fcc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8002fce:	07d9      	lsls	r1, r3, #31
 8002fd0:	d405      	bmi.n	8002fde <_vfiprintf_r+0x2a>
 8002fd2:	89ab      	ldrh	r3, [r5, #12]
 8002fd4:	059a      	lsls	r2, r3, #22
 8002fd6:	d402      	bmi.n	8002fde <_vfiprintf_r+0x2a>
 8002fd8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8002fda:	f7ff ff74 	bl	8002ec6 <__retarget_lock_acquire_recursive>
 8002fde:	89ab      	ldrh	r3, [r5, #12]
 8002fe0:	071b      	lsls	r3, r3, #28
 8002fe2:	d501      	bpl.n	8002fe8 <_vfiprintf_r+0x34>
 8002fe4:	692b      	ldr	r3, [r5, #16]
 8002fe6:	b99b      	cbnz	r3, 8003010 <_vfiprintf_r+0x5c>
 8002fe8:	4629      	mov	r1, r5
 8002fea:	4630      	mov	r0, r6
 8002fec:	f000 fbb6 	bl	800375c <__swsetup_r>
 8002ff0:	b170      	cbz	r0, 8003010 <_vfiprintf_r+0x5c>
 8002ff2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8002ff4:	07dc      	lsls	r4, r3, #31
 8002ff6:	d504      	bpl.n	8003002 <_vfiprintf_r+0x4e>
 8002ff8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002ffc:	b01d      	add	sp, #116	@ 0x74
 8002ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003002:	89ab      	ldrh	r3, [r5, #12]
 8003004:	0598      	lsls	r0, r3, #22
 8003006:	d4f7      	bmi.n	8002ff8 <_vfiprintf_r+0x44>
 8003008:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800300a:	f7ff ff5d 	bl	8002ec8 <__retarget_lock_release_recursive>
 800300e:	e7f3      	b.n	8002ff8 <_vfiprintf_r+0x44>
 8003010:	2300      	movs	r3, #0
 8003012:	9309      	str	r3, [sp, #36]	@ 0x24
 8003014:	2320      	movs	r3, #32
 8003016:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800301a:	f8cd 800c 	str.w	r8, [sp, #12]
 800301e:	2330      	movs	r3, #48	@ 0x30
 8003020:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80031d0 <_vfiprintf_r+0x21c>
 8003024:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003028:	f04f 0901 	mov.w	r9, #1
 800302c:	4623      	mov	r3, r4
 800302e:	469a      	mov	sl, r3
 8003030:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003034:	b10a      	cbz	r2, 800303a <_vfiprintf_r+0x86>
 8003036:	2a25      	cmp	r2, #37	@ 0x25
 8003038:	d1f9      	bne.n	800302e <_vfiprintf_r+0x7a>
 800303a:	ebba 0b04 	subs.w	fp, sl, r4
 800303e:	d00b      	beq.n	8003058 <_vfiprintf_r+0xa4>
 8003040:	465b      	mov	r3, fp
 8003042:	4622      	mov	r2, r4
 8003044:	4629      	mov	r1, r5
 8003046:	4630      	mov	r0, r6
 8003048:	f7ff ffa1 	bl	8002f8e <__sfputs_r>
 800304c:	3001      	adds	r0, #1
 800304e:	f000 80a7 	beq.w	80031a0 <_vfiprintf_r+0x1ec>
 8003052:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003054:	445a      	add	r2, fp
 8003056:	9209      	str	r2, [sp, #36]	@ 0x24
 8003058:	f89a 3000 	ldrb.w	r3, [sl]
 800305c:	2b00      	cmp	r3, #0
 800305e:	f000 809f 	beq.w	80031a0 <_vfiprintf_r+0x1ec>
 8003062:	2300      	movs	r3, #0
 8003064:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003068:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800306c:	f10a 0a01 	add.w	sl, sl, #1
 8003070:	9304      	str	r3, [sp, #16]
 8003072:	9307      	str	r3, [sp, #28]
 8003074:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003078:	931a      	str	r3, [sp, #104]	@ 0x68
 800307a:	4654      	mov	r4, sl
 800307c:	2205      	movs	r2, #5
 800307e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003082:	4853      	ldr	r0, [pc, #332]	@ (80031d0 <_vfiprintf_r+0x21c>)
 8003084:	f7fd f8bc 	bl	8000200 <memchr>
 8003088:	9a04      	ldr	r2, [sp, #16]
 800308a:	b9d8      	cbnz	r0, 80030c4 <_vfiprintf_r+0x110>
 800308c:	06d1      	lsls	r1, r2, #27
 800308e:	bf44      	itt	mi
 8003090:	2320      	movmi	r3, #32
 8003092:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003096:	0713      	lsls	r3, r2, #28
 8003098:	bf44      	itt	mi
 800309a:	232b      	movmi	r3, #43	@ 0x2b
 800309c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80030a0:	f89a 3000 	ldrb.w	r3, [sl]
 80030a4:	2b2a      	cmp	r3, #42	@ 0x2a
 80030a6:	d015      	beq.n	80030d4 <_vfiprintf_r+0x120>
 80030a8:	9a07      	ldr	r2, [sp, #28]
 80030aa:	4654      	mov	r4, sl
 80030ac:	2000      	movs	r0, #0
 80030ae:	f04f 0c0a 	mov.w	ip, #10
 80030b2:	4621      	mov	r1, r4
 80030b4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80030b8:	3b30      	subs	r3, #48	@ 0x30
 80030ba:	2b09      	cmp	r3, #9
 80030bc:	d94b      	bls.n	8003156 <_vfiprintf_r+0x1a2>
 80030be:	b1b0      	cbz	r0, 80030ee <_vfiprintf_r+0x13a>
 80030c0:	9207      	str	r2, [sp, #28]
 80030c2:	e014      	b.n	80030ee <_vfiprintf_r+0x13a>
 80030c4:	eba0 0308 	sub.w	r3, r0, r8
 80030c8:	fa09 f303 	lsl.w	r3, r9, r3
 80030cc:	4313      	orrs	r3, r2
 80030ce:	9304      	str	r3, [sp, #16]
 80030d0:	46a2      	mov	sl, r4
 80030d2:	e7d2      	b.n	800307a <_vfiprintf_r+0xc6>
 80030d4:	9b03      	ldr	r3, [sp, #12]
 80030d6:	1d19      	adds	r1, r3, #4
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	9103      	str	r1, [sp, #12]
 80030dc:	2b00      	cmp	r3, #0
 80030de:	bfbb      	ittet	lt
 80030e0:	425b      	neglt	r3, r3
 80030e2:	f042 0202 	orrlt.w	r2, r2, #2
 80030e6:	9307      	strge	r3, [sp, #28]
 80030e8:	9307      	strlt	r3, [sp, #28]
 80030ea:	bfb8      	it	lt
 80030ec:	9204      	strlt	r2, [sp, #16]
 80030ee:	7823      	ldrb	r3, [r4, #0]
 80030f0:	2b2e      	cmp	r3, #46	@ 0x2e
 80030f2:	d10a      	bne.n	800310a <_vfiprintf_r+0x156>
 80030f4:	7863      	ldrb	r3, [r4, #1]
 80030f6:	2b2a      	cmp	r3, #42	@ 0x2a
 80030f8:	d132      	bne.n	8003160 <_vfiprintf_r+0x1ac>
 80030fa:	9b03      	ldr	r3, [sp, #12]
 80030fc:	1d1a      	adds	r2, r3, #4
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	9203      	str	r2, [sp, #12]
 8003102:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003106:	3402      	adds	r4, #2
 8003108:	9305      	str	r3, [sp, #20]
 800310a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80031e0 <_vfiprintf_r+0x22c>
 800310e:	7821      	ldrb	r1, [r4, #0]
 8003110:	2203      	movs	r2, #3
 8003112:	4650      	mov	r0, sl
 8003114:	f7fd f874 	bl	8000200 <memchr>
 8003118:	b138      	cbz	r0, 800312a <_vfiprintf_r+0x176>
 800311a:	9b04      	ldr	r3, [sp, #16]
 800311c:	eba0 000a 	sub.w	r0, r0, sl
 8003120:	2240      	movs	r2, #64	@ 0x40
 8003122:	4082      	lsls	r2, r0
 8003124:	4313      	orrs	r3, r2
 8003126:	3401      	adds	r4, #1
 8003128:	9304      	str	r3, [sp, #16]
 800312a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800312e:	4829      	ldr	r0, [pc, #164]	@ (80031d4 <_vfiprintf_r+0x220>)
 8003130:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003134:	2206      	movs	r2, #6
 8003136:	f7fd f863 	bl	8000200 <memchr>
 800313a:	2800      	cmp	r0, #0
 800313c:	d03f      	beq.n	80031be <_vfiprintf_r+0x20a>
 800313e:	4b26      	ldr	r3, [pc, #152]	@ (80031d8 <_vfiprintf_r+0x224>)
 8003140:	bb1b      	cbnz	r3, 800318a <_vfiprintf_r+0x1d6>
 8003142:	9b03      	ldr	r3, [sp, #12]
 8003144:	3307      	adds	r3, #7
 8003146:	f023 0307 	bic.w	r3, r3, #7
 800314a:	3308      	adds	r3, #8
 800314c:	9303      	str	r3, [sp, #12]
 800314e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003150:	443b      	add	r3, r7
 8003152:	9309      	str	r3, [sp, #36]	@ 0x24
 8003154:	e76a      	b.n	800302c <_vfiprintf_r+0x78>
 8003156:	fb0c 3202 	mla	r2, ip, r2, r3
 800315a:	460c      	mov	r4, r1
 800315c:	2001      	movs	r0, #1
 800315e:	e7a8      	b.n	80030b2 <_vfiprintf_r+0xfe>
 8003160:	2300      	movs	r3, #0
 8003162:	3401      	adds	r4, #1
 8003164:	9305      	str	r3, [sp, #20]
 8003166:	4619      	mov	r1, r3
 8003168:	f04f 0c0a 	mov.w	ip, #10
 800316c:	4620      	mov	r0, r4
 800316e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003172:	3a30      	subs	r2, #48	@ 0x30
 8003174:	2a09      	cmp	r2, #9
 8003176:	d903      	bls.n	8003180 <_vfiprintf_r+0x1cc>
 8003178:	2b00      	cmp	r3, #0
 800317a:	d0c6      	beq.n	800310a <_vfiprintf_r+0x156>
 800317c:	9105      	str	r1, [sp, #20]
 800317e:	e7c4      	b.n	800310a <_vfiprintf_r+0x156>
 8003180:	fb0c 2101 	mla	r1, ip, r1, r2
 8003184:	4604      	mov	r4, r0
 8003186:	2301      	movs	r3, #1
 8003188:	e7f0      	b.n	800316c <_vfiprintf_r+0x1b8>
 800318a:	ab03      	add	r3, sp, #12
 800318c:	9300      	str	r3, [sp, #0]
 800318e:	462a      	mov	r2, r5
 8003190:	4b12      	ldr	r3, [pc, #72]	@ (80031dc <_vfiprintf_r+0x228>)
 8003192:	a904      	add	r1, sp, #16
 8003194:	4630      	mov	r0, r6
 8003196:	f3af 8000 	nop.w
 800319a:	4607      	mov	r7, r0
 800319c:	1c78      	adds	r0, r7, #1
 800319e:	d1d6      	bne.n	800314e <_vfiprintf_r+0x19a>
 80031a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80031a2:	07d9      	lsls	r1, r3, #31
 80031a4:	d405      	bmi.n	80031b2 <_vfiprintf_r+0x1fe>
 80031a6:	89ab      	ldrh	r3, [r5, #12]
 80031a8:	059a      	lsls	r2, r3, #22
 80031aa:	d402      	bmi.n	80031b2 <_vfiprintf_r+0x1fe>
 80031ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80031ae:	f7ff fe8b 	bl	8002ec8 <__retarget_lock_release_recursive>
 80031b2:	89ab      	ldrh	r3, [r5, #12]
 80031b4:	065b      	lsls	r3, r3, #25
 80031b6:	f53f af1f 	bmi.w	8002ff8 <_vfiprintf_r+0x44>
 80031ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80031bc:	e71e      	b.n	8002ffc <_vfiprintf_r+0x48>
 80031be:	ab03      	add	r3, sp, #12
 80031c0:	9300      	str	r3, [sp, #0]
 80031c2:	462a      	mov	r2, r5
 80031c4:	4b05      	ldr	r3, [pc, #20]	@ (80031dc <_vfiprintf_r+0x228>)
 80031c6:	a904      	add	r1, sp, #16
 80031c8:	4630      	mov	r0, r6
 80031ca:	f000 f879 	bl	80032c0 <_printf_i>
 80031ce:	e7e4      	b.n	800319a <_vfiprintf_r+0x1e6>
 80031d0:	080045b8 	.word	0x080045b8
 80031d4:	080045c2 	.word	0x080045c2
 80031d8:	00000000 	.word	0x00000000
 80031dc:	08002f8f 	.word	0x08002f8f
 80031e0:	080045be 	.word	0x080045be

080031e4 <_printf_common>:
 80031e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80031e8:	4616      	mov	r6, r2
 80031ea:	4698      	mov	r8, r3
 80031ec:	688a      	ldr	r2, [r1, #8]
 80031ee:	690b      	ldr	r3, [r1, #16]
 80031f0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80031f4:	4293      	cmp	r3, r2
 80031f6:	bfb8      	it	lt
 80031f8:	4613      	movlt	r3, r2
 80031fa:	6033      	str	r3, [r6, #0]
 80031fc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003200:	4607      	mov	r7, r0
 8003202:	460c      	mov	r4, r1
 8003204:	b10a      	cbz	r2, 800320a <_printf_common+0x26>
 8003206:	3301      	adds	r3, #1
 8003208:	6033      	str	r3, [r6, #0]
 800320a:	6823      	ldr	r3, [r4, #0]
 800320c:	0699      	lsls	r1, r3, #26
 800320e:	bf42      	ittt	mi
 8003210:	6833      	ldrmi	r3, [r6, #0]
 8003212:	3302      	addmi	r3, #2
 8003214:	6033      	strmi	r3, [r6, #0]
 8003216:	6825      	ldr	r5, [r4, #0]
 8003218:	f015 0506 	ands.w	r5, r5, #6
 800321c:	d106      	bne.n	800322c <_printf_common+0x48>
 800321e:	f104 0a19 	add.w	sl, r4, #25
 8003222:	68e3      	ldr	r3, [r4, #12]
 8003224:	6832      	ldr	r2, [r6, #0]
 8003226:	1a9b      	subs	r3, r3, r2
 8003228:	42ab      	cmp	r3, r5
 800322a:	dc26      	bgt.n	800327a <_printf_common+0x96>
 800322c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003230:	6822      	ldr	r2, [r4, #0]
 8003232:	3b00      	subs	r3, #0
 8003234:	bf18      	it	ne
 8003236:	2301      	movne	r3, #1
 8003238:	0692      	lsls	r2, r2, #26
 800323a:	d42b      	bmi.n	8003294 <_printf_common+0xb0>
 800323c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8003240:	4641      	mov	r1, r8
 8003242:	4638      	mov	r0, r7
 8003244:	47c8      	blx	r9
 8003246:	3001      	adds	r0, #1
 8003248:	d01e      	beq.n	8003288 <_printf_common+0xa4>
 800324a:	6823      	ldr	r3, [r4, #0]
 800324c:	6922      	ldr	r2, [r4, #16]
 800324e:	f003 0306 	and.w	r3, r3, #6
 8003252:	2b04      	cmp	r3, #4
 8003254:	bf02      	ittt	eq
 8003256:	68e5      	ldreq	r5, [r4, #12]
 8003258:	6833      	ldreq	r3, [r6, #0]
 800325a:	1aed      	subeq	r5, r5, r3
 800325c:	68a3      	ldr	r3, [r4, #8]
 800325e:	bf0c      	ite	eq
 8003260:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003264:	2500      	movne	r5, #0
 8003266:	4293      	cmp	r3, r2
 8003268:	bfc4      	itt	gt
 800326a:	1a9b      	subgt	r3, r3, r2
 800326c:	18ed      	addgt	r5, r5, r3
 800326e:	2600      	movs	r6, #0
 8003270:	341a      	adds	r4, #26
 8003272:	42b5      	cmp	r5, r6
 8003274:	d11a      	bne.n	80032ac <_printf_common+0xc8>
 8003276:	2000      	movs	r0, #0
 8003278:	e008      	b.n	800328c <_printf_common+0xa8>
 800327a:	2301      	movs	r3, #1
 800327c:	4652      	mov	r2, sl
 800327e:	4641      	mov	r1, r8
 8003280:	4638      	mov	r0, r7
 8003282:	47c8      	blx	r9
 8003284:	3001      	adds	r0, #1
 8003286:	d103      	bne.n	8003290 <_printf_common+0xac>
 8003288:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800328c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003290:	3501      	adds	r5, #1
 8003292:	e7c6      	b.n	8003222 <_printf_common+0x3e>
 8003294:	18e1      	adds	r1, r4, r3
 8003296:	1c5a      	adds	r2, r3, #1
 8003298:	2030      	movs	r0, #48	@ 0x30
 800329a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800329e:	4422      	add	r2, r4
 80032a0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80032a4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80032a8:	3302      	adds	r3, #2
 80032aa:	e7c7      	b.n	800323c <_printf_common+0x58>
 80032ac:	2301      	movs	r3, #1
 80032ae:	4622      	mov	r2, r4
 80032b0:	4641      	mov	r1, r8
 80032b2:	4638      	mov	r0, r7
 80032b4:	47c8      	blx	r9
 80032b6:	3001      	adds	r0, #1
 80032b8:	d0e6      	beq.n	8003288 <_printf_common+0xa4>
 80032ba:	3601      	adds	r6, #1
 80032bc:	e7d9      	b.n	8003272 <_printf_common+0x8e>
	...

080032c0 <_printf_i>:
 80032c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80032c4:	7e0f      	ldrb	r7, [r1, #24]
 80032c6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80032c8:	2f78      	cmp	r7, #120	@ 0x78
 80032ca:	4691      	mov	r9, r2
 80032cc:	4680      	mov	r8, r0
 80032ce:	460c      	mov	r4, r1
 80032d0:	469a      	mov	sl, r3
 80032d2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80032d6:	d807      	bhi.n	80032e8 <_printf_i+0x28>
 80032d8:	2f62      	cmp	r7, #98	@ 0x62
 80032da:	d80a      	bhi.n	80032f2 <_printf_i+0x32>
 80032dc:	2f00      	cmp	r7, #0
 80032de:	f000 80d2 	beq.w	8003486 <_printf_i+0x1c6>
 80032e2:	2f58      	cmp	r7, #88	@ 0x58
 80032e4:	f000 80b9 	beq.w	800345a <_printf_i+0x19a>
 80032e8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80032ec:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80032f0:	e03a      	b.n	8003368 <_printf_i+0xa8>
 80032f2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80032f6:	2b15      	cmp	r3, #21
 80032f8:	d8f6      	bhi.n	80032e8 <_printf_i+0x28>
 80032fa:	a101      	add	r1, pc, #4	@ (adr r1, 8003300 <_printf_i+0x40>)
 80032fc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003300:	08003359 	.word	0x08003359
 8003304:	0800336d 	.word	0x0800336d
 8003308:	080032e9 	.word	0x080032e9
 800330c:	080032e9 	.word	0x080032e9
 8003310:	080032e9 	.word	0x080032e9
 8003314:	080032e9 	.word	0x080032e9
 8003318:	0800336d 	.word	0x0800336d
 800331c:	080032e9 	.word	0x080032e9
 8003320:	080032e9 	.word	0x080032e9
 8003324:	080032e9 	.word	0x080032e9
 8003328:	080032e9 	.word	0x080032e9
 800332c:	0800346d 	.word	0x0800346d
 8003330:	08003397 	.word	0x08003397
 8003334:	08003427 	.word	0x08003427
 8003338:	080032e9 	.word	0x080032e9
 800333c:	080032e9 	.word	0x080032e9
 8003340:	0800348f 	.word	0x0800348f
 8003344:	080032e9 	.word	0x080032e9
 8003348:	08003397 	.word	0x08003397
 800334c:	080032e9 	.word	0x080032e9
 8003350:	080032e9 	.word	0x080032e9
 8003354:	0800342f 	.word	0x0800342f
 8003358:	6833      	ldr	r3, [r6, #0]
 800335a:	1d1a      	adds	r2, r3, #4
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	6032      	str	r2, [r6, #0]
 8003360:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003364:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8003368:	2301      	movs	r3, #1
 800336a:	e09d      	b.n	80034a8 <_printf_i+0x1e8>
 800336c:	6833      	ldr	r3, [r6, #0]
 800336e:	6820      	ldr	r0, [r4, #0]
 8003370:	1d19      	adds	r1, r3, #4
 8003372:	6031      	str	r1, [r6, #0]
 8003374:	0606      	lsls	r6, r0, #24
 8003376:	d501      	bpl.n	800337c <_printf_i+0xbc>
 8003378:	681d      	ldr	r5, [r3, #0]
 800337a:	e003      	b.n	8003384 <_printf_i+0xc4>
 800337c:	0645      	lsls	r5, r0, #25
 800337e:	d5fb      	bpl.n	8003378 <_printf_i+0xb8>
 8003380:	f9b3 5000 	ldrsh.w	r5, [r3]
 8003384:	2d00      	cmp	r5, #0
 8003386:	da03      	bge.n	8003390 <_printf_i+0xd0>
 8003388:	232d      	movs	r3, #45	@ 0x2d
 800338a:	426d      	negs	r5, r5
 800338c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003390:	4859      	ldr	r0, [pc, #356]	@ (80034f8 <_printf_i+0x238>)
 8003392:	230a      	movs	r3, #10
 8003394:	e011      	b.n	80033ba <_printf_i+0xfa>
 8003396:	6821      	ldr	r1, [r4, #0]
 8003398:	6833      	ldr	r3, [r6, #0]
 800339a:	0608      	lsls	r0, r1, #24
 800339c:	f853 5b04 	ldr.w	r5, [r3], #4
 80033a0:	d402      	bmi.n	80033a8 <_printf_i+0xe8>
 80033a2:	0649      	lsls	r1, r1, #25
 80033a4:	bf48      	it	mi
 80033a6:	b2ad      	uxthmi	r5, r5
 80033a8:	2f6f      	cmp	r7, #111	@ 0x6f
 80033aa:	4853      	ldr	r0, [pc, #332]	@ (80034f8 <_printf_i+0x238>)
 80033ac:	6033      	str	r3, [r6, #0]
 80033ae:	bf14      	ite	ne
 80033b0:	230a      	movne	r3, #10
 80033b2:	2308      	moveq	r3, #8
 80033b4:	2100      	movs	r1, #0
 80033b6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80033ba:	6866      	ldr	r6, [r4, #4]
 80033bc:	60a6      	str	r6, [r4, #8]
 80033be:	2e00      	cmp	r6, #0
 80033c0:	bfa2      	ittt	ge
 80033c2:	6821      	ldrge	r1, [r4, #0]
 80033c4:	f021 0104 	bicge.w	r1, r1, #4
 80033c8:	6021      	strge	r1, [r4, #0]
 80033ca:	b90d      	cbnz	r5, 80033d0 <_printf_i+0x110>
 80033cc:	2e00      	cmp	r6, #0
 80033ce:	d04b      	beq.n	8003468 <_printf_i+0x1a8>
 80033d0:	4616      	mov	r6, r2
 80033d2:	fbb5 f1f3 	udiv	r1, r5, r3
 80033d6:	fb03 5711 	mls	r7, r3, r1, r5
 80033da:	5dc7      	ldrb	r7, [r0, r7]
 80033dc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80033e0:	462f      	mov	r7, r5
 80033e2:	42bb      	cmp	r3, r7
 80033e4:	460d      	mov	r5, r1
 80033e6:	d9f4      	bls.n	80033d2 <_printf_i+0x112>
 80033e8:	2b08      	cmp	r3, #8
 80033ea:	d10b      	bne.n	8003404 <_printf_i+0x144>
 80033ec:	6823      	ldr	r3, [r4, #0]
 80033ee:	07df      	lsls	r7, r3, #31
 80033f0:	d508      	bpl.n	8003404 <_printf_i+0x144>
 80033f2:	6923      	ldr	r3, [r4, #16]
 80033f4:	6861      	ldr	r1, [r4, #4]
 80033f6:	4299      	cmp	r1, r3
 80033f8:	bfde      	ittt	le
 80033fa:	2330      	movle	r3, #48	@ 0x30
 80033fc:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003400:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8003404:	1b92      	subs	r2, r2, r6
 8003406:	6122      	str	r2, [r4, #16]
 8003408:	f8cd a000 	str.w	sl, [sp]
 800340c:	464b      	mov	r3, r9
 800340e:	aa03      	add	r2, sp, #12
 8003410:	4621      	mov	r1, r4
 8003412:	4640      	mov	r0, r8
 8003414:	f7ff fee6 	bl	80031e4 <_printf_common>
 8003418:	3001      	adds	r0, #1
 800341a:	d14a      	bne.n	80034b2 <_printf_i+0x1f2>
 800341c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003420:	b004      	add	sp, #16
 8003422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003426:	6823      	ldr	r3, [r4, #0]
 8003428:	f043 0320 	orr.w	r3, r3, #32
 800342c:	6023      	str	r3, [r4, #0]
 800342e:	4833      	ldr	r0, [pc, #204]	@ (80034fc <_printf_i+0x23c>)
 8003430:	2778      	movs	r7, #120	@ 0x78
 8003432:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8003436:	6823      	ldr	r3, [r4, #0]
 8003438:	6831      	ldr	r1, [r6, #0]
 800343a:	061f      	lsls	r7, r3, #24
 800343c:	f851 5b04 	ldr.w	r5, [r1], #4
 8003440:	d402      	bmi.n	8003448 <_printf_i+0x188>
 8003442:	065f      	lsls	r7, r3, #25
 8003444:	bf48      	it	mi
 8003446:	b2ad      	uxthmi	r5, r5
 8003448:	6031      	str	r1, [r6, #0]
 800344a:	07d9      	lsls	r1, r3, #31
 800344c:	bf44      	itt	mi
 800344e:	f043 0320 	orrmi.w	r3, r3, #32
 8003452:	6023      	strmi	r3, [r4, #0]
 8003454:	b11d      	cbz	r5, 800345e <_printf_i+0x19e>
 8003456:	2310      	movs	r3, #16
 8003458:	e7ac      	b.n	80033b4 <_printf_i+0xf4>
 800345a:	4827      	ldr	r0, [pc, #156]	@ (80034f8 <_printf_i+0x238>)
 800345c:	e7e9      	b.n	8003432 <_printf_i+0x172>
 800345e:	6823      	ldr	r3, [r4, #0]
 8003460:	f023 0320 	bic.w	r3, r3, #32
 8003464:	6023      	str	r3, [r4, #0]
 8003466:	e7f6      	b.n	8003456 <_printf_i+0x196>
 8003468:	4616      	mov	r6, r2
 800346a:	e7bd      	b.n	80033e8 <_printf_i+0x128>
 800346c:	6833      	ldr	r3, [r6, #0]
 800346e:	6825      	ldr	r5, [r4, #0]
 8003470:	6961      	ldr	r1, [r4, #20]
 8003472:	1d18      	adds	r0, r3, #4
 8003474:	6030      	str	r0, [r6, #0]
 8003476:	062e      	lsls	r6, r5, #24
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	d501      	bpl.n	8003480 <_printf_i+0x1c0>
 800347c:	6019      	str	r1, [r3, #0]
 800347e:	e002      	b.n	8003486 <_printf_i+0x1c6>
 8003480:	0668      	lsls	r0, r5, #25
 8003482:	d5fb      	bpl.n	800347c <_printf_i+0x1bc>
 8003484:	8019      	strh	r1, [r3, #0]
 8003486:	2300      	movs	r3, #0
 8003488:	6123      	str	r3, [r4, #16]
 800348a:	4616      	mov	r6, r2
 800348c:	e7bc      	b.n	8003408 <_printf_i+0x148>
 800348e:	6833      	ldr	r3, [r6, #0]
 8003490:	1d1a      	adds	r2, r3, #4
 8003492:	6032      	str	r2, [r6, #0]
 8003494:	681e      	ldr	r6, [r3, #0]
 8003496:	6862      	ldr	r2, [r4, #4]
 8003498:	2100      	movs	r1, #0
 800349a:	4630      	mov	r0, r6
 800349c:	f7fc feb0 	bl	8000200 <memchr>
 80034a0:	b108      	cbz	r0, 80034a6 <_printf_i+0x1e6>
 80034a2:	1b80      	subs	r0, r0, r6
 80034a4:	6060      	str	r0, [r4, #4]
 80034a6:	6863      	ldr	r3, [r4, #4]
 80034a8:	6123      	str	r3, [r4, #16]
 80034aa:	2300      	movs	r3, #0
 80034ac:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80034b0:	e7aa      	b.n	8003408 <_printf_i+0x148>
 80034b2:	6923      	ldr	r3, [r4, #16]
 80034b4:	4632      	mov	r2, r6
 80034b6:	4649      	mov	r1, r9
 80034b8:	4640      	mov	r0, r8
 80034ba:	47d0      	blx	sl
 80034bc:	3001      	adds	r0, #1
 80034be:	d0ad      	beq.n	800341c <_printf_i+0x15c>
 80034c0:	6823      	ldr	r3, [r4, #0]
 80034c2:	079b      	lsls	r3, r3, #30
 80034c4:	d413      	bmi.n	80034ee <_printf_i+0x22e>
 80034c6:	68e0      	ldr	r0, [r4, #12]
 80034c8:	9b03      	ldr	r3, [sp, #12]
 80034ca:	4298      	cmp	r0, r3
 80034cc:	bfb8      	it	lt
 80034ce:	4618      	movlt	r0, r3
 80034d0:	e7a6      	b.n	8003420 <_printf_i+0x160>
 80034d2:	2301      	movs	r3, #1
 80034d4:	4632      	mov	r2, r6
 80034d6:	4649      	mov	r1, r9
 80034d8:	4640      	mov	r0, r8
 80034da:	47d0      	blx	sl
 80034dc:	3001      	adds	r0, #1
 80034de:	d09d      	beq.n	800341c <_printf_i+0x15c>
 80034e0:	3501      	adds	r5, #1
 80034e2:	68e3      	ldr	r3, [r4, #12]
 80034e4:	9903      	ldr	r1, [sp, #12]
 80034e6:	1a5b      	subs	r3, r3, r1
 80034e8:	42ab      	cmp	r3, r5
 80034ea:	dcf2      	bgt.n	80034d2 <_printf_i+0x212>
 80034ec:	e7eb      	b.n	80034c6 <_printf_i+0x206>
 80034ee:	2500      	movs	r5, #0
 80034f0:	f104 0619 	add.w	r6, r4, #25
 80034f4:	e7f5      	b.n	80034e2 <_printf_i+0x222>
 80034f6:	bf00      	nop
 80034f8:	080045c9 	.word	0x080045c9
 80034fc:	080045da 	.word	0x080045da

08003500 <__sflush_r>:
 8003500:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003508:	0716      	lsls	r6, r2, #28
 800350a:	4605      	mov	r5, r0
 800350c:	460c      	mov	r4, r1
 800350e:	d454      	bmi.n	80035ba <__sflush_r+0xba>
 8003510:	684b      	ldr	r3, [r1, #4]
 8003512:	2b00      	cmp	r3, #0
 8003514:	dc02      	bgt.n	800351c <__sflush_r+0x1c>
 8003516:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003518:	2b00      	cmp	r3, #0
 800351a:	dd48      	ble.n	80035ae <__sflush_r+0xae>
 800351c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800351e:	2e00      	cmp	r6, #0
 8003520:	d045      	beq.n	80035ae <__sflush_r+0xae>
 8003522:	2300      	movs	r3, #0
 8003524:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003528:	682f      	ldr	r7, [r5, #0]
 800352a:	6a21      	ldr	r1, [r4, #32]
 800352c:	602b      	str	r3, [r5, #0]
 800352e:	d030      	beq.n	8003592 <__sflush_r+0x92>
 8003530:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003532:	89a3      	ldrh	r3, [r4, #12]
 8003534:	0759      	lsls	r1, r3, #29
 8003536:	d505      	bpl.n	8003544 <__sflush_r+0x44>
 8003538:	6863      	ldr	r3, [r4, #4]
 800353a:	1ad2      	subs	r2, r2, r3
 800353c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800353e:	b10b      	cbz	r3, 8003544 <__sflush_r+0x44>
 8003540:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003542:	1ad2      	subs	r2, r2, r3
 8003544:	2300      	movs	r3, #0
 8003546:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003548:	6a21      	ldr	r1, [r4, #32]
 800354a:	4628      	mov	r0, r5
 800354c:	47b0      	blx	r6
 800354e:	1c43      	adds	r3, r0, #1
 8003550:	89a3      	ldrh	r3, [r4, #12]
 8003552:	d106      	bne.n	8003562 <__sflush_r+0x62>
 8003554:	6829      	ldr	r1, [r5, #0]
 8003556:	291d      	cmp	r1, #29
 8003558:	d82b      	bhi.n	80035b2 <__sflush_r+0xb2>
 800355a:	4a2a      	ldr	r2, [pc, #168]	@ (8003604 <__sflush_r+0x104>)
 800355c:	410a      	asrs	r2, r1
 800355e:	07d6      	lsls	r6, r2, #31
 8003560:	d427      	bmi.n	80035b2 <__sflush_r+0xb2>
 8003562:	2200      	movs	r2, #0
 8003564:	6062      	str	r2, [r4, #4]
 8003566:	04d9      	lsls	r1, r3, #19
 8003568:	6922      	ldr	r2, [r4, #16]
 800356a:	6022      	str	r2, [r4, #0]
 800356c:	d504      	bpl.n	8003578 <__sflush_r+0x78>
 800356e:	1c42      	adds	r2, r0, #1
 8003570:	d101      	bne.n	8003576 <__sflush_r+0x76>
 8003572:	682b      	ldr	r3, [r5, #0]
 8003574:	b903      	cbnz	r3, 8003578 <__sflush_r+0x78>
 8003576:	6560      	str	r0, [r4, #84]	@ 0x54
 8003578:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800357a:	602f      	str	r7, [r5, #0]
 800357c:	b1b9      	cbz	r1, 80035ae <__sflush_r+0xae>
 800357e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003582:	4299      	cmp	r1, r3
 8003584:	d002      	beq.n	800358c <__sflush_r+0x8c>
 8003586:	4628      	mov	r0, r5
 8003588:	f7ff fca0 	bl	8002ecc <_free_r>
 800358c:	2300      	movs	r3, #0
 800358e:	6363      	str	r3, [r4, #52]	@ 0x34
 8003590:	e00d      	b.n	80035ae <__sflush_r+0xae>
 8003592:	2301      	movs	r3, #1
 8003594:	4628      	mov	r0, r5
 8003596:	47b0      	blx	r6
 8003598:	4602      	mov	r2, r0
 800359a:	1c50      	adds	r0, r2, #1
 800359c:	d1c9      	bne.n	8003532 <__sflush_r+0x32>
 800359e:	682b      	ldr	r3, [r5, #0]
 80035a0:	2b00      	cmp	r3, #0
 80035a2:	d0c6      	beq.n	8003532 <__sflush_r+0x32>
 80035a4:	2b1d      	cmp	r3, #29
 80035a6:	d001      	beq.n	80035ac <__sflush_r+0xac>
 80035a8:	2b16      	cmp	r3, #22
 80035aa:	d11e      	bne.n	80035ea <__sflush_r+0xea>
 80035ac:	602f      	str	r7, [r5, #0]
 80035ae:	2000      	movs	r0, #0
 80035b0:	e022      	b.n	80035f8 <__sflush_r+0xf8>
 80035b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80035b6:	b21b      	sxth	r3, r3
 80035b8:	e01b      	b.n	80035f2 <__sflush_r+0xf2>
 80035ba:	690f      	ldr	r7, [r1, #16]
 80035bc:	2f00      	cmp	r7, #0
 80035be:	d0f6      	beq.n	80035ae <__sflush_r+0xae>
 80035c0:	0793      	lsls	r3, r2, #30
 80035c2:	680e      	ldr	r6, [r1, #0]
 80035c4:	bf08      	it	eq
 80035c6:	694b      	ldreq	r3, [r1, #20]
 80035c8:	600f      	str	r7, [r1, #0]
 80035ca:	bf18      	it	ne
 80035cc:	2300      	movne	r3, #0
 80035ce:	eba6 0807 	sub.w	r8, r6, r7
 80035d2:	608b      	str	r3, [r1, #8]
 80035d4:	f1b8 0f00 	cmp.w	r8, #0
 80035d8:	dde9      	ble.n	80035ae <__sflush_r+0xae>
 80035da:	6a21      	ldr	r1, [r4, #32]
 80035dc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80035de:	4643      	mov	r3, r8
 80035e0:	463a      	mov	r2, r7
 80035e2:	4628      	mov	r0, r5
 80035e4:	47b0      	blx	r6
 80035e6:	2800      	cmp	r0, #0
 80035e8:	dc08      	bgt.n	80035fc <__sflush_r+0xfc>
 80035ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80035ee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80035f2:	81a3      	strh	r3, [r4, #12]
 80035f4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80035f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80035fc:	4407      	add	r7, r0
 80035fe:	eba8 0800 	sub.w	r8, r8, r0
 8003602:	e7e7      	b.n	80035d4 <__sflush_r+0xd4>
 8003604:	dfbffffe 	.word	0xdfbffffe

08003608 <_fflush_r>:
 8003608:	b538      	push	{r3, r4, r5, lr}
 800360a:	690b      	ldr	r3, [r1, #16]
 800360c:	4605      	mov	r5, r0
 800360e:	460c      	mov	r4, r1
 8003610:	b913      	cbnz	r3, 8003618 <_fflush_r+0x10>
 8003612:	2500      	movs	r5, #0
 8003614:	4628      	mov	r0, r5
 8003616:	bd38      	pop	{r3, r4, r5, pc}
 8003618:	b118      	cbz	r0, 8003622 <_fflush_r+0x1a>
 800361a:	6a03      	ldr	r3, [r0, #32]
 800361c:	b90b      	cbnz	r3, 8003622 <_fflush_r+0x1a>
 800361e:	f7ff fb69 	bl	8002cf4 <__sinit>
 8003622:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003626:	2b00      	cmp	r3, #0
 8003628:	d0f3      	beq.n	8003612 <_fflush_r+0xa>
 800362a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800362c:	07d0      	lsls	r0, r2, #31
 800362e:	d404      	bmi.n	800363a <_fflush_r+0x32>
 8003630:	0599      	lsls	r1, r3, #22
 8003632:	d402      	bmi.n	800363a <_fflush_r+0x32>
 8003634:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003636:	f7ff fc46 	bl	8002ec6 <__retarget_lock_acquire_recursive>
 800363a:	4628      	mov	r0, r5
 800363c:	4621      	mov	r1, r4
 800363e:	f7ff ff5f 	bl	8003500 <__sflush_r>
 8003642:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003644:	07da      	lsls	r2, r3, #31
 8003646:	4605      	mov	r5, r0
 8003648:	d4e4      	bmi.n	8003614 <_fflush_r+0xc>
 800364a:	89a3      	ldrh	r3, [r4, #12]
 800364c:	059b      	lsls	r3, r3, #22
 800364e:	d4e1      	bmi.n	8003614 <_fflush_r+0xc>
 8003650:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003652:	f7ff fc39 	bl	8002ec8 <__retarget_lock_release_recursive>
 8003656:	e7dd      	b.n	8003614 <_fflush_r+0xc>

08003658 <__sread>:
 8003658:	b510      	push	{r4, lr}
 800365a:	460c      	mov	r4, r1
 800365c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003660:	f000 f978 	bl	8003954 <_read_r>
 8003664:	2800      	cmp	r0, #0
 8003666:	bfab      	itete	ge
 8003668:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800366a:	89a3      	ldrhlt	r3, [r4, #12]
 800366c:	181b      	addge	r3, r3, r0
 800366e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8003672:	bfac      	ite	ge
 8003674:	6563      	strge	r3, [r4, #84]	@ 0x54
 8003676:	81a3      	strhlt	r3, [r4, #12]
 8003678:	bd10      	pop	{r4, pc}

0800367a <__swrite>:
 800367a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800367e:	461f      	mov	r7, r3
 8003680:	898b      	ldrh	r3, [r1, #12]
 8003682:	05db      	lsls	r3, r3, #23
 8003684:	4605      	mov	r5, r0
 8003686:	460c      	mov	r4, r1
 8003688:	4616      	mov	r6, r2
 800368a:	d505      	bpl.n	8003698 <__swrite+0x1e>
 800368c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003690:	2302      	movs	r3, #2
 8003692:	2200      	movs	r2, #0
 8003694:	f000 f94c 	bl	8003930 <_lseek_r>
 8003698:	89a3      	ldrh	r3, [r4, #12]
 800369a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800369e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80036a2:	81a3      	strh	r3, [r4, #12]
 80036a4:	4632      	mov	r2, r6
 80036a6:	463b      	mov	r3, r7
 80036a8:	4628      	mov	r0, r5
 80036aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80036ae:	f000 b963 	b.w	8003978 <_write_r>

080036b2 <__sseek>:
 80036b2:	b510      	push	{r4, lr}
 80036b4:	460c      	mov	r4, r1
 80036b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80036ba:	f000 f939 	bl	8003930 <_lseek_r>
 80036be:	1c43      	adds	r3, r0, #1
 80036c0:	89a3      	ldrh	r3, [r4, #12]
 80036c2:	bf15      	itete	ne
 80036c4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80036c6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80036ca:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80036ce:	81a3      	strheq	r3, [r4, #12]
 80036d0:	bf18      	it	ne
 80036d2:	81a3      	strhne	r3, [r4, #12]
 80036d4:	bd10      	pop	{r4, pc}

080036d6 <__sclose>:
 80036d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80036da:	f000 b8f7 	b.w	80038cc <_close_r>

080036de <__swbuf_r>:
 80036de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80036e0:	460e      	mov	r6, r1
 80036e2:	4614      	mov	r4, r2
 80036e4:	4605      	mov	r5, r0
 80036e6:	b118      	cbz	r0, 80036f0 <__swbuf_r+0x12>
 80036e8:	6a03      	ldr	r3, [r0, #32]
 80036ea:	b90b      	cbnz	r3, 80036f0 <__swbuf_r+0x12>
 80036ec:	f7ff fb02 	bl	8002cf4 <__sinit>
 80036f0:	69a3      	ldr	r3, [r4, #24]
 80036f2:	60a3      	str	r3, [r4, #8]
 80036f4:	89a3      	ldrh	r3, [r4, #12]
 80036f6:	071a      	lsls	r2, r3, #28
 80036f8:	d501      	bpl.n	80036fe <__swbuf_r+0x20>
 80036fa:	6923      	ldr	r3, [r4, #16]
 80036fc:	b943      	cbnz	r3, 8003710 <__swbuf_r+0x32>
 80036fe:	4621      	mov	r1, r4
 8003700:	4628      	mov	r0, r5
 8003702:	f000 f82b 	bl	800375c <__swsetup_r>
 8003706:	b118      	cbz	r0, 8003710 <__swbuf_r+0x32>
 8003708:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 800370c:	4638      	mov	r0, r7
 800370e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003710:	6823      	ldr	r3, [r4, #0]
 8003712:	6922      	ldr	r2, [r4, #16]
 8003714:	1a98      	subs	r0, r3, r2
 8003716:	6963      	ldr	r3, [r4, #20]
 8003718:	b2f6      	uxtb	r6, r6
 800371a:	4283      	cmp	r3, r0
 800371c:	4637      	mov	r7, r6
 800371e:	dc05      	bgt.n	800372c <__swbuf_r+0x4e>
 8003720:	4621      	mov	r1, r4
 8003722:	4628      	mov	r0, r5
 8003724:	f7ff ff70 	bl	8003608 <_fflush_r>
 8003728:	2800      	cmp	r0, #0
 800372a:	d1ed      	bne.n	8003708 <__swbuf_r+0x2a>
 800372c:	68a3      	ldr	r3, [r4, #8]
 800372e:	3b01      	subs	r3, #1
 8003730:	60a3      	str	r3, [r4, #8]
 8003732:	6823      	ldr	r3, [r4, #0]
 8003734:	1c5a      	adds	r2, r3, #1
 8003736:	6022      	str	r2, [r4, #0]
 8003738:	701e      	strb	r6, [r3, #0]
 800373a:	6962      	ldr	r2, [r4, #20]
 800373c:	1c43      	adds	r3, r0, #1
 800373e:	429a      	cmp	r2, r3
 8003740:	d004      	beq.n	800374c <__swbuf_r+0x6e>
 8003742:	89a3      	ldrh	r3, [r4, #12]
 8003744:	07db      	lsls	r3, r3, #31
 8003746:	d5e1      	bpl.n	800370c <__swbuf_r+0x2e>
 8003748:	2e0a      	cmp	r6, #10
 800374a:	d1df      	bne.n	800370c <__swbuf_r+0x2e>
 800374c:	4621      	mov	r1, r4
 800374e:	4628      	mov	r0, r5
 8003750:	f7ff ff5a 	bl	8003608 <_fflush_r>
 8003754:	2800      	cmp	r0, #0
 8003756:	d0d9      	beq.n	800370c <__swbuf_r+0x2e>
 8003758:	e7d6      	b.n	8003708 <__swbuf_r+0x2a>
	...

0800375c <__swsetup_r>:
 800375c:	b538      	push	{r3, r4, r5, lr}
 800375e:	4b29      	ldr	r3, [pc, #164]	@ (8003804 <__swsetup_r+0xa8>)
 8003760:	4605      	mov	r5, r0
 8003762:	6818      	ldr	r0, [r3, #0]
 8003764:	460c      	mov	r4, r1
 8003766:	b118      	cbz	r0, 8003770 <__swsetup_r+0x14>
 8003768:	6a03      	ldr	r3, [r0, #32]
 800376a:	b90b      	cbnz	r3, 8003770 <__swsetup_r+0x14>
 800376c:	f7ff fac2 	bl	8002cf4 <__sinit>
 8003770:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003774:	0719      	lsls	r1, r3, #28
 8003776:	d422      	bmi.n	80037be <__swsetup_r+0x62>
 8003778:	06da      	lsls	r2, r3, #27
 800377a:	d407      	bmi.n	800378c <__swsetup_r+0x30>
 800377c:	2209      	movs	r2, #9
 800377e:	602a      	str	r2, [r5, #0]
 8003780:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003784:	81a3      	strh	r3, [r4, #12]
 8003786:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800378a:	e033      	b.n	80037f4 <__swsetup_r+0x98>
 800378c:	0758      	lsls	r0, r3, #29
 800378e:	d512      	bpl.n	80037b6 <__swsetup_r+0x5a>
 8003790:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003792:	b141      	cbz	r1, 80037a6 <__swsetup_r+0x4a>
 8003794:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003798:	4299      	cmp	r1, r3
 800379a:	d002      	beq.n	80037a2 <__swsetup_r+0x46>
 800379c:	4628      	mov	r0, r5
 800379e:	f7ff fb95 	bl	8002ecc <_free_r>
 80037a2:	2300      	movs	r3, #0
 80037a4:	6363      	str	r3, [r4, #52]	@ 0x34
 80037a6:	89a3      	ldrh	r3, [r4, #12]
 80037a8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80037ac:	81a3      	strh	r3, [r4, #12]
 80037ae:	2300      	movs	r3, #0
 80037b0:	6063      	str	r3, [r4, #4]
 80037b2:	6923      	ldr	r3, [r4, #16]
 80037b4:	6023      	str	r3, [r4, #0]
 80037b6:	89a3      	ldrh	r3, [r4, #12]
 80037b8:	f043 0308 	orr.w	r3, r3, #8
 80037bc:	81a3      	strh	r3, [r4, #12]
 80037be:	6923      	ldr	r3, [r4, #16]
 80037c0:	b94b      	cbnz	r3, 80037d6 <__swsetup_r+0x7a>
 80037c2:	89a3      	ldrh	r3, [r4, #12]
 80037c4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80037c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80037cc:	d003      	beq.n	80037d6 <__swsetup_r+0x7a>
 80037ce:	4621      	mov	r1, r4
 80037d0:	4628      	mov	r0, r5
 80037d2:	f000 f83f 	bl	8003854 <__smakebuf_r>
 80037d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80037da:	f013 0201 	ands.w	r2, r3, #1
 80037de:	d00a      	beq.n	80037f6 <__swsetup_r+0x9a>
 80037e0:	2200      	movs	r2, #0
 80037e2:	60a2      	str	r2, [r4, #8]
 80037e4:	6962      	ldr	r2, [r4, #20]
 80037e6:	4252      	negs	r2, r2
 80037e8:	61a2      	str	r2, [r4, #24]
 80037ea:	6922      	ldr	r2, [r4, #16]
 80037ec:	b942      	cbnz	r2, 8003800 <__swsetup_r+0xa4>
 80037ee:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80037f2:	d1c5      	bne.n	8003780 <__swsetup_r+0x24>
 80037f4:	bd38      	pop	{r3, r4, r5, pc}
 80037f6:	0799      	lsls	r1, r3, #30
 80037f8:	bf58      	it	pl
 80037fa:	6962      	ldrpl	r2, [r4, #20]
 80037fc:	60a2      	str	r2, [r4, #8]
 80037fe:	e7f4      	b.n	80037ea <__swsetup_r+0x8e>
 8003800:	2000      	movs	r0, #0
 8003802:	e7f7      	b.n	80037f4 <__swsetup_r+0x98>
 8003804:	2000092c 	.word	0x2000092c

08003808 <__swhatbuf_r>:
 8003808:	b570      	push	{r4, r5, r6, lr}
 800380a:	460c      	mov	r4, r1
 800380c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003810:	2900      	cmp	r1, #0
 8003812:	b096      	sub	sp, #88	@ 0x58
 8003814:	4615      	mov	r5, r2
 8003816:	461e      	mov	r6, r3
 8003818:	da0d      	bge.n	8003836 <__swhatbuf_r+0x2e>
 800381a:	89a3      	ldrh	r3, [r4, #12]
 800381c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003820:	f04f 0100 	mov.w	r1, #0
 8003824:	bf14      	ite	ne
 8003826:	2340      	movne	r3, #64	@ 0x40
 8003828:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800382c:	2000      	movs	r0, #0
 800382e:	6031      	str	r1, [r6, #0]
 8003830:	602b      	str	r3, [r5, #0]
 8003832:	b016      	add	sp, #88	@ 0x58
 8003834:	bd70      	pop	{r4, r5, r6, pc}
 8003836:	466a      	mov	r2, sp
 8003838:	f000 f858 	bl	80038ec <_fstat_r>
 800383c:	2800      	cmp	r0, #0
 800383e:	dbec      	blt.n	800381a <__swhatbuf_r+0x12>
 8003840:	9901      	ldr	r1, [sp, #4]
 8003842:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8003846:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800384a:	4259      	negs	r1, r3
 800384c:	4159      	adcs	r1, r3
 800384e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003852:	e7eb      	b.n	800382c <__swhatbuf_r+0x24>

08003854 <__smakebuf_r>:
 8003854:	898b      	ldrh	r3, [r1, #12]
 8003856:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003858:	079d      	lsls	r5, r3, #30
 800385a:	4606      	mov	r6, r0
 800385c:	460c      	mov	r4, r1
 800385e:	d507      	bpl.n	8003870 <__smakebuf_r+0x1c>
 8003860:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003864:	6023      	str	r3, [r4, #0]
 8003866:	6123      	str	r3, [r4, #16]
 8003868:	2301      	movs	r3, #1
 800386a:	6163      	str	r3, [r4, #20]
 800386c:	b003      	add	sp, #12
 800386e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003870:	ab01      	add	r3, sp, #4
 8003872:	466a      	mov	r2, sp
 8003874:	f7ff ffc8 	bl	8003808 <__swhatbuf_r>
 8003878:	9f00      	ldr	r7, [sp, #0]
 800387a:	4605      	mov	r5, r0
 800387c:	4639      	mov	r1, r7
 800387e:	4630      	mov	r0, r6
 8003880:	f7ff f920 	bl	8002ac4 <_malloc_r>
 8003884:	b948      	cbnz	r0, 800389a <__smakebuf_r+0x46>
 8003886:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800388a:	059a      	lsls	r2, r3, #22
 800388c:	d4ee      	bmi.n	800386c <__smakebuf_r+0x18>
 800388e:	f023 0303 	bic.w	r3, r3, #3
 8003892:	f043 0302 	orr.w	r3, r3, #2
 8003896:	81a3      	strh	r3, [r4, #12]
 8003898:	e7e2      	b.n	8003860 <__smakebuf_r+0xc>
 800389a:	89a3      	ldrh	r3, [r4, #12]
 800389c:	6020      	str	r0, [r4, #0]
 800389e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80038a2:	81a3      	strh	r3, [r4, #12]
 80038a4:	9b01      	ldr	r3, [sp, #4]
 80038a6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80038aa:	b15b      	cbz	r3, 80038c4 <__smakebuf_r+0x70>
 80038ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80038b0:	4630      	mov	r0, r6
 80038b2:	f000 f82d 	bl	8003910 <_isatty_r>
 80038b6:	b128      	cbz	r0, 80038c4 <__smakebuf_r+0x70>
 80038b8:	89a3      	ldrh	r3, [r4, #12]
 80038ba:	f023 0303 	bic.w	r3, r3, #3
 80038be:	f043 0301 	orr.w	r3, r3, #1
 80038c2:	81a3      	strh	r3, [r4, #12]
 80038c4:	89a3      	ldrh	r3, [r4, #12]
 80038c6:	431d      	orrs	r5, r3
 80038c8:	81a5      	strh	r5, [r4, #12]
 80038ca:	e7cf      	b.n	800386c <__smakebuf_r+0x18>

080038cc <_close_r>:
 80038cc:	b538      	push	{r3, r4, r5, lr}
 80038ce:	4d06      	ldr	r5, [pc, #24]	@ (80038e8 <_close_r+0x1c>)
 80038d0:	2300      	movs	r3, #0
 80038d2:	4604      	mov	r4, r0
 80038d4:	4608      	mov	r0, r1
 80038d6:	602b      	str	r3, [r5, #0]
 80038d8:	f000 f994 	bl	8003c04 <_close>
 80038dc:	1c43      	adds	r3, r0, #1
 80038de:	d102      	bne.n	80038e6 <_close_r+0x1a>
 80038e0:	682b      	ldr	r3, [r5, #0]
 80038e2:	b103      	cbz	r3, 80038e6 <_close_r+0x1a>
 80038e4:	6023      	str	r3, [r4, #0]
 80038e6:	bd38      	pop	{r3, r4, r5, pc}
 80038e8:	20000c28 	.word	0x20000c28

080038ec <_fstat_r>:
 80038ec:	b538      	push	{r3, r4, r5, lr}
 80038ee:	4d07      	ldr	r5, [pc, #28]	@ (800390c <_fstat_r+0x20>)
 80038f0:	2300      	movs	r3, #0
 80038f2:	4604      	mov	r4, r0
 80038f4:	4608      	mov	r0, r1
 80038f6:	4611      	mov	r1, r2
 80038f8:	602b      	str	r3, [r5, #0]
 80038fa:	f000 f98b 	bl	8003c14 <_fstat>
 80038fe:	1c43      	adds	r3, r0, #1
 8003900:	d102      	bne.n	8003908 <_fstat_r+0x1c>
 8003902:	682b      	ldr	r3, [r5, #0]
 8003904:	b103      	cbz	r3, 8003908 <_fstat_r+0x1c>
 8003906:	6023      	str	r3, [r4, #0]
 8003908:	bd38      	pop	{r3, r4, r5, pc}
 800390a:	bf00      	nop
 800390c:	20000c28 	.word	0x20000c28

08003910 <_isatty_r>:
 8003910:	b538      	push	{r3, r4, r5, lr}
 8003912:	4d06      	ldr	r5, [pc, #24]	@ (800392c <_isatty_r+0x1c>)
 8003914:	2300      	movs	r3, #0
 8003916:	4604      	mov	r4, r0
 8003918:	4608      	mov	r0, r1
 800391a:	602b      	str	r3, [r5, #0]
 800391c:	f000 f982 	bl	8003c24 <_isatty>
 8003920:	1c43      	adds	r3, r0, #1
 8003922:	d102      	bne.n	800392a <_isatty_r+0x1a>
 8003924:	682b      	ldr	r3, [r5, #0]
 8003926:	b103      	cbz	r3, 800392a <_isatty_r+0x1a>
 8003928:	6023      	str	r3, [r4, #0]
 800392a:	bd38      	pop	{r3, r4, r5, pc}
 800392c:	20000c28 	.word	0x20000c28

08003930 <_lseek_r>:
 8003930:	b538      	push	{r3, r4, r5, lr}
 8003932:	4d07      	ldr	r5, [pc, #28]	@ (8003950 <_lseek_r+0x20>)
 8003934:	4604      	mov	r4, r0
 8003936:	4608      	mov	r0, r1
 8003938:	4611      	mov	r1, r2
 800393a:	2200      	movs	r2, #0
 800393c:	602a      	str	r2, [r5, #0]
 800393e:	461a      	mov	r2, r3
 8003940:	f000 f978 	bl	8003c34 <_lseek>
 8003944:	1c43      	adds	r3, r0, #1
 8003946:	d102      	bne.n	800394e <_lseek_r+0x1e>
 8003948:	682b      	ldr	r3, [r5, #0]
 800394a:	b103      	cbz	r3, 800394e <_lseek_r+0x1e>
 800394c:	6023      	str	r3, [r4, #0]
 800394e:	bd38      	pop	{r3, r4, r5, pc}
 8003950:	20000c28 	.word	0x20000c28

08003954 <_read_r>:
 8003954:	b538      	push	{r3, r4, r5, lr}
 8003956:	4d07      	ldr	r5, [pc, #28]	@ (8003974 <_read_r+0x20>)
 8003958:	4604      	mov	r4, r0
 800395a:	4608      	mov	r0, r1
 800395c:	4611      	mov	r1, r2
 800395e:	2200      	movs	r2, #0
 8003960:	602a      	str	r2, [r5, #0]
 8003962:	461a      	mov	r2, r3
 8003964:	f000 f96e 	bl	8003c44 <_read>
 8003968:	1c43      	adds	r3, r0, #1
 800396a:	d102      	bne.n	8003972 <_read_r+0x1e>
 800396c:	682b      	ldr	r3, [r5, #0]
 800396e:	b103      	cbz	r3, 8003972 <_read_r+0x1e>
 8003970:	6023      	str	r3, [r4, #0]
 8003972:	bd38      	pop	{r3, r4, r5, pc}
 8003974:	20000c28 	.word	0x20000c28

08003978 <_write_r>:
 8003978:	b538      	push	{r3, r4, r5, lr}
 800397a:	4d07      	ldr	r5, [pc, #28]	@ (8003998 <_write_r+0x20>)
 800397c:	4604      	mov	r4, r0
 800397e:	4608      	mov	r0, r1
 8003980:	4611      	mov	r1, r2
 8003982:	2200      	movs	r2, #0
 8003984:	602a      	str	r2, [r5, #0]
 8003986:	461a      	mov	r2, r3
 8003988:	f000 f964 	bl	8003c54 <_write>
 800398c:	1c43      	adds	r3, r0, #1
 800398e:	d102      	bne.n	8003996 <_write_r+0x1e>
 8003990:	682b      	ldr	r3, [r5, #0]
 8003992:	b103      	cbz	r3, 8003996 <_write_r+0x1e>
 8003994:	6023      	str	r3, [r4, #0]
 8003996:	bd38      	pop	{r3, r4, r5, pc}
 8003998:	20000c28 	.word	0x20000c28

0800399c <expf>:
 800399c:	b508      	push	{r3, lr}
 800399e:	ed2d 8b02 	vpush	{d8}
 80039a2:	eef0 8a40 	vmov.f32	s17, s0
 80039a6:	f000 f839 	bl	8003a1c <__ieee754_expf>
 80039aa:	eeb0 8a40 	vmov.f32	s16, s0
 80039ae:	eeb0 0a68 	vmov.f32	s0, s17
 80039b2:	f000 f829 	bl	8003a08 <finitef>
 80039b6:	b160      	cbz	r0, 80039d2 <expf+0x36>
 80039b8:	eddf 7a0f 	vldr	s15, [pc, #60]	@ 80039f8 <expf+0x5c>
 80039bc:	eef4 8ae7 	vcmpe.f32	s17, s15
 80039c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80039c4:	dd0a      	ble.n	80039dc <expf+0x40>
 80039c6:	f7ff fa53 	bl	8002e70 <__errno>
 80039ca:	ed9f 8a0c 	vldr	s16, [pc, #48]	@ 80039fc <expf+0x60>
 80039ce:	2322      	movs	r3, #34	@ 0x22
 80039d0:	6003      	str	r3, [r0, #0]
 80039d2:	eeb0 0a48 	vmov.f32	s0, s16
 80039d6:	ecbd 8b02 	vpop	{d8}
 80039da:	bd08      	pop	{r3, pc}
 80039dc:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8003a00 <expf+0x64>
 80039e0:	eef4 8ae7 	vcmpe.f32	s17, s15
 80039e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80039e8:	d5f3      	bpl.n	80039d2 <expf+0x36>
 80039ea:	f7ff fa41 	bl	8002e70 <__errno>
 80039ee:	2322      	movs	r3, #34	@ 0x22
 80039f0:	ed9f 8a04 	vldr	s16, [pc, #16]	@ 8003a04 <expf+0x68>
 80039f4:	6003      	str	r3, [r0, #0]
 80039f6:	e7ec      	b.n	80039d2 <expf+0x36>
 80039f8:	42b17217 	.word	0x42b17217
 80039fc:	7f800000 	.word	0x7f800000
 8003a00:	c2cff1b5 	.word	0xc2cff1b5
 8003a04:	00000000 	.word	0x00000000

08003a08 <finitef>:
 8003a08:	ee10 3a10 	vmov	r3, s0
 8003a0c:	f023 4000 	bic.w	r0, r3, #2147483648	@ 0x80000000
 8003a10:	f1b0 4fff 	cmp.w	r0, #2139095040	@ 0x7f800000
 8003a14:	bfac      	ite	ge
 8003a16:	2000      	movge	r0, #0
 8003a18:	2001      	movlt	r0, #1
 8003a1a:	4770      	bx	lr

08003a1c <__ieee754_expf>:
 8003a1c:	ee10 2a10 	vmov	r2, s0
 8003a20:	f022 4300 	bic.w	r3, r2, #2147483648	@ 0x80000000
 8003a24:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8003a28:	d902      	bls.n	8003a30 <__ieee754_expf+0x14>
 8003a2a:	ee30 0a00 	vadd.f32	s0, s0, s0
 8003a2e:	4770      	bx	lr
 8003a30:	ea4f 71d2 	mov.w	r1, r2, lsr #31
 8003a34:	d106      	bne.n	8003a44 <__ieee754_expf+0x28>
 8003a36:	eddf 7a4e 	vldr	s15, [pc, #312]	@ 8003b70 <__ieee754_expf+0x154>
 8003a3a:	2900      	cmp	r1, #0
 8003a3c:	bf18      	it	ne
 8003a3e:	eeb0 0a67 	vmovne.f32	s0, s15
 8003a42:	4770      	bx	lr
 8003a44:	484b      	ldr	r0, [pc, #300]	@ (8003b74 <__ieee754_expf+0x158>)
 8003a46:	4282      	cmp	r2, r0
 8003a48:	dd02      	ble.n	8003a50 <__ieee754_expf+0x34>
 8003a4a:	2000      	movs	r0, #0
 8003a4c:	f000 b8d4 	b.w	8003bf8 <__math_oflowf>
 8003a50:	2a00      	cmp	r2, #0
 8003a52:	da05      	bge.n	8003a60 <__ieee754_expf+0x44>
 8003a54:	4a48      	ldr	r2, [pc, #288]	@ (8003b78 <__ieee754_expf+0x15c>)
 8003a56:	4293      	cmp	r3, r2
 8003a58:	d902      	bls.n	8003a60 <__ieee754_expf+0x44>
 8003a5a:	2000      	movs	r0, #0
 8003a5c:	f000 b8c6 	b.w	8003bec <__math_uflowf>
 8003a60:	4a46      	ldr	r2, [pc, #280]	@ (8003b7c <__ieee754_expf+0x160>)
 8003a62:	4293      	cmp	r3, r2
 8003a64:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8003a68:	d952      	bls.n	8003b10 <__ieee754_expf+0xf4>
 8003a6a:	4a45      	ldr	r2, [pc, #276]	@ (8003b80 <__ieee754_expf+0x164>)
 8003a6c:	4293      	cmp	r3, r2
 8003a6e:	ea4f 0281 	mov.w	r2, r1, lsl #2
 8003a72:	d834      	bhi.n	8003ade <__ieee754_expf+0xc2>
 8003a74:	4b43      	ldr	r3, [pc, #268]	@ (8003b84 <__ieee754_expf+0x168>)
 8003a76:	4413      	add	r3, r2
 8003a78:	ed93 7a00 	vldr	s14, [r3]
 8003a7c:	4b42      	ldr	r3, [pc, #264]	@ (8003b88 <__ieee754_expf+0x16c>)
 8003a7e:	4413      	add	r3, r2
 8003a80:	ee30 7a47 	vsub.f32	s14, s0, s14
 8003a84:	f1c1 0201 	rsb	r2, r1, #1
 8003a88:	edd3 7a00 	vldr	s15, [r3]
 8003a8c:	1a52      	subs	r2, r2, r1
 8003a8e:	ee37 0a67 	vsub.f32	s0, s14, s15
 8003a92:	ee20 6a00 	vmul.f32	s12, s0, s0
 8003a96:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 8003b8c <__ieee754_expf+0x170>
 8003a9a:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8003b90 <__ieee754_expf+0x174>
 8003a9e:	eee6 6a05 	vfma.f32	s13, s12, s10
 8003aa2:	ed9f 5a3c 	vldr	s10, [pc, #240]	@ 8003b94 <__ieee754_expf+0x178>
 8003aa6:	eea6 5a86 	vfma.f32	s10, s13, s12
 8003aaa:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 8003b98 <__ieee754_expf+0x17c>
 8003aae:	eee5 6a06 	vfma.f32	s13, s10, s12
 8003ab2:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ 8003b9c <__ieee754_expf+0x180>
 8003ab6:	eea6 5a86 	vfma.f32	s10, s13, s12
 8003aba:	eef0 6a40 	vmov.f32	s13, s0
 8003abe:	eee5 6a46 	vfms.f32	s13, s10, s12
 8003ac2:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 8003ac6:	ee20 5a26 	vmul.f32	s10, s0, s13
 8003aca:	bb92      	cbnz	r2, 8003b32 <__ieee754_expf+0x116>
 8003acc:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8003ad0:	eec5 7a26 	vdiv.f32	s15, s10, s13
 8003ad4:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8003ad8:	ee35 0ac0 	vsub.f32	s0, s11, s0
 8003adc:	4770      	bx	lr
 8003ade:	4b30      	ldr	r3, [pc, #192]	@ (8003ba0 <__ieee754_expf+0x184>)
 8003ae0:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8003ba4 <__ieee754_expf+0x188>
 8003ae4:	eddf 6a30 	vldr	s13, [pc, #192]	@ 8003ba8 <__ieee754_expf+0x18c>
 8003ae8:	4413      	add	r3, r2
 8003aea:	edd3 7a00 	vldr	s15, [r3]
 8003aee:	eee0 7a07 	vfma.f32	s15, s0, s14
 8003af2:	eeb0 7a40 	vmov.f32	s14, s0
 8003af6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003afa:	ee17 2a90 	vmov	r2, s15
 8003afe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003b02:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8003b06:	eddf 6a29 	vldr	s13, [pc, #164]	@ 8003bac <__ieee754_expf+0x190>
 8003b0a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8003b0e:	e7be      	b.n	8003a8e <__ieee754_expf+0x72>
 8003b10:	f1b3 5f50 	cmp.w	r3, #872415232	@ 0x34000000
 8003b14:	d20b      	bcs.n	8003b2e <__ieee754_expf+0x112>
 8003b16:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8003bb0 <__ieee754_expf+0x194>
 8003b1a:	ee70 6a26 	vadd.f32	s13, s0, s13
 8003b1e:	eef4 6ae5 	vcmpe.f32	s13, s11
 8003b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b26:	dd02      	ble.n	8003b2e <__ieee754_expf+0x112>
 8003b28:	ee30 0a25 	vadd.f32	s0, s0, s11
 8003b2c:	4770      	bx	lr
 8003b2e:	2200      	movs	r2, #0
 8003b30:	e7af      	b.n	8003a92 <__ieee754_expf+0x76>
 8003b32:	ee36 6a66 	vsub.f32	s12, s12, s13
 8003b36:	f112 0f7d 	cmn.w	r2, #125	@ 0x7d
 8003b3a:	eec5 6a06 	vdiv.f32	s13, s10, s12
 8003b3e:	bfb8      	it	lt
 8003b40:	3264      	addlt	r2, #100	@ 0x64
 8003b42:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8003b46:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003b4a:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8003b4e:	ee17 3a90 	vmov	r3, s15
 8003b52:	bfab      	itete	ge
 8003b54:	eb03 53c2 	addge.w	r3, r3, r2, lsl #23
 8003b58:	eb03 53c2 	addlt.w	r3, r3, r2, lsl #23
 8003b5c:	ee00 3a10 	vmovge	s0, r3
 8003b60:	eddf 7a14 	vldrlt	s15, [pc, #80]	@ 8003bb4 <__ieee754_expf+0x198>
 8003b64:	bfbc      	itt	lt
 8003b66:	ee00 3a10 	vmovlt	s0, r3
 8003b6a:	ee20 0a27 	vmullt.f32	s0, s0, s15
 8003b6e:	4770      	bx	lr
 8003b70:	00000000 	.word	0x00000000
 8003b74:	42b17217 	.word	0x42b17217
 8003b78:	42cff1b5 	.word	0x42cff1b5
 8003b7c:	3eb17218 	.word	0x3eb17218
 8003b80:	3f851591 	.word	0x3f851591
 8003b84:	080045f4 	.word	0x080045f4
 8003b88:	080045ec 	.word	0x080045ec
 8003b8c:	3331bb4c 	.word	0x3331bb4c
 8003b90:	b5ddea0e 	.word	0xb5ddea0e
 8003b94:	388ab355 	.word	0x388ab355
 8003b98:	bb360b61 	.word	0xbb360b61
 8003b9c:	3e2aaaab 	.word	0x3e2aaaab
 8003ba0:	080045fc 	.word	0x080045fc
 8003ba4:	3fb8aa3b 	.word	0x3fb8aa3b
 8003ba8:	3f317180 	.word	0x3f317180
 8003bac:	3717f7d1 	.word	0x3717f7d1
 8003bb0:	7149f2ca 	.word	0x7149f2ca
 8003bb4:	0d800000 	.word	0x0d800000

08003bb8 <with_errnof>:
 8003bb8:	b510      	push	{r4, lr}
 8003bba:	ed2d 8b02 	vpush	{d8}
 8003bbe:	eeb0 8a40 	vmov.f32	s16, s0
 8003bc2:	4604      	mov	r4, r0
 8003bc4:	f7ff f954 	bl	8002e70 <__errno>
 8003bc8:	eeb0 0a48 	vmov.f32	s0, s16
 8003bcc:	ecbd 8b02 	vpop	{d8}
 8003bd0:	6004      	str	r4, [r0, #0]
 8003bd2:	bd10      	pop	{r4, pc}

08003bd4 <xflowf>:
 8003bd4:	b130      	cbz	r0, 8003be4 <xflowf+0x10>
 8003bd6:	eef1 7a40 	vneg.f32	s15, s0
 8003bda:	ee27 0a80 	vmul.f32	s0, s15, s0
 8003bde:	2022      	movs	r0, #34	@ 0x22
 8003be0:	f7ff bfea 	b.w	8003bb8 <with_errnof>
 8003be4:	eef0 7a40 	vmov.f32	s15, s0
 8003be8:	e7f7      	b.n	8003bda <xflowf+0x6>
	...

08003bec <__math_uflowf>:
 8003bec:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8003bf4 <__math_uflowf+0x8>
 8003bf0:	f7ff bff0 	b.w	8003bd4 <xflowf>
 8003bf4:	10000000 	.word	0x10000000

08003bf8 <__math_oflowf>:
 8003bf8:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8003c00 <__math_oflowf+0x8>
 8003bfc:	f7ff bfea 	b.w	8003bd4 <xflowf>
 8003c00:	70000000 	.word	0x70000000

08003c04 <_close>:
 8003c04:	4b02      	ldr	r3, [pc, #8]	@ (8003c10 <_close+0xc>)
 8003c06:	2258      	movs	r2, #88	@ 0x58
 8003c08:	601a      	str	r2, [r3, #0]
 8003c0a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003c0e:	4770      	bx	lr
 8003c10:	20000c28 	.word	0x20000c28

08003c14 <_fstat>:
 8003c14:	4b02      	ldr	r3, [pc, #8]	@ (8003c20 <_fstat+0xc>)
 8003c16:	2258      	movs	r2, #88	@ 0x58
 8003c18:	601a      	str	r2, [r3, #0]
 8003c1a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003c1e:	4770      	bx	lr
 8003c20:	20000c28 	.word	0x20000c28

08003c24 <_isatty>:
 8003c24:	4b02      	ldr	r3, [pc, #8]	@ (8003c30 <_isatty+0xc>)
 8003c26:	2258      	movs	r2, #88	@ 0x58
 8003c28:	601a      	str	r2, [r3, #0]
 8003c2a:	2000      	movs	r0, #0
 8003c2c:	4770      	bx	lr
 8003c2e:	bf00      	nop
 8003c30:	20000c28 	.word	0x20000c28

08003c34 <_lseek>:
 8003c34:	4b02      	ldr	r3, [pc, #8]	@ (8003c40 <_lseek+0xc>)
 8003c36:	2258      	movs	r2, #88	@ 0x58
 8003c38:	601a      	str	r2, [r3, #0]
 8003c3a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003c3e:	4770      	bx	lr
 8003c40:	20000c28 	.word	0x20000c28

08003c44 <_read>:
 8003c44:	4b02      	ldr	r3, [pc, #8]	@ (8003c50 <_read+0xc>)
 8003c46:	2258      	movs	r2, #88	@ 0x58
 8003c48:	601a      	str	r2, [r3, #0]
 8003c4a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003c4e:	4770      	bx	lr
 8003c50:	20000c28 	.word	0x20000c28

08003c54 <_write>:
 8003c54:	4b02      	ldr	r3, [pc, #8]	@ (8003c60 <_write+0xc>)
 8003c56:	2258      	movs	r2, #88	@ 0x58
 8003c58:	601a      	str	r2, [r3, #0]
 8003c5a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003c5e:	4770      	bx	lr
 8003c60:	20000c28 	.word	0x20000c28

08003c64 <_init>:
 8003c64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c66:	bf00      	nop
 8003c68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003c6a:	bc08      	pop	{r3}
 8003c6c:	469e      	mov	lr, r3
 8003c6e:	4770      	bx	lr

08003c70 <_fini>:
 8003c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c72:	bf00      	nop
 8003c74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003c76:	bc08      	pop	{r3}
 8003c78:	469e      	mov	lr, r3
 8003c7a:	4770      	bx	lr
